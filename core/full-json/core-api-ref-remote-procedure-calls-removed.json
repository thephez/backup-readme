{
 "metadata": {
  "image": [],
  "title": "",
  "description": ""
 },
 "api": {
  "method": "get",
  "url": "",
  "auth": "required",
  "results": {
   "codes": [
    {
     "status": 200,
     "language": "json",
     "code": "{}",
     "name": ""
    },
    {
     "status": 400,
     "language": "json",
     "code": "{}",
     "name": ""
    }
   ]
  },
  "params": []
 },
 "next": {
  "description": "",
  "pages": [
   {
    "type": "doc",
    "icon": "file-text-o",
    "name": "HTTP REST",
    "slug": "core-api-ref-http-rest",
    "category": "Core API Reference"
   }
  ]
 },
 "title": "Removed RPCs",
 "icon": "",
 "updates": [],
 "type": "basic",
 "slug": "core-api-ref-remote-procedure-calls-removed",
 "excerpt": "",
 "body": "# EstimateFee\n[block:callout]\n{\n  \"type\": \"danger\",\n  \"body\": \"**Warning:** **_Removed in Dash Core 0.17.0._**\"\n}\n[/block]\n\nThe [`estimatefee` RPC](core-api-ref-remote-procedure-calls-util#estimatefee) estimates the transaction fee per kilobyte that needs to be paid for a transaction to begin confirmation within a certain number of blocks.\n\n*Parameter #1---how many blocks the transaction may wait before being included*\n\nName | Type | Presence | Description\n--- | --- | --- | ---\nBlocks | number (int) | Required<br>(exactly 1) | The maximum number of blocks a transaction should have to wait before it is predicted to be included in a block. Has to be between 2 and 25 blocks\n\n*Result---the fee the transaction needs to pay per kilobyte*\n[block:callout]\n{\n  \"type\": \"danger\",\n  \"body\": \"If the node doesn't have enough information to make an estimate, the value `-1` will be returned.\",\n  \"title\": \"Inability to estimate\"\n}\n[/block]\nName | Type | Presence | Description\n--- | --- | --- | ---\n`result` | number (Dash) | Required<br>(exactly 1) | The estimated fee the transaction should pay in order to be included within the specified number of blocks.  \n\n*Examples from Dash Core 0.12.2*\n\n``` bash\ndash-cli estimatefee 6\n```\n\nResult:\n\n``` json\n0.00044345\n```\n\nRequesting data the node can't calculate (out of range):\n\n``` bash\ndash-cli estimatefee 100\n```\n\nResult:\n\n``` json\n-1\n```\n\n*See also*\n\n* [SetTxFee](/docs/core-api-ref-remote-procedure-calls-wallet#settxfee): sets the transaction fee per kilobyte paid by transactions created by this wallet.\n\n# GetPoolInfo\n\nThe [`getpoolinfo` RPC](#getpoolinfo) returns an object containing CoinJoin pool related information.\n\n*Parameters: none*\n\n*Result---information about the CoinJoin pool*\n\nName | Type | Presence | Description\n--- | --- | --- | ---\n`result` | object | Required<br>(exactly 1) | Information about the pool\n\u2192<br>`state` | string | Required<br>(exactly 1) | Pool state.  Will be one of the following:<br>\u2022 `IDLE` <br>\u2022 `QUEUE` <br>\u2022 `ACCEPTING_ENTRIES` <br>\u2022 `SIGNING` <br>\u2022 `ERROR` <br>\u2022 `SUCCESS` <br>\u2022 `UNKNOWN` <br>\n\u2192<br>`mixing_mode` | string | Required<br>(exactly 1) | One of the following:<br>\u2022 `normal` <br>\u2022 `multi-session` <br>\n\u2192<br>`queue` | number (int) | Required<br>(exactly 1) | Queue size\n\u2192<br>`entries` | number (int) | Required<br>(exactly 1) | The number of entries\n\u2192<br>`status` | string | Required<br>(exactly 1) | A more detailed description of the current state\n\u2192<br>`outpoint` | string (hex) | Optional<br>(exactly 1) | Previous output\n\u2192<br>`addr` | string | Optional<br>(exactly 1) | Address\n\u2192<br>`keys_left` | number (int) | Optional<br>(exactly 1) | The number of keys left in the local wallet\n\u2192<br>`warnings` | number (int) | Optional<br>(exactly 1) | Warnings related to local wallet\n\n*Example from Dash Core 0.12.2*\n\n``` bash\ndash-cli -testnet getpoolinfo\n```\n\nResult:\n``` json\n{\n  \"state\": \"IDLE\",\n  \"mixing_mode\": \"normal\",\n  \"queue\": 0,\n  \"entries\": 0,\n  \"status\": \"PrivateSend is idle.\",\n  \"keys_left\": 617,\n  \"warnings\": \"\"\n}\n```\n\n``` json\n{\n  \"state\": \"QUEUE\",\n  \"mixing_mode\": \"normal\",\n  \"queue\": 1,\n  \"entries\": 0,\n  \"status\": \"Submitted to masternode, waiting in queue .\",\n  \"outpoint\": \"e3a6b7878a7e9413898bb379b323c521676f9d460db17ec3bf42d9ac0c9a432f-1\",\n  \"addr\": \"217.182.229.146:19999\",\n  \"keys_left\": 571,\n  \"warnings\": \"\"\n}\n```\n\n``` json\n{\n  \"state\": \"ERROR\",\n  \"mixing_mode\": \"normal\",\n  \"queue\": 0,\n  \"entries\": 0,\n  \"status\": \"PrivateSend request incomplete: Session timed out. Will retry...\",\n  \"keys_left\": 571,\n  \"warnings\": \"\"\n}\n```\n\n*See also:*\n\n# GetReceivedByAccount\n[block:callout]\n{\n  \"type\": \"danger\",\n  \"body\": \"**Warning:** **_Removed in Dash Core 18.0.0_**\"\n}\n[/block]\n\n[block:callout]\n{\n  \"type\": \"info\",\n  \"body\": \"Requires <<glossary:wallet>> support (**unavailable on masternodes**)\"\n}\n[/block]\nThe [`getreceivedbyaccount` RPC](core-api-ref-remote-procedure-calls-wallet-deprecated#getreceivedbyaccount) returns the total amount received by addresses in a particular account from transactions with the specified number of confirmations.  It does not count coinbase transactions.\n\n*Parameter #1---the account name*\n\nName | Type | Presence | Description\n--- | --- | --- | ---\nAccount | string | Required<br>(exactly 1) | The name of the account containing the addresses to get.  For the default account, use an empty string (\\\\\")\"\n\n*Parameter #2---the minimum number of confirmations*\n\nName | Type | Presence | Description\n--- | --- | --- | ---\nConfirmations | number (int) | Optional<br>(0 or 1) | The minimum number of confirmations an externally-generated transaction must have before it is counted towards the balance.  Transactions generated by this node are counted immediately.  Typically, externally-generated transactions are payments to this wallet and transactions generated by this node are payments to other wallets.  Use `0` to count unconfirmed transactions.  Default is `1`\n\n*Parameter #3---whether to include transactions locked via InstantSend*\n\nName | Type | Presence | Description\n--- | --- | --- | ---\naddlocked | bool | Optional<br>(exactly 1) | Add the balance from InstantSend locked transactions (default=false)\n\n*Result---the number of dash received*\n\nName | Type | Presence | Description\n--- | --- | --- | ---\n`result` | number (dash) | Required<br>(exactly 1) | The number of dash received by the account.  May be `0`\n\n*Example from Dash Core 0.12.2*\n\nGet the dash received by the \"doc test\" account with six or more\nconfirmations:\n\n``` bash\ndash-cli -testnet getreceivedbyaccount \"doc test\" 6\n```\n\nResult:\n\n``` json\n0.30000000\n```\n\n*See also*\n\n* [GetReceivedByAddress](/docs/core-api-ref-remote-procedure-calls-wallet#getreceivedbyaddress): returns the total amount received by the specified address in transactions with the specified number of confirmations. It does not count coinbase transactions.\n* [GetAddressesByAccount](/docs/core-api-ref-remote-procedure-calls-wallet-deprecated#getaddressesbyaccount): returns a list of every address assigned to a particular account.\n* [ListAccounts](/docs/core-api-ref-remote-procedure-calls-wallet-deprecated#listaccounts): lists accounts and their balances.\n\n# KeePass\n\n[block:callout]\n{\n  \"type\": \"danger\",\n  \"body\": \"**Warning:** **_Removed in Dash Core 18.0.0_**\"\n}\n[/block]\n\nThe [`keepass` RPC](core-api-ref-remote-procedure-calls-wallet#keepass) provides commands for configuring and managing KeePass authentication\n\n*Parameter #1---Command mode*\n\nName | Type | Presence | Description\n--- | --- | --- | ---\n`mode` | string | Required (exactly 1) | The command mode to use:<br>`genkey`,<br>`init`,<br>`setpassphrase`\n\n*Command Options*\n\nMode | Description\n--- | --- | --- |\n`genkey` | Generates a base64 encoded 256 bit AES key that can be used for the communication with KeePassHttp. This is only necessary for manual configuration.\n`init` | Sets up the association between Dash Core and KeePass by generating an AES key and sending an association message to KeePassHttp. This will trigger KeePass to ask for an Id for the association. Returns the association and the base64 encoded string for the AES key.\n`setpassphrase` | Updates the passphrase in KeePassHttp to a new value. This should match the passphrase you intend to use for the wallet. Please note that the standard RPC commands walletpassphrasechange and the wallet encryption from the QT GUI already send the updates to KeePassHttp, so this is only necessary for manual manipulation of the password.\n\n**Command Mode - `genkey`**\n\n*Result---the new key*\n\nName | Type | Presence | Description\n--- | --- | --- | ---\nResult | string (base64) | Required (exactly 1) | The new key\n\n*Example from Dash Core 0.12.2*\n\nManually generate a key\n\n```bash\ndash-cli -testnet keepass genkey\n```\n\nResult:\n\n```bash\nGenerated Key: dNjo+J8Jb30txbJiKq4s9H6vEgWq/whb1w9bb2cTOFo=\n```\n\n**Command Mode - `init`**\n\n*Result---initialization response*\n\nName | Type | Presence | Description\n--- | --- | --- | ---\nResult | string | Required (exactly 1) | The success/error status\n\n*Example from Dash Core 0.12.2*\n\nAutomatically initialize\n\n```bash\ndash-cli -testnet keepass init\n```\n\nResult (wrapped):\n```bash\nAssociation successful. Id: testwalletassociation - \\\nKey: MSb+JLygqz7ZH40SyJ1QR62i00IXoa3tmT85MGGI2K0=\n```\n\n**Command Mode - `setpassphrase`**\n\n*Parameter #2---Passphrase*\n\nName | Type | Presence | Description\n--- | --- | --- | ---\nPassphrase | string | Required (exactly 1) | The passphrase to set\n\n*Result---status*\n\nName | Type | Presence | Description\n--- | --- | --- | ---\nResult | string | Required (exactly 1) | The success/error status\n\n*Example from Dash Core 0.12.2*\n\nSet KeePass passphrase\n\n```bash\ndash-cli -testnet keepass setpassphrase 1BWi20Xyk76uWumxJQy4\n```\n\nResult:\n```bash\nsetlogin: Updated credentials.\n```\n\n*See also: none*\n\n\n\n# ListAccounts\n[block:callout]\n{\n  \"type\": \"danger\",\n  \"body\": \"**Warning:** **_Removed in Dash Core 18.0.0_**\"\n}\n[/block]\n\n[block:callout]\n{\n  \"type\": \"info\",\n  \"body\": \"Requires <<glossary:wallet>> support (**unavailable on masternodes**)\"\n}\n[/block]\nThe [`listaccounts` RPC](core-api-ref-remote-procedure-calls-wallet-deprecated#listaccounts) lists accounts and their balances.\n\n*Parameter #1---the minimum number of confirmations a transaction must have*\n\nName | Type | Presence | Description\n--- | --- | --- | ---\nConfirmations | number (int) | Optional<br>(0 or 1) | The minimum number of confirmations an externally-generated transaction must have before it is counted towards the balance.  Transactions generated by this node are counted immediately.  Typically, externally-generated transactions are payments to this wallet and transactions generated by this node are payments to other wallets.  Use `0` to count unconfirmed transactions.  Default is `1`\n\n*Parameter #2--- whether to include transactions locked via InstantSend*\n\nName | Type | Presence | Description\n--- | --- | --- | ---\naddlocked | bool | Optional<br>(exactly 1) | Add the balance from InstantSend locked transactions\n\n*Parameter #3---whether to include watch-only addresses in results*\n\nName | Type | Presence | Description\n--- | --- | --- | ---\nInclude Watch-Only | bool | Optional<br>(0 or 1) | If set to `true`, include watch-only addresses in details and calculations as if they were regular addresses belonging to the wallet.  If set to `false` (the default), treat watch-only addresses as if they didn't belong to this wallet\n\n*Result---a list of accounts and their balances*\n\nName | Type | Presence | Description\n--- | --- | --- | ---\n`result` | object | Required<br>(exactly 1) | A JSON array containing key/value pairs with account names and values.  Must include, at the very least, the default account (\\\\\")\"\n\u2192<br>Account : Balance | string : number (dash) | Required<br>(1 or more) | The name of an account as a string paired with the balance of the account as a number of dash.  The number of dash may be negative if the account has spent more dash than it received.  Accounts with zero balances and zero transactions will be displayed\n\n*Example from Dash Core 0.13.0*\n\nDisplay account balances with one confirmation and watch-only addresses\nincluded. Add the balance of InstantSend locked transactions also.\n\n``` bash\ndash-cli -testnet listaccounts 1 true true\n```\n\nResult:\n\n``` json\n{\n  \"\": -2941.30029732,\n  \"Watching\": 8.50000000,\n  \"MN\": 2000.25442744,\n  \"PS\": 37.02970000,\n  \"Recv1\": 3843.48167912,\n}\n```\n\n*See also*\n\n* [GetAccount](/docs/core-api-ref-remote-procedure-calls-wallet-deprecated#getaccount): returns the name of the account associated with the given address.\n* [GetAddressesByAccount](/docs/core-api-ref-remote-procedure-calls-wallet-deprecated#getaddressesbyaccount): returns a list of every address assigned to a particular account.\n* [ListReceivedByAccount](/docs/core-api-ref-remote-procedure-calls-wallet-deprecated#listreceivedbyaccount): lists the total number of dash received by each account.\n* [ListReceivedByLabel](core-api-ref-remote-procedure-calls-wallet#listreceivedbylabel): lists the total number of dash received by each label.\n\n# ListReceivedByAccount\n[block:callout]\n{\n  \"type\": \"danger\",\n  \"body\": \"**Warning:** **_Removed in Dash Core 18.0.0_**\"\n}\n[/block]\n\n[block:callout]\n{\n  \"type\": \"info\",\n  \"body\": \"Requires <<glossary:wallet>> support (**unavailable on masternodes**)\"\n}\n[/block]\nThe [`listreceivedbyaccount` RPC](core-api-ref-remote-procedure-calls-wallet-deprecated#listreceivedbyaccount) lists the total number of dash received by each account.\n\n*Parameter #1---the minimum number of confirmations a transaction must have to be counted*\n\nName | Type | Presence | Description\n--- | --- | --- | ---\nConfirmations | number (int) | Optional<br>(0 or 1) | The minimum number of confirmations an externally-generated transaction must have before it is counted towards the balance.  Transactions generated by this node are counted immediately.  Typically, externally-generated transactions are payments to this wallet and transactions generated by this node are payments to other wallets.  Use `0` to count unconfirmed transactions.  Default is `1`\n\n*Parameter #2---whether to include transactions locked via InstantSend*\n\nName | Type | Presence | Description\n--- | --- | --- | ---\naddlocked | bool | Optional<br>(exactly 1) | Add the balance from InstantSend locked transactions\n\n*Parameter #3---whether to include empty accounts*\n\nName | Type | Presence | Description\n--- | --- | --- | ---\nInclude Empty | bool | Optional<br>(0 or 1) | Set to `true` to display accounts which have never received a payment.  Set to `false` (the default) to only include accounts which have received a payment.  Any account which has received a payment will be displayed even if its current balance is `0`\n\n*Parameter #4---whether to include watch-only addresses in results*\n\nName | Type | Presence | Description\n--- | --- | --- | ---\nInclude Watch-Only | bool | Optional<br>(0 or 1) | If set to `true`, include watch-only addresses in details and calculations as if they were regular addresses belonging to the wallet.  If set to `false` (the default), treat watch-only addresses as if they didn't belong to this wallet\n\n*Result---account names, balances, and minimum confirmations*\n\nName | Type | Presence | Description\n--- | --- | --- | ---\n`result` | array | Required<br>(exactly 1) | An array containing objects each describing an account.  At the very least, the default account (\\\\\") will be included\"\n\u2192<br>Account | object | Required<br>(1 or more) | An object describing an account\n\u2192 \u2192<br>`involvesWatchonly` | bool | Optional<br>(0 or 1) | Set to `true` if the balance of this account includes a watch-only address which has received a spendable payment (that is, a payment with at least the specified number of confirmations and which is not an immature coinbase).  Otherwise not returned\n\u2192 \u2192<br>`account` | string | Required<br>(exactly 1) | The name of the account\n\u2192 \u2192<br>`amount` | number (dash) | Required<br>(exactly 1) | The total amount received by this account in dash\n\u2192 \u2192<br>`confirmations` | number (int) | Required<br>(exactly 1) | The number of confirmations received by the last transaction received by this account.  May be `0`\n\u2192 \u2192<br>`label` | string | Optional<br>(0 or 1) | A comment for the address/transaction\n\n*Example from Dash Core 0.13.0*\n\nGet the balances for all non-empty accounts, including transactions\nwhich have been confirmed at least six times and InstantSend locked transactions:\n\n``` bash\ndash-cli -testnet listreceivedbyaccount 6 true false true\n```\n\nResult (edited to only show the first two results):\n\n``` json\n[\n    {\n        \"account\" : \"\",\n        \"amount\" : 0.19960000,\n        \"confirmations\" : 53601\n    },\n    {\n        \"account\" : \"doc test\",\n        \"amount\" : 0.30000000,\n        \"confirmations\" : 8991\n    }\n]\n```\n\n*See also*\n\n* [ListReceivedByAddress](/docs/core-api-ref-remote-procedure-calls-wallet#listreceivedbyaddress): lists the total number of dash received by each address.\n* [ListReceivedByLabel](core-api-ref-remote-procedure-calls-wallet#listreceivedbylabel): lists the total number of dash received by each label.\n* [GetReceivedByAccount](/docs/core-api-ref-remote-procedure-calls-wallet-deprecated#getreceivedbyaccount): returns the total amount received by addresses in a particular account from transactions with the specified number of confirmations.  It does not count coinbase transactions.\n* [GetReceivedByAddress](/docs/core-api-ref-remote-procedure-calls-wallet#getreceivedbyaddress): returns the total amount received by the specified address in transactions with the specified number of confirmations. It does not count coinbase transactions.\n\n# Move\n[block:callout]\n{\n  \"type\": \"danger\",\n  \"body\": \"**Warning:** **_Removed in Dash Core 18.0.0_**\"\n}\n[/block]\n\n[block:callout]\n{\n  \"type\": \"info\",\n  \"body\": \"Requires <<glossary:wallet>> support (**unavailable on masternodes**)\"\n}\n[/block]\nThe [`move` RPC](core-api-ref-remote-procedure-calls-wallet-deprecated#move) moves a specified amount from one account in your wallet to another using an off-block-chain transaction.\n[block:callout]\n{\n  \"type\": \"warning\",\n  \"body\": \"**Warning:** it's possible to move more funds than are in an account, giving the sending account a negative balance and giving the receiving account a balance that may exceed the number of dash in the wallet (or the number of dash in existence).\"\n}\n[/block]\n*Parameter #1---from account*\n\nName | Type | Presence | Description\n--- | --- | --- | ---\nFrom Account | string | Required<br>(exactly 1) | The name of the account to move the funds from\n\n*Parameter #2---to account*\n\nName | Type | Presence | Description\n--- | --- | --- | ---\nTo Account | string | Required<br>(exactly 1) | The name of the account to move the funds to\n\n*Parameter #3---amount to move*\n\nName | Type | Presence | Description\n--- | --- | --- | ---\nAmount | number (dash) | Required<br>(exactly 1) | The amount of dash to move\n\n*Parameter #4---an unused parameter*\n\nName | Type | Presence | Description\n--- | --- | --- | ---\n*Unused* | number (int) | Optional<br>(0 or 1) | This parameter is no longer used. If parameter #5 needs to be specified, this can be any integer\n\n*Parameter #5---a comment*\n\nName | Type | Presence | Description\n--- | --- | --- | ---\nComment | string | Optional<br>(0 or 1) | A comment to assign to this move payment\n\n*Result---`true` on success*\n\nName | Type | Presence | Description\n--- | --- | --- | ---\n`result` | bool | Required<br>(exactly 1) | Set to `true` if the move was successful\n\n*Example from Dash Core 0.12.2*\n\nMove 1 dash from \"doc test\" to \"test1\", giving the transaction the\ncomment \"Example move\":\n\n``` bash\ndash-cli -testnet move \"doc test\" \"test1\" 0.1 0 \"Example move\"\n```\n\nResult:\n\n``` json\ntrue\n```\n\n*See also*\n\n* [ListAccounts](/docs/core-api-ref-remote-procedure-calls-wallet-deprecated#listaccounts): lists accounts and their balances.\n* [SendFrom](/docs/core-api-ref-remote-procedure-calls-wallet-deprecated#sendfrom): spends an amount from a local account to a dash address.\n* [SendToAddress](/docs/core-api-ref-remote-procedure-calls-wallet#sendtoaddress): spends an amount to a given address.\n\n# SendFrom\n[block:callout]\n{\n  \"type\": \"danger\",\n  \"body\": \"**Warning:** **_Removed in Dash Core 18.0.0_**\"\n}\n[/block]\n\n[block:callout]\n{\n  \"type\": \"info\",\n  \"body\": \"Requires <<glossary:wallet>> support (**unavailable on masternodes**). Requires an unlocked wallet or an unencrypted wallet.\"\n}\n[/block]\nThe [`sendfrom` RPC](core-api-ref-remote-procedure-calls-wallet-deprecated#sendfrom) spends an amount from a local account to a dash address.\n\n*Parameter #1---from account*\n\nName | Type | Presence | Description\n--- | --- | --- | ---\nFrom Account | string | Required<br>(exactly 1) | The name of the account from which the dash should be spent.  Use an empty string (\\\\\") for the default account\"\n\n*Parameter #2---to address*\n\nName | Type | Presence | Description\n--- | --- | --- | ---\nTo Address | string | Required<br>(exactly 1) | A P2PKH or P2SH address to which the dash should be sent\n\n*Parameter #3---amount to spend*\n\nName | Type | Presence | Description\n--- | --- | --- | ---\nAmount | number (dash) | Required<br>(exactly 1) | The amount to spend in dash.  Dash Core will ensure the account has sufficient dash to pay this amount (but the transaction fee paid is not included in the calculation, so an account can spend a total of its balance plus the transaction fee)\n\n*Parameter #4---minimum confirmations*\n\nName | Type | Presence | Description\n--- | --- | --- | ---\nConfirmations | number (int) | Optional<br>(0 or 1) | The minimum number of confirmations an incoming transaction must have for its outputs to be credited to this account's balance. Outgoing transactions are always counted, as are move transactions made with the [`move` RPC](core-api-ref-remote-procedure-calls-wallet-deprecated#move). If an account doesn't have a balance high enough to pay for this transaction, the payment will be rejected.  Use `0` to spend unconfirmed incoming payments. Default is `1`\n[block:callout]\n{\n  \"type\": \"warning\",\n  \"body\": \"**Warning:** if account1 receives an unconfirmed payment and transfers it to account2 with the [`move` RPC](core-api-ref-remote-procedure-calls-wallet-deprecated#move), account2 will be able to spend those dash even if this parameter is set to `1` or higher.\"\n}\n[/block]\n*Parameter #5---whether to add the balance from transactions locked via InstantSend*\n\nName | Type | Presence | Description\n--- | --- | --- | ---\naddlocked | bool | Optional<br>(0 or 1) | If set to `true`, add the balance from InstantSend locked transactions. If set to `false` (the default), InstantSend locked transaction balances are not included.\n\n*Parameter #6---a comment*\n\nName | Type | Presence | Description\n--- | --- | --- | ---\nComment | string | Optional<br>(0 or 1) | A locally-stored (not broadcast) comment assigned to this transaction.  Default is no comment\n\n*Parameter #7---a comment about who the payment was sent to*\n\nName | Type | Presence | Description\n--- | --- | --- | ---\nComment To | string | Optional<br>(0 or 1) | A locally-stored (not broadcast) comment assigned to this transaction.  Meant to be used for describing who the payment was sent to. Default is no comment\n\n*Result---a TXID of the sent transaction*\n\nName | Type | Presence | Description\n--- | --- | --- | ---\n`result` | string | Required<br>(exactly 1) | The TXID of the sent transaction, encoded as hex in RPC byte order\n\n*Example from Dash Core 0.12.2*\n\nSpend 0.1 dash from the account \"test\" to the address indicated below\nusing only UTXOs with at least six confirmations, giving the\ntransaction the comment \"Example spend\" and labeling the spender\n\"Example.com\":\n\n``` bash\ndash-cli -testnet sendfrom \"test\" \\\n            yhJays6zGUFKq1KS5V5WLbyk3cwCXyGrKd \\\n            0.1 \\\n            6 \\\n            false \\\n            \"Example spend\" \\\n            \"Example.com\"\n```\n\nResult:\n\n``` text\ncd64b9d55c63bf247f2eca32f978e340622107b607a46c422dabcdc20c0571fe\n```\n\n*See also*\n\n* [SendToAddress](/docs/core-api-ref-remote-procedure-calls-wallet#sendtoaddress): spends an amount to a given address.\n* [SendMany](/docs/core-api-ref-remote-procedure-calls-wallet#sendmany): creates and broadcasts a transaction which sends outputs to multiple addresses.\n\n# SignRawTransaction\n[block:callout]\n{\n  \"type\": \"danger\",\n  \"title\": \"\",\n  \"body\": \"**Warning:** **_Removed in Dash Core 18.0.0_**\"\n}\n[/block]\nThe [`signrawtransaction` RPC](core-api-ref-remote-procedure-calls-raw-transactions#signrawtransaction) signs a transaction in the serialized transaction format using private keys stored in the wallet or provided in the call.\n\n*Parameter #1---the transaction to sign*\n\nName | Type | Presence | Description\n--- | --- | --- | ---\nTransaction | string (hex) | Required<br>(exactly 1) | The transaction to sign as a serialized transaction\n\n*Parameter #2---unspent transaction output details*\n\nName | Type | Presence | Description\n--- | --- | --- | ---\nDependencies | array | Optional<br>(0 or 1) | The previous outputs being spent by this transaction\n\u2192<br>Output | object | Optional<br>(0 or more) | An output being spent\n\u2192 \u2192<br>`txid` | string (hex) | Required<br>(exactly 1) | The TXID of the transaction the output appeared in.  The TXID must be encoded in hex in RPC byte order\n\u2192 \u2192<br>`vout` | number (int) | Required<br>(exactly 1) | The index number of the output (vout) as it appeared in its transaction, with the first output being 0\n\u2192 \u2192<br>`scriptPubKey` | string (hex) | Required<br>(exactly 1) | The output's pubkey script encoded as hex\n\u2192 \u2192<br>`redeemScript` | string (hex) | Optional<br>(0 or 1) | If the pubkey script was a script hash, this must be the corresponding redeem script\n\u2192 \u2192<br>`amount` | numeric | Required<br>(exactly 1) | The amount of Dash spent\n\n*Parameter #3---private keys for signing*\n\nName | Type | Presence | Description\n--- | --- | --- | ---\nPrivate Keys | array | Optional<br>(0 or 1) | An array holding private keys.  If any keys are provided, only they will be used to sign the transaction (even if the wallet has other matching keys).  If this array is empty or not used, and wallet support is enabled, keys from the wallet will be used\n\u2192<br>Key | string (base58) | Required<br>(1 or more) | A private key in base58check format to use to create a signature for this transaction\n\n*Parameter #4---signature hash type*\n\nName | Type | Presence | Description\n--- | --- | --- | ---\nSigHash | string | Optional<br>(0 or 1) | The type of signature hash to use for all of the signatures performed.  (You must use separate calls to the [`signrawtransaction` RPC](core-api-ref-remote-procedure-calls-raw-transactions#signrawtransaction) if you want to use different signature hash types for different signatures.  The allowed values are: `ALL`, `NONE`, `SINGLE`, `ALL|ANYONECANPAY`, `NONE|ANYONECANPAY`, and `SINGLE|ANYONECANPAY`\n\n*Result---the transaction with any signatures made*\n\nName | Type | Presence | Description\n--- | --- | --- | ---\n`result` | object | Required<br>(exactly 1) | The results of the signature\n\u2192<br>`hex` | string (hex) | Required<br>(exactly 1) | The resulting serialized transaction encoded as hex with any signatures made inserted.  If no signatures were made, this will be the same transaction provided in parameter #1\n\u2192<br>`complete` | bool | Required<br>(exactly 1) | The value `true` if transaction is fully signed; the value `false` if more signatures are required\n\n*Example from Dash Core 0.12.2*\n\nSign the hex generated in the example section for the `createrawtransaction`\nRPC:\n\n``` bash\ndash-cli -testnet signrawtransaction 01000000016b490886c0198b028c6c5cb14\\\n5c4eb3b1055a224a7a105aadeff41b69ec91e060100000000ffffffff0200205fa012000\\\n0001976a914485485425fa99504ec1638ac4213f3cfc9f32ef388acc0a8f9be010000001\\\n976a914811eacc14db8ebb5b64486dc43400c0226b428a488ac00000000\n```\n\nResult:\n\n``` json\n{\n  \"hex\": \"01000000016b490886c0198b028c6c5cb145c4eb3b1055a224a7a105aadeff41b69ec91e060100000069463043022033a61c56fa0867ed67b76b023204a9dc0ee6b0d63305dc5f65fe94335445ff2f021f712f55399d5238fc7146497c431fc4182a1de0b96fc22716e0845f561d542e012102eacba539d92eb88d4e73bb32749d79f53f6e8d7947ac40a71bd4b26c13b6ec29ffffffff0200205fa0120000001976a914485485425fa99504ec1638ac4213f3cfc9f32ef388acc0a8f9be010000001976a914811eacc14db8ebb5b64486dc43400c0226b428a488ac00000000\",\n  \"complete\": true\n}\n```\n\n*See also*\n\n* [CombineRawTransaction](/docs/core-api-ref-remote-procedure-calls-raw-transactions#combinerawtransaction): combine multiple partially signed transactions into one transaction.\n* [CreateRawTransaction](/docs/core-api-ref-remote-procedure-calls-raw-transactions#createrawtransaction): creates an unsigned serialized transaction that spends a previous output to a new output with a P2PKH or P2SH address. The transaction is not stored in the wallet or transmitted to the network.\n* [DecodeRawTransaction](/docs/core-api-ref-remote-procedure-calls-raw-transactions#decoderawtransaction): decodes a serialized transaction hex string into a JSON object describing the transaction.\n* [SendRawTransaction](/docs/core-api-ref-remote-procedure-calls-raw-transactions#sendrawtransaction): validates a transaction and broadcasts it to the peer-to-peer network.\n* [SignRawTransactionWithKey](#signrawtransactionwithkey): signs inputs for a transaction in the serialized transaction format using private keys provided in the call.",
 "order": 13,
 "isReference": false,
 "deprecated": false,
 "hidden": false,
 "sync_unique": "",
 "link_url": "",
 "link_external": false,
 "pendingAlgoliaPublish": false,
 "previousSlug": "",
 "slugUpdatedAt": "2020-12-09T02:11:31.030Z",
 "_id": "61549206c31f6b00207cf2a3",
 "version": "61549206c31f6b00207cf2be",
 "updatedAt": "2022-04-20T15:19:56.118Z",
 "createdAt": "2019-10-29T14:29:36.648Z",
 "project": "5daf2e65f4109c0040fd51e1",
 "user": "5b8400d7185d5e00036dcc3b",
 "parentDoc": "61549206c31f6b00207cf270",
 "category": "61549205c31f6b00207cf235",
 "__v": 1,
 "isApi": false,
 "id": "61549206c31f6b00207cf2a3",
 "body_html": "<div class=\"magic-block-textarea\"><h1 class=\"header-scroll\"><div class=\"anchor waypoint\" id=\"section-estimate-fee\"></div>EstimateFee<a class=\"fa fa-anchor\" href=\"#section-estimate-fee\"></a></h1>\n\n</div>\n<div class=\"magic-block-callout type-danger no-title\"><span class=\"noTitleIcon\"><i title=\"Danger\" class=\"fa fa-exclamation-triangle\"></i></span>\n\t<div class=\"callout-body\"><p><strong>Warning:</strong> <strong><em>Removed in Dash Core 0.17.0.</em></strong></p>\n\n\t</div>\n</div>\n<div class=\"magic-block-textarea\"><p>The <a href=\"core-api-ref-remote-procedure-calls-util#estimatefee\"><code>estimatefee</code> RPC</a> estimates the transaction fee per kilobyte that needs to be paid for a transaction to begin confirmation within a certain number of blocks.</p>\n<p><em>Parameter #1---how many blocks the transaction may wait before being included</em></p>\n<div class=\"marked-table\"><table>\n<thead>\n<tr>\n<th>Name</th>\n<th>Type</th>\n<th>Presence</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Blocks</td>\n<td>number (int)</td>\n<td>Required<br>(exactly 1)</td>\n<td>The maximum number of blocks a transaction should have to wait before it is predicted to be included in a block. Has to be between 2 and 25 blocks</td>\n</tr>\n</tbody>\n</table></div>\n<p><em>Result---the fee the transaction needs to pay per kilobyte</em></p>\n\n</div>\n<div class=\"magic-block-callout type-danger \">\n\t<h3><i title=\"Danger\" class=\"fa fa-exclamation-triangle\"></i>Inability to estimate\n\t</h3>\n\t<div class=\"callout-body\"><p>If the node doesn&#39;t have enough information to make an estimate, the value <code>-1</code> will be returned.</p>\n\n\t</div>\n</div>\n<div class=\"magic-block-textarea\"><div class=\"marked-table\"><table>\n<thead>\n<tr>\n<th>Name</th>\n<th>Type</th>\n<th>Presence</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>result</code></td>\n<td>number (Dash)</td>\n<td>Required<br>(exactly 1)</td>\n<td>The estimated fee the transaction should pay in order to be included within the specified number of blocks.  </td>\n</tr>\n</tbody>\n</table></div>\n<p><em>Examples from Dash Core 0.12.2</em></p>\n<pre><code class=\"lang-bash\"><span class='cm-s-neo'>dash-cli estimatefee <span class=\"cm-number\">6</span></span>\n</code></pre>\n<p>Result:</p>\n<pre><code class=\"lang-json\"><span class='cm-s-neo'><span class=\"cm-number\">0.00044345</span></span>\n</code></pre>\n<p>Requesting data the node can&#39;t calculate (out of range):</p>\n<pre><code class=\"lang-bash\"><span class='cm-s-neo'>dash-cli estimatefee <span class=\"cm-number\">100</span></span>\n</code></pre>\n<p>Result:</p>\n<pre><code class=\"lang-json\"><span class='cm-s-neo'><span class=\"cm-operator\">-</span><span class=\"cm-number\">1</span></span>\n</code></pre>\n<p><em>See also</em></p>\n<ul>\n<li ><a href=\"/docs/core-api-ref-remote-procedure-calls-wallet#settxfee\">SetTxFee</a>: sets the transaction fee per kilobyte paid by transactions created by this wallet.</li></ul>\n<h1 class=\"header-scroll\"><div class=\"anchor waypoint\" id=\"section-get-pool-info\"></div>GetPoolInfo<a class=\"fa fa-anchor\" href=\"#section-get-pool-info\"></a></h1>\n<p>The <a href=\"#getpoolinfo\"><code>getpoolinfo</code> RPC</a> returns an object containing CoinJoin pool related information.</p>\n<p><em>Parameters: none</em></p>\n<p><em>Result---information about the CoinJoin pool</em></p>\n<div class=\"marked-table\"><table>\n<thead>\n<tr>\n<th>Name</th>\n<th>Type</th>\n<th>Presence</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>result</code></td>\n<td>object</td>\n<td>Required<br>(exactly 1)</td>\n<td>Information about the pool</td>\n</tr>\n<tr>\n<td>\u2192<br><code>state</code></td>\n<td>string</td>\n<td>Required<br>(exactly 1)</td>\n<td>Pool state.  Will be one of the following:<br>\u2022 <code>IDLE</code> <br>\u2022 <code>QUEUE</code> <br>\u2022 <code>ACCEPTING_ENTRIES</code> <br>\u2022 <code>SIGNING</code> <br>\u2022 <code>ERROR</code> <br>\u2022 <code>SUCCESS</code> <br>\u2022 <code>UNKNOWN</code> <br></td>\n</tr>\n<tr>\n<td>\u2192<br><code>mixing_mode</code></td>\n<td>string</td>\n<td>Required<br>(exactly 1)</td>\n<td>One of the following:<br>\u2022 <code>normal</code> <br>\u2022 <code>multi-session</code> <br></td>\n</tr>\n<tr>\n<td>\u2192<br><code>queue</code></td>\n<td>number (int)</td>\n<td>Required<br>(exactly 1)</td>\n<td>Queue size</td>\n</tr>\n<tr>\n<td>\u2192<br><code>entries</code></td>\n<td>number (int)</td>\n<td>Required<br>(exactly 1)</td>\n<td>The number of entries</td>\n</tr>\n<tr>\n<td>\u2192<br><code>status</code></td>\n<td>string</td>\n<td>Required<br>(exactly 1)</td>\n<td>A more detailed description of the current state</td>\n</tr>\n<tr>\n<td>\u2192<br><code>outpoint</code></td>\n<td>string (hex)</td>\n<td>Optional<br>(exactly 1)</td>\n<td>Previous output</td>\n</tr>\n<tr>\n<td>\u2192<br><code>addr</code></td>\n<td>string</td>\n<td>Optional<br>(exactly 1)</td>\n<td>Address</td>\n</tr>\n<tr>\n<td>\u2192<br><code>keys_left</code></td>\n<td>number (int)</td>\n<td>Optional<br>(exactly 1)</td>\n<td>The number of keys left in the local wallet</td>\n</tr>\n<tr>\n<td>\u2192<br><code>warnings</code></td>\n<td>number (int)</td>\n<td>Optional<br>(exactly 1)</td>\n<td>Warnings related to local wallet</td>\n</tr>\n</tbody>\n</table></div>\n<p><em>Example from Dash Core 0.12.2</em></p>\n<pre><code class=\"lang-bash\"><span class='cm-s-neo'>dash-cli <span class=\"cm-attribute\">-testnet</span> getpoolinfo</span>\n</code></pre>\n<p>Result:</p>\n<pre><code class=\"lang-json\"><span class='cm-s-neo'>{\n  <span class=\"cm-property\">\"state\"</span>: <span class=\"cm-string\">\"IDLE\"</span>,\n  <span class=\"cm-property\">\"mixing_mode\"</span>: <span class=\"cm-string\">\"normal\"</span>,\n  <span class=\"cm-property\">\"queue\"</span>: <span class=\"cm-number\">0</span>,\n  <span class=\"cm-property\">\"entries\"</span>: <span class=\"cm-number\">0</span>,\n  <span class=\"cm-property\">\"status\"</span>: <span class=\"cm-string\">\"PrivateSend is idle.\"</span>,\n  <span class=\"cm-property\">\"keys_left\"</span>: <span class=\"cm-number\">617</span>,\n  <span class=\"cm-property\">\"warnings\"</span>: <span class=\"cm-string\">\"\"</span>\n}</span>\n</code></pre>\n<pre><code class=\"lang-json\"><span class='cm-s-neo'>{\n  <span class=\"cm-property\">\"state\"</span>: <span class=\"cm-string\">\"QUEUE\"</span>,\n  <span class=\"cm-property\">\"mixing_mode\"</span>: <span class=\"cm-string\">\"normal\"</span>,\n  <span class=\"cm-property\">\"queue\"</span>: <span class=\"cm-number\">1</span>,\n  <span class=\"cm-property\">\"entries\"</span>: <span class=\"cm-number\">0</span>,\n  <span class=\"cm-property\">\"status\"</span>: <span class=\"cm-string\">\"Submitted to masternode, waiting in queue .\"</span>,\n  <span class=\"cm-property\">\"outpoint\"</span>: <span class=\"cm-string\">\"e3a6b7878a7e9413898bb379b323c521676f9d460db17ec3bf42d9ac0c9a432f-1\"</span>,\n  <span class=\"cm-property\">\"addr\"</span>: <span class=\"cm-string\">\"217.182.229.146:19999\"</span>,\n  <span class=\"cm-property\">\"keys_left\"</span>: <span class=\"cm-number\">571</span>,\n  <span class=\"cm-property\">\"warnings\"</span>: <span class=\"cm-string\">\"\"</span>\n}</span>\n</code></pre>\n<pre><code class=\"lang-json\"><span class='cm-s-neo'>{\n  <span class=\"cm-property\">\"state\"</span>: <span class=\"cm-string\">\"ERROR\"</span>,\n  <span class=\"cm-property\">\"mixing_mode\"</span>: <span class=\"cm-string\">\"normal\"</span>,\n  <span class=\"cm-property\">\"queue\"</span>: <span class=\"cm-number\">0</span>,\n  <span class=\"cm-property\">\"entries\"</span>: <span class=\"cm-number\">0</span>,\n  <span class=\"cm-property\">\"status\"</span>: <span class=\"cm-string\">\"PrivateSend request incomplete: Session timed out. Will retry...\"</span>,\n  <span class=\"cm-property\">\"keys_left\"</span>: <span class=\"cm-number\">571</span>,\n  <span class=\"cm-property\">\"warnings\"</span>: <span class=\"cm-string\">\"\"</span>\n}</span>\n</code></pre>\n<p><em>See also:</em></p>\n<h1 class=\"header-scroll\"><div class=\"anchor waypoint\" id=\"section-get-received-by-account\"></div>GetReceivedByAccount<a class=\"fa fa-anchor\" href=\"#section-get-received-by-account\"></a></h1>\n\n</div>\n<div class=\"magic-block-callout type-danger no-title\"><span class=\"noTitleIcon\"><i title=\"Danger\" class=\"fa fa-exclamation-triangle\"></i></span>\n\t<div class=\"callout-body\"><p><strong>Warning:</strong> <strong><em>Removed in Dash Core 18.0.0</em></strong></p>\n\n\t</div>\n</div>\n<div class=\"magic-block-callout type-info no-title\"><span class=\"noTitleIcon\"><i title=\"Info\" class=\"fa fa-info-circle\"></i></span>\n\t<div class=\"callout-body\"><p>Requires &lt;&lt;glossary:wallet&gt;&gt; support (<strong>unavailable on masternodes</strong>)</p>\n\n\t</div>\n</div>\n<div class=\"magic-block-textarea\"><p>The <a href=\"core-api-ref-remote-procedure-calls-wallet-deprecated#getreceivedbyaccount\"><code>getreceivedbyaccount</code> RPC</a> returns the total amount received by addresses in a particular account from transactions with the specified number of confirmations.  It does not count coinbase transactions.</p>\n<p><em>Parameter #1---the account name</em></p>\n<div class=\"marked-table\"><table>\n<thead>\n<tr>\n<th>Name</th>\n<th>Type</th>\n<th>Presence</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Account</td>\n<td>string</td>\n<td>Required<br>(exactly 1)</td>\n<td>The name of the account containing the addresses to get.  For the default account, use an empty string (\\&quot;)&quot;</td>\n</tr>\n</tbody>\n</table></div>\n<p><em>Parameter #2---the minimum number of confirmations</em></p>\n<div class=\"marked-table\"><table>\n<thead>\n<tr>\n<th>Name</th>\n<th>Type</th>\n<th>Presence</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Confirmations</td>\n<td>number (int)</td>\n<td>Optional<br>(0 or 1)</td>\n<td>The minimum number of confirmations an externally-generated transaction must have before it is counted towards the balance.  Transactions generated by this node are counted immediately.  Typically, externally-generated transactions are payments to this wallet and transactions generated by this node are payments to other wallets.  Use <code>0</code> to count unconfirmed transactions.  Default is <code>1</code></td>\n</tr>\n</tbody>\n</table></div>\n<p><em>Parameter #3---whether to include transactions locked via InstantSend</em></p>\n<div class=\"marked-table\"><table>\n<thead>\n<tr>\n<th>Name</th>\n<th>Type</th>\n<th>Presence</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>addlocked</td>\n<td>bool</td>\n<td>Optional<br>(exactly 1)</td>\n<td>Add the balance from InstantSend locked transactions (default=false)</td>\n</tr>\n</tbody>\n</table></div>\n<p><em>Result---the number of dash received</em></p>\n<div class=\"marked-table\"><table>\n<thead>\n<tr>\n<th>Name</th>\n<th>Type</th>\n<th>Presence</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>result</code></td>\n<td>number (dash)</td>\n<td>Required<br>(exactly 1)</td>\n<td>The number of dash received by the account.  May be <code>0</code></td>\n</tr>\n</tbody>\n</table></div>\n<p><em>Example from Dash Core 0.12.2</em></p>\n<p>Get the dash received by the &quot;doc test&quot; account with six or more<br>confirmations:</p>\n<pre><code class=\"lang-bash\"><span class='cm-s-neo'>dash-cli <span class=\"cm-attribute\">-testnet</span> getreceivedbyaccount <span class=\"cm-string\">\"doc test\"</span> <span class=\"cm-number\">6</span></span>\n</code></pre>\n<p>Result:</p>\n<pre><code class=\"lang-json\"><span class='cm-s-neo'><span class=\"cm-number\">0.30000000</span></span>\n</code></pre>\n<p><em>See also</em></p>\n<ul>\n<li ><a href=\"/docs/core-api-ref-remote-procedure-calls-wallet#getreceivedbyaddress\">GetReceivedByAddress</a>: returns the total amount received by the specified address in transactions with the specified number of confirmations. It does not count coinbase transactions.</li><li ><a href=\"/docs/core-api-ref-remote-procedure-calls-wallet-deprecated#getaddressesbyaccount\">GetAddressesByAccount</a>: returns a list of every address assigned to a particular account.</li><li ><a href=\"/docs/core-api-ref-remote-procedure-calls-wallet-deprecated#listaccounts\">ListAccounts</a>: lists accounts and their balances.</li></ul>\n<h1 class=\"header-scroll\"><div class=\"anchor waypoint\" id=\"section-kee-pass\"></div>KeePass<a class=\"fa fa-anchor\" href=\"#section-kee-pass\"></a></h1>\n\n</div>\n<div class=\"magic-block-callout type-danger no-title\"><span class=\"noTitleIcon\"><i title=\"Danger\" class=\"fa fa-exclamation-triangle\"></i></span>\n\t<div class=\"callout-body\"><p><strong>Warning:</strong> <strong><em>Removed in Dash Core 18.0.0</em></strong></p>\n\n\t</div>\n</div>\n<div class=\"magic-block-textarea\"><p>The <a href=\"core-api-ref-remote-procedure-calls-wallet#keepass\"><code>keepass</code> RPC</a> provides commands for configuring and managing KeePass authentication</p>\n<p><em>Parameter #1---Command mode</em></p>\n<div class=\"marked-table\"><table>\n<thead>\n<tr>\n<th>Name</th>\n<th>Type</th>\n<th>Presence</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>mode</code></td>\n<td>string</td>\n<td>Required (exactly 1)</td>\n<td>The command mode to use:<br><code>genkey</code>,<br><code>init</code>,<br><code>setpassphrase</code></td>\n</tr>\n</tbody>\n</table></div>\n<p><em>Command Options</em></p>\n<div class=\"marked-table\"><table>\n<thead>\n<tr>\n<th>Mode</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>genkey</code></td>\n<td>Generates a base64 encoded 256 bit AES key that can be used for the communication with KeePassHttp. This is only necessary for manual configuration.</td>\n</tr>\n<tr>\n<td><code>init</code></td>\n<td>Sets up the association between Dash Core and KeePass by generating an AES key and sending an association message to KeePassHttp. This will trigger KeePass to ask for an Id for the association. Returns the association and the base64 encoded string for the AES key.</td>\n</tr>\n<tr>\n<td><code>setpassphrase</code></td>\n<td>Updates the passphrase in KeePassHttp to a new value. This should match the passphrase you intend to use for the wallet. Please note that the standard RPC commands walletpassphrasechange and the wallet encryption from the QT GUI already send the updates to KeePassHttp, so this is only necessary for manual manipulation of the password.</td>\n</tr>\n</tbody>\n</table></div>\n<p><strong>Command Mode - <code>genkey</code></strong></p>\n<p><em>Result---the new key</em></p>\n<div class=\"marked-table\"><table>\n<thead>\n<tr>\n<th>Name</th>\n<th>Type</th>\n<th>Presence</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Result</td>\n<td>string (base64)</td>\n<td>Required (exactly 1)</td>\n<td>The new key</td>\n</tr>\n</tbody>\n</table></div>\n<p><em>Example from Dash Core 0.12.2</em></p>\n<p>Manually generate a key</p>\n<pre><code class=\"lang-bash\"><span class='cm-s-neo'>dash-cli <span class=\"cm-attribute\">-testnet</span> keepass genkey</span>\n</code></pre>\n<p>Result:</p>\n<pre><code class=\"lang-bash\"><span class='cm-s-neo'>Generated Key: dNjo<span class=\"cm-operator\">+</span>J8Jb30txbJiKq4s9H6vEgWq<span class=\"cm-def\">&#47;whb1w9bb2cTOFo</span><span class=\"cm-operator\">=</span></span>\n</code></pre>\n<p><strong>Command Mode - <code>init</code></strong></p>\n<p><em>Result---initialization response</em></p>\n<div class=\"marked-table\"><table>\n<thead>\n<tr>\n<th>Name</th>\n<th>Type</th>\n<th>Presence</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Result</td>\n<td>string</td>\n<td>Required (exactly 1)</td>\n<td>The success/error status</td>\n</tr>\n</tbody>\n</table></div>\n<p><em>Example from Dash Core 0.12.2</em></p>\n<p>Automatically initialize</p>\n<pre><code class=\"lang-bash\"><span class='cm-s-neo'>dash-cli <span class=\"cm-attribute\">-testnet</span> keepass init</span>\n</code></pre>\n<p>Result (wrapped):</p>\n<pre><code class=\"lang-bash\"><span class='cm-s-neo'>Association successful. Id: testwalletassociation <span class=\"cm-attribute\">-</span> \\\nKey: MSb<span class=\"cm-operator\">+</span><span class=\"cm-def\">JLygqz7ZH40SyJ1QR62i00IXoa3tmT85MGGI2K0</span><span class=\"cm-operator\">=</span></span>\n</code></pre>\n<p><strong>Command Mode - <code>setpassphrase</code></strong></p>\n<p><em>Parameter #2---Passphrase</em></p>\n<div class=\"marked-table\"><table>\n<thead>\n<tr>\n<th>Name</th>\n<th>Type</th>\n<th>Presence</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Passphrase</td>\n<td>string</td>\n<td>Required (exactly 1)</td>\n<td>The passphrase to set</td>\n</tr>\n</tbody>\n</table></div>\n<p><em>Result---status</em></p>\n<div class=\"marked-table\"><table>\n<thead>\n<tr>\n<th>Name</th>\n<th>Type</th>\n<th>Presence</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Result</td>\n<td>string</td>\n<td>Required (exactly 1)</td>\n<td>The success/error status</td>\n</tr>\n</tbody>\n</table></div>\n<p><em>Example from Dash Core 0.12.2</em></p>\n<p>Set KeePass passphrase</p>\n<pre><code class=\"lang-bash\"><span class='cm-s-neo'>dash-cli <span class=\"cm-attribute\">-testnet</span> keepass setpassphrase 1BWi20Xyk76uWumxJQy4</span>\n</code></pre>\n<p>Result:</p>\n<pre><code class=\"lang-bash\"><span class='cm-s-neo'>setlogin: Updated credentials.</span>\n</code></pre>\n<p><em>See also: none</em></p>\n<h1 class=\"header-scroll\"><div class=\"anchor waypoint\" id=\"section-list-accounts\"></div>ListAccounts<a class=\"fa fa-anchor\" href=\"#section-list-accounts\"></a></h1>\n\n</div>\n<div class=\"magic-block-callout type-danger no-title\"><span class=\"noTitleIcon\"><i title=\"Danger\" class=\"fa fa-exclamation-triangle\"></i></span>\n\t<div class=\"callout-body\"><p><strong>Warning:</strong> <strong><em>Removed in Dash Core 18.0.0</em></strong></p>\n\n\t</div>\n</div>\n<div class=\"magic-block-callout type-info no-title\"><span class=\"noTitleIcon\"><i title=\"Info\" class=\"fa fa-info-circle\"></i></span>\n\t<div class=\"callout-body\"><p>Requires &lt;&lt;glossary:wallet&gt;&gt; support (<strong>unavailable on masternodes</strong>)</p>\n\n\t</div>\n</div>\n<div class=\"magic-block-textarea\"><p>The <a href=\"core-api-ref-remote-procedure-calls-wallet-deprecated#listaccounts\"><code>listaccounts</code> RPC</a> lists accounts and their balances.</p>\n<p><em>Parameter #1---the minimum number of confirmations a transaction must have</em></p>\n<div class=\"marked-table\"><table>\n<thead>\n<tr>\n<th>Name</th>\n<th>Type</th>\n<th>Presence</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Confirmations</td>\n<td>number (int)</td>\n<td>Optional<br>(0 or 1)</td>\n<td>The minimum number of confirmations an externally-generated transaction must have before it is counted towards the balance.  Transactions generated by this node are counted immediately.  Typically, externally-generated transactions are payments to this wallet and transactions generated by this node are payments to other wallets.  Use <code>0</code> to count unconfirmed transactions.  Default is <code>1</code></td>\n</tr>\n</tbody>\n</table></div>\n<p><em>Parameter #2--- whether to include transactions locked via InstantSend</em></p>\n<div class=\"marked-table\"><table>\n<thead>\n<tr>\n<th>Name</th>\n<th>Type</th>\n<th>Presence</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>addlocked</td>\n<td>bool</td>\n<td>Optional<br>(exactly 1)</td>\n<td>Add the balance from InstantSend locked transactions</td>\n</tr>\n</tbody>\n</table></div>\n<p><em>Parameter #3---whether to include watch-only addresses in results</em></p>\n<div class=\"marked-table\"><table>\n<thead>\n<tr>\n<th>Name</th>\n<th>Type</th>\n<th>Presence</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Include Watch-Only</td>\n<td>bool</td>\n<td>Optional<br>(0 or 1)</td>\n<td>If set to <code>true</code>, include watch-only addresses in details and calculations as if they were regular addresses belonging to the wallet.  If set to <code>false</code> (the default), treat watch-only addresses as if they didn&#39;t belong to this wallet</td>\n</tr>\n</tbody>\n</table></div>\n<p><em>Result---a list of accounts and their balances</em></p>\n<div class=\"marked-table\"><table>\n<thead>\n<tr>\n<th>Name</th>\n<th>Type</th>\n<th>Presence</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>result</code></td>\n<td>object</td>\n<td>Required<br>(exactly 1)</td>\n<td>A JSON array containing key/value pairs with account names and values.  Must include, at the very least, the default account (\\&quot;)&quot;</td>\n</tr>\n<tr>\n<td>\u2192<br>Account : Balance</td>\n<td>string : number (dash)</td>\n<td>Required<br>(1 or more)</td>\n<td>The name of an account as a string paired with the balance of the account as a number of dash.  The number of dash may be negative if the account has spent more dash than it received.  Accounts with zero balances and zero transactions will be displayed</td>\n</tr>\n</tbody>\n</table></div>\n<p><em>Example from Dash Core 0.13.0</em></p>\n<p>Display account balances with one confirmation and watch-only addresses<br>included. Add the balance of InstantSend locked transactions also.</p>\n<pre><code class=\"lang-bash\"><span class='cm-s-neo'>dash-cli <span class=\"cm-attribute\">-testnet</span> listaccounts <span class=\"cm-number\">1</span> <span class=\"cm-atom\">true</span> <span class=\"cm-atom\">true</span></span>\n</code></pre>\n<p>Result:</p>\n<pre><code class=\"lang-json\"><span class='cm-s-neo'>{\n  <span class=\"cm-property\">\"\"</span>: <span class=\"cm-operator\">-</span><span class=\"cm-number\">2941.30029732</span>,\n  <span class=\"cm-property\">\"Watching\"</span>: <span class=\"cm-number\">8.50000000</span>,\n  <span class=\"cm-property\">\"MN\"</span>: <span class=\"cm-number\">2000.25442744</span>,\n  <span class=\"cm-property\">\"PS\"</span>: <span class=\"cm-number\">37.02970000</span>,\n  <span class=\"cm-property\">\"Recv1\"</span>: <span class=\"cm-number\">3843.48167912</span>,\n}</span>\n</code></pre>\n<p><em>See also</em></p>\n<ul>\n<li ><a href=\"/docs/core-api-ref-remote-procedure-calls-wallet-deprecated#getaccount\">GetAccount</a>: returns the name of the account associated with the given address.</li><li ><a href=\"/docs/core-api-ref-remote-procedure-calls-wallet-deprecated#getaddressesbyaccount\">GetAddressesByAccount</a>: returns a list of every address assigned to a particular account.</li><li ><a href=\"/docs/core-api-ref-remote-procedure-calls-wallet-deprecated#listreceivedbyaccount\">ListReceivedByAccount</a>: lists the total number of dash received by each account.</li><li ><a href=\"core-api-ref-remote-procedure-calls-wallet#listreceivedbylabel\">ListReceivedByLabel</a>: lists the total number of dash received by each label.</li></ul>\n<h1 class=\"header-scroll\"><div class=\"anchor waypoint\" id=\"section-list-received-by-account\"></div>ListReceivedByAccount<a class=\"fa fa-anchor\" href=\"#section-list-received-by-account\"></a></h1>\n\n</div>\n<div class=\"magic-block-callout type-danger no-title\"><span class=\"noTitleIcon\"><i title=\"Danger\" class=\"fa fa-exclamation-triangle\"></i></span>\n\t<div class=\"callout-body\"><p><strong>Warning:</strong> <strong><em>Removed in Dash Core 18.0.0</em></strong></p>\n\n\t</div>\n</div>\n<div class=\"magic-block-callout type-info no-title\"><span class=\"noTitleIcon\"><i title=\"Info\" class=\"fa fa-info-circle\"></i></span>\n\t<div class=\"callout-body\"><p>Requires &lt;&lt;glossary:wallet&gt;&gt; support (<strong>unavailable on masternodes</strong>)</p>\n\n\t</div>\n</div>\n<div class=\"magic-block-textarea\"><p>The <a href=\"core-api-ref-remote-procedure-calls-wallet-deprecated#listreceivedbyaccount\"><code>listreceivedbyaccount</code> RPC</a> lists the total number of dash received by each account.</p>\n<p><em>Parameter #1---the minimum number of confirmations a transaction must have to be counted</em></p>\n<div class=\"marked-table\"><table>\n<thead>\n<tr>\n<th>Name</th>\n<th>Type</th>\n<th>Presence</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Confirmations</td>\n<td>number (int)</td>\n<td>Optional<br>(0 or 1)</td>\n<td>The minimum number of confirmations an externally-generated transaction must have before it is counted towards the balance.  Transactions generated by this node are counted immediately.  Typically, externally-generated transactions are payments to this wallet and transactions generated by this node are payments to other wallets.  Use <code>0</code> to count unconfirmed transactions.  Default is <code>1</code></td>\n</tr>\n</tbody>\n</table></div>\n<p><em>Parameter #2---whether to include transactions locked via InstantSend</em></p>\n<div class=\"marked-table\"><table>\n<thead>\n<tr>\n<th>Name</th>\n<th>Type</th>\n<th>Presence</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>addlocked</td>\n<td>bool</td>\n<td>Optional<br>(exactly 1)</td>\n<td>Add the balance from InstantSend locked transactions</td>\n</tr>\n</tbody>\n</table></div>\n<p><em>Parameter #3---whether to include empty accounts</em></p>\n<div class=\"marked-table\"><table>\n<thead>\n<tr>\n<th>Name</th>\n<th>Type</th>\n<th>Presence</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Include Empty</td>\n<td>bool</td>\n<td>Optional<br>(0 or 1)</td>\n<td>Set to <code>true</code> to display accounts which have never received a payment.  Set to <code>false</code> (the default) to only include accounts which have received a payment.  Any account which has received a payment will be displayed even if its current balance is <code>0</code></td>\n</tr>\n</tbody>\n</table></div>\n<p><em>Parameter #4---whether to include watch-only addresses in results</em></p>\n<div class=\"marked-table\"><table>\n<thead>\n<tr>\n<th>Name</th>\n<th>Type</th>\n<th>Presence</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Include Watch-Only</td>\n<td>bool</td>\n<td>Optional<br>(0 or 1)</td>\n<td>If set to <code>true</code>, include watch-only addresses in details and calculations as if they were regular addresses belonging to the wallet.  If set to <code>false</code> (the default), treat watch-only addresses as if they didn&#39;t belong to this wallet</td>\n</tr>\n</tbody>\n</table></div>\n<p><em>Result---account names, balances, and minimum confirmations</em></p>\n<div class=\"marked-table\"><table>\n<thead>\n<tr>\n<th>Name</th>\n<th>Type</th>\n<th>Presence</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>result</code></td>\n<td>array</td>\n<td>Required<br>(exactly 1)</td>\n<td>An array containing objects each describing an account.  At the very least, the default account (\\&quot;) will be included&quot;</td>\n</tr>\n<tr>\n<td>\u2192<br>Account</td>\n<td>object</td>\n<td>Required<br>(1 or more)</td>\n<td>An object describing an account</td>\n</tr>\n<tr>\n<td>\u2192 \u2192<br><code>involvesWatchonly</code></td>\n<td>bool</td>\n<td>Optional<br>(0 or 1)</td>\n<td>Set to <code>true</code> if the balance of this account includes a watch-only address which has received a spendable payment (that is, a payment with at least the specified number of confirmations and which is not an immature coinbase).  Otherwise not returned</td>\n</tr>\n<tr>\n<td>\u2192 \u2192<br><code>account</code></td>\n<td>string</td>\n<td>Required<br>(exactly 1)</td>\n<td>The name of the account</td>\n</tr>\n<tr>\n<td>\u2192 \u2192<br><code>amount</code></td>\n<td>number (dash)</td>\n<td>Required<br>(exactly 1)</td>\n<td>The total amount received by this account in dash</td>\n</tr>\n<tr>\n<td>\u2192 \u2192<br><code>confirmations</code></td>\n<td>number (int)</td>\n<td>Required<br>(exactly 1)</td>\n<td>The number of confirmations received by the last transaction received by this account.  May be <code>0</code></td>\n</tr>\n<tr>\n<td>\u2192 \u2192<br><code>label</code></td>\n<td>string</td>\n<td>Optional<br>(0 or 1)</td>\n<td>A comment for the address/transaction</td>\n</tr>\n</tbody>\n</table></div>\n<p><em>Example from Dash Core 0.13.0</em></p>\n<p>Get the balances for all non-empty accounts, including transactions<br>which have been confirmed at least six times and InstantSend locked transactions:</p>\n<pre><code class=\"lang-bash\"><span class='cm-s-neo'>dash-cli <span class=\"cm-attribute\">-testnet</span> listreceivedbyaccount <span class=\"cm-number\">6</span> <span class=\"cm-atom\">true</span> <span class=\"cm-atom\">false</span> <span class=\"cm-atom\">true</span></span>\n</code></pre>\n<p>Result (edited to only show the first two results):</p>\n<pre><code class=\"lang-json\"><span class='cm-s-neo'>[\n    {\n        <span class=\"cm-property\">\"account\"</span> : <span class=\"cm-string\">\"\"</span>,\n        <span class=\"cm-property\">\"amount\"</span> : <span class=\"cm-number\">0.19960000</span>,\n        <span class=\"cm-property\">\"confirmations\"</span> : <span class=\"cm-number\">53601</span>\n    },\n    {\n        <span class=\"cm-property\">\"account\"</span> : <span class=\"cm-string\">\"doc test\"</span>,\n        <span class=\"cm-property\">\"amount\"</span> : <span class=\"cm-number\">0.30000000</span>,\n        <span class=\"cm-property\">\"confirmations\"</span> : <span class=\"cm-number\">8991</span>\n    }\n]</span>\n</code></pre>\n<p><em>See also</em></p>\n<ul>\n<li ><a href=\"/docs/core-api-ref-remote-procedure-calls-wallet#listreceivedbyaddress\">ListReceivedByAddress</a>: lists the total number of dash received by each address.</li><li ><a href=\"core-api-ref-remote-procedure-calls-wallet#listreceivedbylabel\">ListReceivedByLabel</a>: lists the total number of dash received by each label.</li><li ><a href=\"/docs/core-api-ref-remote-procedure-calls-wallet-deprecated#getreceivedbyaccount\">GetReceivedByAccount</a>: returns the total amount received by addresses in a particular account from transactions with the specified number of confirmations.  It does not count coinbase transactions.</li><li ><a href=\"/docs/core-api-ref-remote-procedure-calls-wallet#getreceivedbyaddress\">GetReceivedByAddress</a>: returns the total amount received by the specified address in transactions with the specified number of confirmations. It does not count coinbase transactions.</li></ul>\n<h1 class=\"header-scroll\"><div class=\"anchor waypoint\" id=\"section-move\"></div>Move<a class=\"fa fa-anchor\" href=\"#section-move\"></a></h1>\n\n</div>\n<div class=\"magic-block-callout type-danger no-title\"><span class=\"noTitleIcon\"><i title=\"Danger\" class=\"fa fa-exclamation-triangle\"></i></span>\n\t<div class=\"callout-body\"><p><strong>Warning:</strong> <strong><em>Removed in Dash Core 18.0.0</em></strong></p>\n\n\t</div>\n</div>\n<div class=\"magic-block-callout type-info no-title\"><span class=\"noTitleIcon\"><i title=\"Info\" class=\"fa fa-info-circle\"></i></span>\n\t<div class=\"callout-body\"><p>Requires &lt;&lt;glossary:wallet&gt;&gt; support (<strong>unavailable on masternodes</strong>)</p>\n\n\t</div>\n</div>\n<div class=\"magic-block-textarea\"><p>The <a href=\"core-api-ref-remote-procedure-calls-wallet-deprecated#move\"><code>move</code> RPC</a> moves a specified amount from one account in your wallet to another using an off-block-chain transaction.</p>\n\n</div>\n<div class=\"magic-block-callout type-warning no-title\"><span class=\"noTitleIcon\"><i title=\"Warning\" class=\"fa fa-exclamation-circle\"></i></span>\n\t<div class=\"callout-body\"><p><strong>Warning:</strong> it&#39;s possible to move more funds than are in an account, giving the sending account a negative balance and giving the receiving account a balance that may exceed the number of dash in the wallet (or the number of dash in existence).</p>\n\n\t</div>\n</div>\n<div class=\"magic-block-textarea\"><p><em>Parameter #1---from account</em></p>\n<div class=\"marked-table\"><table>\n<thead>\n<tr>\n<th>Name</th>\n<th>Type</th>\n<th>Presence</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>From Account</td>\n<td>string</td>\n<td>Required<br>(exactly 1)</td>\n<td>The name of the account to move the funds from</td>\n</tr>\n</tbody>\n</table></div>\n<p><em>Parameter #2---to account</em></p>\n<div class=\"marked-table\"><table>\n<thead>\n<tr>\n<th>Name</th>\n<th>Type</th>\n<th>Presence</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>To Account</td>\n<td>string</td>\n<td>Required<br>(exactly 1)</td>\n<td>The name of the account to move the funds to</td>\n</tr>\n</tbody>\n</table></div>\n<p><em>Parameter #3---amount to move</em></p>\n<div class=\"marked-table\"><table>\n<thead>\n<tr>\n<th>Name</th>\n<th>Type</th>\n<th>Presence</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Amount</td>\n<td>number (dash)</td>\n<td>Required<br>(exactly 1)</td>\n<td>The amount of dash to move</td>\n</tr>\n</tbody>\n</table></div>\n<p><em>Parameter #4---an unused parameter</em></p>\n<div class=\"marked-table\"><table>\n<thead>\n<tr>\n<th>Name</th>\n<th>Type</th>\n<th>Presence</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><em>Unused</em></td>\n<td>number (int)</td>\n<td>Optional<br>(0 or 1)</td>\n<td>This parameter is no longer used. If parameter #5 needs to be specified, this can be any integer</td>\n</tr>\n</tbody>\n</table></div>\n<p><em>Parameter #5---a comment</em></p>\n<div class=\"marked-table\"><table>\n<thead>\n<tr>\n<th>Name</th>\n<th>Type</th>\n<th>Presence</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Comment</td>\n<td>string</td>\n<td>Optional<br>(0 or 1)</td>\n<td>A comment to assign to this move payment</td>\n</tr>\n</tbody>\n</table></div>\n<p><em>Result---<code>true</code> on success</em></p>\n<div class=\"marked-table\"><table>\n<thead>\n<tr>\n<th>Name</th>\n<th>Type</th>\n<th>Presence</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>result</code></td>\n<td>bool</td>\n<td>Required<br>(exactly 1)</td>\n<td>Set to <code>true</code> if the move was successful</td>\n</tr>\n</tbody>\n</table></div>\n<p><em>Example from Dash Core 0.12.2</em></p>\n<p>Move 1 dash from &quot;doc test&quot; to &quot;test1&quot;, giving the transaction the<br>comment &quot;Example move&quot;:</p>\n<pre><code class=\"lang-bash\"><span class='cm-s-neo'>dash-cli <span class=\"cm-attribute\">-testnet</span> move <span class=\"cm-string\">\"doc test\"</span> <span class=\"cm-string\">\"test1\"</span> <span class=\"cm-number\">0</span>.1 <span class=\"cm-number\">0</span> <span class=\"cm-string\">\"Example move\"</span></span>\n</code></pre>\n<p>Result:</p>\n<pre><code class=\"lang-json\"><span class='cm-s-neo'><span class=\"cm-atom\">true</span></span>\n</code></pre>\n<p><em>See also</em></p>\n<ul>\n<li ><a href=\"/docs/core-api-ref-remote-procedure-calls-wallet-deprecated#listaccounts\">ListAccounts</a>: lists accounts and their balances.</li><li ><a href=\"/docs/core-api-ref-remote-procedure-calls-wallet-deprecated#sendfrom\">SendFrom</a>: spends an amount from a local account to a dash address.</li><li ><a href=\"/docs/core-api-ref-remote-procedure-calls-wallet#sendtoaddress\">SendToAddress</a>: spends an amount to a given address.</li></ul>\n<h1 class=\"header-scroll\"><div class=\"anchor waypoint\" id=\"section-send-from\"></div>SendFrom<a class=\"fa fa-anchor\" href=\"#section-send-from\"></a></h1>\n\n</div>\n<div class=\"magic-block-callout type-danger no-title\"><span class=\"noTitleIcon\"><i title=\"Danger\" class=\"fa fa-exclamation-triangle\"></i></span>\n\t<div class=\"callout-body\"><p><strong>Warning:</strong> <strong><em>Removed in Dash Core 18.0.0</em></strong></p>\n\n\t</div>\n</div>\n<div class=\"magic-block-callout type-info no-title\"><span class=\"noTitleIcon\"><i title=\"Info\" class=\"fa fa-info-circle\"></i></span>\n\t<div class=\"callout-body\"><p>Requires &lt;&lt;glossary:wallet&gt;&gt; support (<strong>unavailable on masternodes</strong>). Requires an unlocked wallet or an unencrypted wallet.</p>\n\n\t</div>\n</div>\n<div class=\"magic-block-textarea\"><p>The <a href=\"core-api-ref-remote-procedure-calls-wallet-deprecated#sendfrom\"><code>sendfrom</code> RPC</a> spends an amount from a local account to a dash address.</p>\n<p><em>Parameter #1---from account</em></p>\n<div class=\"marked-table\"><table>\n<thead>\n<tr>\n<th>Name</th>\n<th>Type</th>\n<th>Presence</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>From Account</td>\n<td>string</td>\n<td>Required<br>(exactly 1)</td>\n<td>The name of the account from which the dash should be spent.  Use an empty string (\\&quot;) for the default account&quot;</td>\n</tr>\n</tbody>\n</table></div>\n<p><em>Parameter #2---to address</em></p>\n<div class=\"marked-table\"><table>\n<thead>\n<tr>\n<th>Name</th>\n<th>Type</th>\n<th>Presence</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>To Address</td>\n<td>string</td>\n<td>Required<br>(exactly 1)</td>\n<td>A P2PKH or P2SH address to which the dash should be sent</td>\n</tr>\n</tbody>\n</table></div>\n<p><em>Parameter #3---amount to spend</em></p>\n<div class=\"marked-table\"><table>\n<thead>\n<tr>\n<th>Name</th>\n<th>Type</th>\n<th>Presence</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Amount</td>\n<td>number (dash)</td>\n<td>Required<br>(exactly 1)</td>\n<td>The amount to spend in dash.  Dash Core will ensure the account has sufficient dash to pay this amount (but the transaction fee paid is not included in the calculation, so an account can spend a total of its balance plus the transaction fee)</td>\n</tr>\n</tbody>\n</table></div>\n<p><em>Parameter #4---minimum confirmations</em></p>\n<div class=\"marked-table\"><table>\n<thead>\n<tr>\n<th>Name</th>\n<th>Type</th>\n<th>Presence</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Confirmations</td>\n<td>number (int)</td>\n<td>Optional<br>(0 or 1)</td>\n<td>The minimum number of confirmations an incoming transaction must have for its outputs to be credited to this account&#39;s balance. Outgoing transactions are always counted, as are move transactions made with the <a href=\"core-api-ref-remote-procedure-calls-wallet-deprecated#move\"><code>move</code> RPC</a>. If an account doesn&#39;t have a balance high enough to pay for this transaction, the payment will be rejected.  Use <code>0</code> to spend unconfirmed incoming payments. Default is <code>1</code></td>\n</tr>\n</tbody>\n</table></div>\n\n</div>\n<div class=\"magic-block-callout type-warning no-title\"><span class=\"noTitleIcon\"><i title=\"Warning\" class=\"fa fa-exclamation-circle\"></i></span>\n\t<div class=\"callout-body\"><p><strong>Warning:</strong> if account1 receives an unconfirmed payment and transfers it to account2 with the <a href=\"core-api-ref-remote-procedure-calls-wallet-deprecated#move\"><code>move</code> RPC</a>, account2 will be able to spend those dash even if this parameter is set to <code>1</code> or higher.</p>\n\n\t</div>\n</div>\n<div class=\"magic-block-textarea\"><p><em>Parameter #5---whether to add the balance from transactions locked via InstantSend</em></p>\n<div class=\"marked-table\"><table>\n<thead>\n<tr>\n<th>Name</th>\n<th>Type</th>\n<th>Presence</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>addlocked</td>\n<td>bool</td>\n<td>Optional<br>(0 or 1)</td>\n<td>If set to <code>true</code>, add the balance from InstantSend locked transactions. If set to <code>false</code> (the default), InstantSend locked transaction balances are not included.</td>\n</tr>\n</tbody>\n</table></div>\n<p><em>Parameter #6---a comment</em></p>\n<div class=\"marked-table\"><table>\n<thead>\n<tr>\n<th>Name</th>\n<th>Type</th>\n<th>Presence</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Comment</td>\n<td>string</td>\n<td>Optional<br>(0 or 1)</td>\n<td>A locally-stored (not broadcast) comment assigned to this transaction.  Default is no comment</td>\n</tr>\n</tbody>\n</table></div>\n<p><em>Parameter #7---a comment about who the payment was sent to</em></p>\n<div class=\"marked-table\"><table>\n<thead>\n<tr>\n<th>Name</th>\n<th>Type</th>\n<th>Presence</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Comment To</td>\n<td>string</td>\n<td>Optional<br>(0 or 1)</td>\n<td>A locally-stored (not broadcast) comment assigned to this transaction.  Meant to be used for describing who the payment was sent to. Default is no comment</td>\n</tr>\n</tbody>\n</table></div>\n<p><em>Result---a TXID of the sent transaction</em></p>\n<div class=\"marked-table\"><table>\n<thead>\n<tr>\n<th>Name</th>\n<th>Type</th>\n<th>Presence</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>result</code></td>\n<td>string</td>\n<td>Required<br>(exactly 1)</td>\n<td>The TXID of the sent transaction, encoded as hex in RPC byte order</td>\n</tr>\n</tbody>\n</table></div>\n<p><em>Example from Dash Core 0.12.2</em></p>\n<p>Spend 0.1 dash from the account &quot;test&quot; to the address indicated below<br>using only UTXOs with at least six confirmations, giving the<br>transaction the comment &quot;Example spend&quot; and labeling the spender<br>&quot;Example.com&quot;:</p>\n<pre><code class=\"lang-bash\"><span class='cm-s-neo'>dash-cli <span class=\"cm-attribute\">-testnet</span> sendfrom <span class=\"cm-string\">\"test\"</span> \\\n            yhJays6zGUFKq1KS5V5WLbyk3cwCXyGrKd \\\n            <span class=\"cm-number\">0</span>.1 \\\n            <span class=\"cm-number\">6</span> \\\n            <span class=\"cm-atom\">false</span> \\\n            <span class=\"cm-string\">\"Example spend\"</span> \\\n            <span class=\"cm-string\">\"Example.com\"</span></span>\n</code></pre>\n<p>Result:</p>\n<pre><code class=\"lang-text\">cd64b9d55c63bf247f2eca32f978e340622107b607a46c422dabcdc20c0571fe\n</code></pre>\n<p><em>See also</em></p>\n<ul>\n<li ><a href=\"/docs/core-api-ref-remote-procedure-calls-wallet#sendtoaddress\">SendToAddress</a>: spends an amount to a given address.</li><li ><a href=\"/docs/core-api-ref-remote-procedure-calls-wallet#sendmany\">SendMany</a>: creates and broadcasts a transaction which sends outputs to multiple addresses.</li></ul>\n<h1 class=\"header-scroll\"><div class=\"anchor waypoint\" id=\"section-sign-raw-transaction\"></div>SignRawTransaction<a class=\"fa fa-anchor\" href=\"#section-sign-raw-transaction\"></a></h1>\n\n</div>\n<div class=\"magic-block-callout type-danger no-title\"><span class=\"noTitleIcon\"><i title=\"Danger\" class=\"fa fa-exclamation-triangle\"></i></span>\n\t<div class=\"callout-body\"><p><strong>Warning:</strong> <strong><em>Removed in Dash Core 18.0.0</em></strong></p>\n\n\t</div>\n</div>\n<div class=\"magic-block-textarea\"><p>The <a href=\"core-api-ref-remote-procedure-calls-raw-transactions#signrawtransaction\"><code>signrawtransaction</code> RPC</a> signs a transaction in the serialized transaction format using private keys stored in the wallet or provided in the call.</p>\n<p><em>Parameter #1---the transaction to sign</em></p>\n<div class=\"marked-table\"><table>\n<thead>\n<tr>\n<th>Name</th>\n<th>Type</th>\n<th>Presence</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Transaction</td>\n<td>string (hex)</td>\n<td>Required<br>(exactly 1)</td>\n<td>The transaction to sign as a serialized transaction</td>\n</tr>\n</tbody>\n</table></div>\n<p><em>Parameter #2---unspent transaction output details</em></p>\n<div class=\"marked-table\"><table>\n<thead>\n<tr>\n<th>Name</th>\n<th>Type</th>\n<th>Presence</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Dependencies</td>\n<td>array</td>\n<td>Optional<br>(0 or 1)</td>\n<td>The previous outputs being spent by this transaction</td>\n</tr>\n<tr>\n<td>\u2192<br>Output</td>\n<td>object</td>\n<td>Optional<br>(0 or more)</td>\n<td>An output being spent</td>\n</tr>\n<tr>\n<td>\u2192 \u2192<br><code>txid</code></td>\n<td>string (hex)</td>\n<td>Required<br>(exactly 1)</td>\n<td>The TXID of the transaction the output appeared in.  The TXID must be encoded in hex in RPC byte order</td>\n</tr>\n<tr>\n<td>\u2192 \u2192<br><code>vout</code></td>\n<td>number (int)</td>\n<td>Required<br>(exactly 1)</td>\n<td>The index number of the output (vout) as it appeared in its transaction, with the first output being 0</td>\n</tr>\n<tr>\n<td>\u2192 \u2192<br><code>scriptPubKey</code></td>\n<td>string (hex)</td>\n<td>Required<br>(exactly 1)</td>\n<td>The output&#39;s pubkey script encoded as hex</td>\n</tr>\n<tr>\n<td>\u2192 \u2192<br><code>redeemScript</code></td>\n<td>string (hex)</td>\n<td>Optional<br>(0 or 1)</td>\n<td>If the pubkey script was a script hash, this must be the corresponding redeem script</td>\n</tr>\n<tr>\n<td>\u2192 \u2192<br><code>amount</code></td>\n<td>numeric</td>\n<td>Required<br>(exactly 1)</td>\n<td>The amount of Dash spent</td>\n</tr>\n</tbody>\n</table></div>\n<p><em>Parameter #3---private keys for signing</em></p>\n<div class=\"marked-table\"><table>\n<thead>\n<tr>\n<th>Name</th>\n<th>Type</th>\n<th>Presence</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Private Keys</td>\n<td>array</td>\n<td>Optional<br>(0 or 1)</td>\n<td>An array holding private keys.  If any keys are provided, only they will be used to sign the transaction (even if the wallet has other matching keys).  If this array is empty or not used, and wallet support is enabled, keys from the wallet will be used</td>\n</tr>\n<tr>\n<td>\u2192<br>Key</td>\n<td>string (base58)</td>\n<td>Required<br>(1 or more)</td>\n<td>A private key in base58check format to use to create a signature for this transaction</td>\n</tr>\n</tbody>\n</table></div>\n<p><em>Parameter #4---signature hash type</em></p>\n<div class=\"marked-table\"><table>\n<thead>\n<tr>\n<th>Name</th>\n<th>Type</th>\n<th>Presence</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>SigHash</td>\n<td>string</td>\n<td>Optional<br>(0 or 1)</td>\n<td>The type of signature hash to use for all of the signatures performed.  (You must use separate calls to the <a href=\"core-api-ref-remote-procedure-calls-raw-transactions#signrawtransaction\"><code>signrawtransaction</code> RPC</a> if you want to use different signature hash types for different signatures.  The allowed values are: <code>ALL</code>, <code>NONE</code>, <code>SINGLE</code>, `ALL</td>\n<td>ANYONECANPAY<code>,</code>NONE</td>\n<td>ANYONECANPAY<code>, and</code>SINGLE</td>\n<td>ANYONECANPAY`</td>\n</tr>\n</tbody>\n</table></div>\n<p><em>Result---the transaction with any signatures made</em></p>\n<div class=\"marked-table\"><table>\n<thead>\n<tr>\n<th>Name</th>\n<th>Type</th>\n<th>Presence</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>result</code></td>\n<td>object</td>\n<td>Required<br>(exactly 1)</td>\n<td>The results of the signature</td>\n</tr>\n<tr>\n<td>\u2192<br><code>hex</code></td>\n<td>string (hex)</td>\n<td>Required<br>(exactly 1)</td>\n<td>The resulting serialized transaction encoded as hex with any signatures made inserted.  If no signatures were made, this will be the same transaction provided in parameter #1</td>\n</tr>\n<tr>\n<td>\u2192<br><code>complete</code></td>\n<td>bool</td>\n<td>Required<br>(exactly 1)</td>\n<td>The value <code>true</code> if transaction is fully signed; the value <code>false</code> if more signatures are required</td>\n</tr>\n</tbody>\n</table></div>\n<p><em>Example from Dash Core 0.12.2</em></p>\n<p>Sign the hex generated in the example section for the <code>createrawtransaction</code><br>RPC:</p>\n<pre><code class=\"lang-bash\"><span class='cm-s-neo'>dash-cli <span class=\"cm-attribute\">-testnet</span> signrawtransaction 01000000016b490886c0198b028c6c5cb14\\\n5c4eb3b1055a224a7a105aadeff41b69ec91e060100000000ffffffff0200205fa012000\\\n0001976a914485485425fa99504ec1638ac4213f3cfc9f32ef388acc0a8f9be010000001\\\n976a914811eacc14db8ebb5b64486dc43400c0226b428a488ac00000000</span>\n</code></pre>\n<p>Result:</p>\n<pre><code class=\"lang-json\"><span class='cm-s-neo'>{\n  <span class=\"cm-property\">\"hex\"</span>: <span class=\"cm-string\">\"01000000016b490886c0198b028c6c5cb145c4eb3b1055a224a7a105aadeff41b69ec91e060100000069463043022033a61c56fa0867ed67b76b023204a9dc0ee6b0d63305dc5f65fe94335445ff2f021f712f55399d5238fc7146497c431fc4182a1de0b96fc22716e0845f561d542e012102eacba539d92eb88d4e73bb32749d79f53f6e8d7947ac40a71bd4b26c13b6ec29ffffffff0200205fa0120000001976a914485485425fa99504ec1638ac4213f3cfc9f32ef388acc0a8f9be010000001976a914811eacc14db8ebb5b64486dc43400c0226b428a488ac00000000\"</span>,\n  <span class=\"cm-property\">\"complete\"</span>: <span class=\"cm-atom\">true</span>\n}</span>\n</code></pre>\n<p><em>See also</em></p>\n<ul>\n<li ><a href=\"/docs/core-api-ref-remote-procedure-calls-raw-transactions#combinerawtransaction\">CombineRawTransaction</a>: combine multiple partially signed transactions into one transaction.</li><li ><a href=\"/docs/core-api-ref-remote-procedure-calls-raw-transactions#createrawtransaction\">CreateRawTransaction</a>: creates an unsigned serialized transaction that spends a previous output to a new output with a P2PKH or P2SH address. The transaction is not stored in the wallet or transmitted to the network.</li><li ><a href=\"/docs/core-api-ref-remote-procedure-calls-raw-transactions#decoderawtransaction\">DecodeRawTransaction</a>: decodes a serialized transaction hex string into a JSON object describing the transaction.</li><li ><a href=\"/docs/core-api-ref-remote-procedure-calls-raw-transactions#sendrawtransaction\">SendRawTransaction</a>: validates a transaction and broadcasts it to the peer-to-peer network.</li><li ><a href=\"#signrawtransactionwithkey\">SignRawTransactionWithKey</a>: signs inputs for a transaction in the serialized transaction format using private keys provided in the call.</li></ul>\n\n</div>"
}