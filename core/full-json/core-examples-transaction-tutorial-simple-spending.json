{
 "metadata": {
  "image": [],
  "title": "Simple Spending",
  "description": "Dash Core provides several RPCs which handle all the details of spending, including creating a change output and paying an appropriate transaction fee.",
  "keywords": "",
  "robots": "index"
 },
 "api": {
  "method": "get",
  "url": "",
  "auth": "required",
  "results": {
   "codes": [
    {
     "status": 200,
     "language": "json",
     "code": "{}",
     "name": ""
    },
    {
     "status": 400,
     "language": "json",
     "code": "{}",
     "name": ""
    }
   ]
  },
  "params": []
 },
 "next": {
  "description": "",
  "pages": [
   {
    "type": "doc",
    "icon": "file-text-o",
    "name": "Simple Raw Transaction",
    "slug": "core-examples-transaction-tutorial-simple-raw-transaction",
    "category": "Core Examples"
   }
  ]
 },
 "algolia": {
  "recordCount": 8,
  "publishPending": false,
  "translationFailure": false,
  "updatedAt": "2023-02-21T19:15:49.970Z"
 },
 "title": "Simple Spending",
 "icon": "",
 "updates": [],
 "type": "basic",
 "slug": "core-examples-transaction-tutorial-simple-spending",
 "excerpt": "",
 "body": "Dash Core provides several RPCs which handle all the details of spending, including creating a <<glossary:change output>> and paying an appropriate <<glossary:transaction fee>>. Even advanced users should use these RPCs whenever possible to decrease the chance that <<glossary:duffs>> will be lost by mistake.\n\n# 1. Get new address\n\nGet a new Dash <<glossary:address>> and save it in the shell variable `$NEW_ADDRESS`.\n\n``` bash\n> dash-cli -regtest getnewaddress\nyLp6ZJueuigiF4s9E1Pv8tEunDPEsjyQfd\n\n> NEW_ADDRESS=yLp6ZJueuigiF4s9E1Pv8tEunDPEsjyQfd\n```\n\n# 2. Send to address\n\nSend 10 dash to the address using the [`sendtoaddress` RPC](core-api-ref-remote-procedure-calls-wallet#sendtoaddress).  The returned hex string is the transaction identifier (<<glossary:TXID>>).\n\nThe [`sendtoaddress` RPC](core-api-ref-remote-procedure-calls-wallet#sendtoaddress) automatically selects an <<glossary:unspent transaction output>> (UTXO) from which to spend the duffs. In this case, it withdrew the duffs from our only available UTXO, the <<glossary:coinbase transaction>> for <<glossary:block>> #1 which matured with the creation of block #101.\n\n``` bash\n> dash-cli -regtest sendtoaddress $NEW_ADDRESS 10.00\nc7e5ae1240fdd83bb94c94a93816ed2ab7bcb56ec3ff8a9725c5c1e0482684ea\n```\n\n# 3. List unspent outputs\n\n## 3a. Confirmed outputs only\n\nUse the [`listunspent` RPC](core-api-ref-remote-procedure-calls-wallet#listunspent) to display the UTXOs belonging to this <<glossary:wallet>>. The list is empty because it defaults to only showing confirmed UTXOs and we just spent our only confirmed UTXO.\n\n``` bash\n> dash-cli -regtest listunspent\n[\n]\n```\n\n## 3b. All outputs\n\nRe-running the [`listunspent` RPC](core-api-ref-remote-procedure-calls-wallet#listunspent) with the argument \"0\" to also display each <<glossary:unconfirmed transaction>> shows that we have two UTXOs, both with the same <<glossary:TXID>>. The first UTXO shown is a change output that `sendtoaddress` created using a new address from the key pool. The second UTXO shown is the spend to the address we provided. If we had spent those duffs to someone else, that second transaction would not be displayed in our list of UTXOs.\n\n``` bash\n> dash-cli -regtest listunspent 0\n```\n\n``` json\n[  \n   {  \n      \"txid\":\"c7e5ae1240fdd83bb94c94a93816ed2ab7bcb56ec3ff8a9725c5c1e0482684ea\",\n      \"vout\":0,\n      \"address\":\"yLp6ZJueuigiF4s9E1Pv8tEunDPEsjyQfd\",\n      \"account\":\"\",\n      \"scriptPubKey\":\"76a914056b1fe57914236149feb21dcbc6b86f4bdd9f4988ac\",\n      \"amount\":10.00000000,\n      \"confirmations\":0,\n      \"ps_rounds\":-2,\n      \"spendable\":true,\n      \"solvable\":true\n   },\n   {  \n      \"txid\":\"c7e5ae1240fdd83bb94c94a93816ed2ab7bcb56ec3ff8a9725c5c1e0482684ea\",\n      \"vout\":1,\n      \"address\":\"yeP6Tw2uW4nWAFWRytw8TyshErTq59dUkN\",\n      \"scriptPubKey\":\"76a914c622e98a6ccf34d02620612f58f20a50061cf4b188ac\",\n      \"amount\":490.00000000,\n      \"confirmations\":0,\n      \"ps_rounds\":-2,\n      \"spendable\":true,\n      \"solvable\":true\n   }\n]\n```\n\n# 4. Mine block\n\nCreate a new block to confirm the transaction above (takes less than a second) and clear the shell variable.\n\n``` bash\n> dash-cli -regtest generate 1\n\n> unset NEW_ADDRESS\n```\n\n# Simple Spending Script\n\nShell script to run the previous example (available [here](https://gist.github.com/dash-docs/f40bddfc0844ec0d66d196720dc936f8#file-regtest_transaction_simple_spending_example-sh)):\n\n``` shell\n#!/bin/bash\n\n# Set RPCUSER and RPCPWD to the username and password configure in dash.conf\nRPCUSER=\"user\"\nRPCPWD=\"pass\"\nREGTEST_CMD=\"dash-cli -regtest -rpcuser=$RPCUSER -rpcpassword=$RPCPWD\"\n\n# SIMPLE SPENDING EXAMPLE\n# -----------------------\n\nBLOCKTOGEN=101\nprintf \"\\nGenerating %s block(s)...\\n\" $BLOCKTOGEN\nCOMMAND=\"$REGTEST_CMD generate $BLOCKTOGEN\"\necho $COMMAND\nGENERATED=$($COMMAND)\necho \"Generated $BLOCKTOGEN block(s)\"\n\nprintf \"\\nChecking balance...\\n\"\nCOMMAND=\"$REGTEST_CMD getbalance\"\necho $COMMAND\nBALANCE=$($COMMAND)\necho \"Balance is: \" $BALANCE\n\nprintf \"\\nGetting new address...\\n\"\nCOMMAND=\"$REGTEST_CMD getnewaddress\"\necho $COMMAND\nNEW_ADDRESS=$($COMMAND)\necho \"New address is: \" $NEW_ADDRESS\n\nprintf \"\\nSending to address...\\n\"\nCOMMAND=\"$REGTEST_CMD sendtoaddress $NEW_ADDRESS 10.00\"\necho $COMMAND\nTXID=$($COMMAND)\necho \"Transaction ID (TXID) is: \" $TXID\n\nprintf \"\\nList unspent...\\n\"\nCOMMAND=\"$REGTEST_CMD listunspent\"\necho $COMMAND\nUNSPENT=$($COMMAND)\necho \"Unspent (excluding unconfirmed): \" $UNSPENT\n\nprintf \"\\nList unspent (unconfirmed)...\\n\"\nCOMMAND=\"$REGTEST_CMD listunspent 0\"\necho $COMMAND\nUNSPENT=$($COMMAND)\necho \"Unspent (including unconfirmed): \" $UNSPENT\n\n\nBLOCKTOGEN=1\nprintf \"\\nGenerating %s block(s) to confirm...\\n\" $BLOCKTOGEN\nCOMMAND=\"$REGTEST_CMD generate $BLOCKTOGEN\"\necho $COMMAND\nGENERATED=$($COMMAND)\necho \"Generated $BLOCKTOGEN block(s)\"\n\nprintf \"\\nList unspent...\\n\"\nCOMMAND=\"$REGTEST_CMD listunspent\"\necho $COMMAND\nUNSPENT=$($COMMAND)\necho \"Unspent (excluding unconfirmed): \" $UNSPENT\n\nunset REGTEST_CMD\nunset BLOCKTOGEN\nunset COMMAND\nunset GENERATED\nunset BALANCE\nunset NEW_ADDRESS\nunset TXID\nunset UNSPENT\n```",
 "mdxAltBody": "",
 "order": 0,
 "isReference": false,
 "deprecated": false,
 "hidden": false,
 "sync_unique": "",
 "link_url": "",
 "link_external": false,
 "reusableContent": [],
 "previousSlug": "",
 "slugUpdatedAt": "2022-09-20T18:32:50.829Z",
 "revision": 7,
 "_id": "63f5176df91c7700118e77d6",
 "version": "63f5176df91c7700118e7825",
 "updatedAt": "2023-01-16T14:42:53.161Z",
 "createdAt": "2019-10-24T15:51:07.867Z",
 "project": "5daf2e65f4109c0040fd51e1",
 "user": "5b8400d7185d5e00036dcc3b",
 "parentDoc": "63f5176df91c7700118e77d5",
 "category": "63f5176df91c7700118e77a0",
 "__v": 1,
 "pendingAlgoliaPublish": false,
 "isApi": false,
 "id": "63f5176df91c7700118e77d6",
 "body_html": "<p>Dash Core provides several RPCs which handle all the details of spending, including creating a <span class=\"GlossaryItem-trigger\">change output</span> and paying an appropriate <span class=\"GlossaryItem-trigger\">transaction fee</span>. Even advanced users should use these RPCs whenever possible to decrease the chance that <span class=\"GlossaryItem-trigger\">duffs</span> will be lost by mistake.</p>\n<h1 class=\"heading heading-1 header-scroll\" align=\"\"><div class=\"heading-anchor anchor waypoint\" id=\"1-get-new-address\"></div><div class=\"heading-text\"><div id=\"section-1-get-new-address\" class=\"heading-anchor_backwardsCompatibility\"></div>1. Get new address</div><a aria-label=\"Skip link to 1. Get new address\" class=\"heading-anchor-icon fa fa-anchor\" href=\"#1-get-new-address\"></a></h1>\n<p>Get a new Dash <span class=\"GlossaryItem-trigger\">address</span> and save it in the shell variable <button aria-label=\"Copy Code\" class=\"rdmd-code-copy fa\"></button><code class=\"rdmd-code lang- theme-light\" data-lang=\"\" name=\"\" tabindex=\"0\">$NEW_ADDRESS</code>.</p>\n<div class=\"CodeTabs CodeTabs_initial theme-light\"><div class=\"CodeTabs-toolbar\" role=\"tablist\"><button aria-selected=\"true\" class=\"CodeTabs_active\" role=\"tab\" type=\"button\">Bash</button></div><div class=\"CodeTabs-inner\" role=\"tabpanel\"><pre><button aria-label=\"Copy Code\" class=\"rdmd-code-copy fa\"></button><code class=\"rdmd-code lang-bash theme-light\" data-lang=\"bash\" name=\"\" tabindex=\"0\">&gt; dash-cli -regtest getnewaddress\nyLp6ZJueuigiF4s9E1Pv8tEunDPEsjyQfd\n\n&gt; NEW_ADDRESS=yLp6ZJueuigiF4s9E1Pv8tEunDPEsjyQfd\n</code></pre></div></div>\n<h1 class=\"heading heading-1 header-scroll\" align=\"\"><div class=\"heading-anchor anchor waypoint\" id=\"2-send-to-address\"></div><div class=\"heading-text\"><div id=\"section-2-send-to-address\" class=\"heading-anchor_backwardsCompatibility\"></div>2. Send to address</div><a aria-label=\"Skip link to 2. Send to address\" class=\"heading-anchor-icon fa fa-anchor\" href=\"#2-send-to-address\"></a></h1>\n<p>Send 10 dash to the address using the <a href=\"core-api-ref-remote-procedure-calls-wallet#sendtoaddress\" target=\"\" title=\"\"><button aria-label=\"Copy Code\" class=\"rdmd-code-copy fa\"></button><code class=\"rdmd-code lang- theme-light\" data-lang=\"\" name=\"\" tabindex=\"0\">sendtoaddress</code> RPC</a>.  The returned hex string is the transaction identifier (<span class=\"GlossaryItem-trigger\">TXID</span>).</p>\n<p>The <a href=\"core-api-ref-remote-procedure-calls-wallet#sendtoaddress\" target=\"\" title=\"\"><button aria-label=\"Copy Code\" class=\"rdmd-code-copy fa\"></button><code class=\"rdmd-code lang- theme-light\" data-lang=\"\" name=\"\" tabindex=\"0\">sendtoaddress</code> RPC</a> automatically selects an <span class=\"GlossaryItem-trigger\">unspent transaction output</span> (UTXO) from which to spend the duffs. In this case, it withdrew the duffs from our only available UTXO, the <span class=\"GlossaryItem-trigger\">coinbase transaction</span> for <span class=\"GlossaryItem-trigger\">block</span> #1 which matured with the creation of block #101.</p>\n<div class=\"CodeTabs CodeTabs_initial theme-light\"><div class=\"CodeTabs-toolbar\" role=\"tablist\"><button aria-selected=\"true\" class=\"CodeTabs_active\" role=\"tab\" type=\"button\">Bash</button></div><div class=\"CodeTabs-inner\" role=\"tabpanel\"><pre><button aria-label=\"Copy Code\" class=\"rdmd-code-copy fa\"></button><code class=\"rdmd-code lang-bash theme-light\" data-lang=\"bash\" name=\"\" tabindex=\"0\">&gt; dash-cli -regtest sendtoaddress $NEW_ADDRESS 10.00\nc7e5ae1240fdd83bb94c94a93816ed2ab7bcb56ec3ff8a9725c5c1e0482684ea\n</code></pre></div></div>\n<h1 class=\"heading heading-1 header-scroll\" align=\"\"><div class=\"heading-anchor anchor waypoint\" id=\"3-list-unspent-outputs\"></div><div class=\"heading-text\"><div id=\"section-3-list-unspent-outputs\" class=\"heading-anchor_backwardsCompatibility\"></div>3. List unspent outputs</div><a aria-label=\"Skip link to 3. List unspent outputs\" class=\"heading-anchor-icon fa fa-anchor\" href=\"#3-list-unspent-outputs\"></a></h1>\n<h2 class=\"heading heading-2 header-scroll\" align=\"\"><div class=\"heading-anchor anchor waypoint\" id=\"3a-confirmed-outputs-only\"></div><div class=\"heading-text\"><div id=\"section-3-a-confirmed-outputs-only\" class=\"heading-anchor_backwardsCompatibility\"></div>3a. Confirmed outputs only</div><a aria-label=\"Skip link to 3a. Confirmed outputs only\" class=\"heading-anchor-icon fa fa-anchor\" href=\"#3a-confirmed-outputs-only\"></a></h2>\n<p>Use the <a href=\"core-api-ref-remote-procedure-calls-wallet#listunspent\" target=\"\" title=\"\"><button aria-label=\"Copy Code\" class=\"rdmd-code-copy fa\"></button><code class=\"rdmd-code lang- theme-light\" data-lang=\"\" name=\"\" tabindex=\"0\">listunspent</code> RPC</a> to display the UTXOs belonging to this <span class=\"GlossaryItem-trigger\">wallet</span>. The list is empty because it defaults to only showing confirmed UTXOs and we just spent our only confirmed UTXO.</p>\n<div class=\"CodeTabs CodeTabs_initial theme-light\"><div class=\"CodeTabs-toolbar\" role=\"tablist\"><button aria-selected=\"true\" class=\"CodeTabs_active\" role=\"tab\" type=\"button\">Bash</button></div><div class=\"CodeTabs-inner\" role=\"tabpanel\"><pre><button aria-label=\"Copy Code\" class=\"rdmd-code-copy fa\"></button><code class=\"rdmd-code lang-bash theme-light\" data-lang=\"bash\" name=\"\" tabindex=\"0\">&gt; dash-cli -regtest listunspent\n[\n]\n</code></pre></div></div>\n<h2 class=\"heading heading-2 header-scroll\" align=\"\"><div class=\"heading-anchor anchor waypoint\" id=\"3b-all-outputs\"></div><div class=\"heading-text\"><div id=\"section-3-b-all-outputs\" class=\"heading-anchor_backwardsCompatibility\"></div>3b. All outputs</div><a aria-label=\"Skip link to 3b. All outputs\" class=\"heading-anchor-icon fa fa-anchor\" href=\"#3b-all-outputs\"></a></h2>\n<p>Re-running the <a href=\"core-api-ref-remote-procedure-calls-wallet#listunspent\" target=\"\" title=\"\"><button aria-label=\"Copy Code\" class=\"rdmd-code-copy fa\"></button><code class=\"rdmd-code lang- theme-light\" data-lang=\"\" name=\"\" tabindex=\"0\">listunspent</code> RPC</a> with the argument &quot;0&quot; to also display each <span class=\"GlossaryItem-trigger\">unconfirmed transaction</span> shows that we have two UTXOs, both with the same <span class=\"GlossaryItem-trigger\">TXID</span>. The first UTXO shown is a change output that <button aria-label=\"Copy Code\" class=\"rdmd-code-copy fa\"></button><code class=\"rdmd-code lang- theme-light\" data-lang=\"\" name=\"\" tabindex=\"0\">sendtoaddress</code> created using a new address from the key pool. The second UTXO shown is the spend to the address we provided. If we had spent those duffs to someone else, that second transaction would not be displayed in our list of UTXOs.</p>\n<div class=\"CodeTabs CodeTabs_initial theme-light\"><div class=\"CodeTabs-toolbar\" role=\"tablist\"><button aria-selected=\"true\" class=\"CodeTabs_active\" role=\"tab\" type=\"button\">Bash</button></div><div class=\"CodeTabs-inner\" role=\"tabpanel\"><pre><button aria-label=\"Copy Code\" class=\"rdmd-code-copy fa\"></button><code class=\"rdmd-code lang-bash theme-light\" data-lang=\"bash\" name=\"\" tabindex=\"0\">&gt; dash-cli -regtest listunspent 0\n</code></pre></div></div>\n<div class=\"CodeTabs CodeTabs_initial theme-light\"><div class=\"CodeTabs-toolbar\" role=\"tablist\"><button aria-selected=\"true\" class=\"CodeTabs_active\" role=\"tab\" type=\"button\">JSON</button></div><div class=\"CodeTabs-inner\" role=\"tabpanel\"><pre><button aria-label=\"Copy Code\" class=\"rdmd-code-copy fa\"></button><code class=\"rdmd-code lang-json theme-light\" data-lang=\"json\" name=\"\" tabindex=\"0\">[  \n   {  \n      &quot;txid&quot;:&quot;c7e5ae1240fdd83bb94c94a93816ed2ab7bcb56ec3ff8a9725c5c1e0482684ea&quot;,\n      &quot;vout&quot;:0,\n      &quot;address&quot;:&quot;yLp6ZJueuigiF4s9E1Pv8tEunDPEsjyQfd&quot;,\n      &quot;account&quot;:&quot;&quot;,\n      &quot;scriptPubKey&quot;:&quot;76a914056b1fe57914236149feb21dcbc6b86f4bdd9f4988ac&quot;,\n      &quot;amount&quot;:10.00000000,\n      &quot;confirmations&quot;:0,\n      &quot;ps_rounds&quot;:-2,\n      &quot;spendable&quot;:true,\n      &quot;solvable&quot;:true\n   },\n   {  \n      &quot;txid&quot;:&quot;c7e5ae1240fdd83bb94c94a93816ed2ab7bcb56ec3ff8a9725c5c1e0482684ea&quot;,\n      &quot;vout&quot;:1,\n      &quot;address&quot;:&quot;yeP6Tw2uW4nWAFWRytw8TyshErTq59dUkN&quot;,\n      &quot;scriptPubKey&quot;:&quot;76a914c622e98a6ccf34d02620612f58f20a50061cf4b188ac&quot;,\n      &quot;amount&quot;:490.00000000,\n      &quot;confirmations&quot;:0,\n      &quot;ps_rounds&quot;:-2,\n      &quot;spendable&quot;:true,\n      &quot;solvable&quot;:true\n   }\n]\n</code></pre></div></div>\n<h1 class=\"heading heading-1 header-scroll\" align=\"\"><div class=\"heading-anchor anchor waypoint\" id=\"4-mine-block\"></div><div class=\"heading-text\"><div id=\"section-4-mine-block\" class=\"heading-anchor_backwardsCompatibility\"></div>4. Mine block</div><a aria-label=\"Skip link to 4. Mine block\" class=\"heading-anchor-icon fa fa-anchor\" href=\"#4-mine-block\"></a></h1>\n<p>Create a new block to confirm the transaction above (takes less than a second) and clear the shell variable.</p>\n<div class=\"CodeTabs CodeTabs_initial theme-light\"><div class=\"CodeTabs-toolbar\" role=\"tablist\"><button aria-selected=\"true\" class=\"CodeTabs_active\" role=\"tab\" type=\"button\">Bash</button></div><div class=\"CodeTabs-inner\" role=\"tabpanel\"><pre><button aria-label=\"Copy Code\" class=\"rdmd-code-copy fa\"></button><code class=\"rdmd-code lang-bash theme-light\" data-lang=\"bash\" name=\"\" tabindex=\"0\">&gt; dash-cli -regtest generate 1\n\n&gt; unset NEW_ADDRESS\n</code></pre></div></div>\n<h1 class=\"heading heading-1 header-scroll\" align=\"\"><div class=\"heading-anchor anchor waypoint\" id=\"simple-spending-script\"></div><div class=\"heading-text\"><div id=\"section-simple-spending-script\" class=\"heading-anchor_backwardsCompatibility\"></div>Simple Spending Script</div><a aria-label=\"Skip link to Simple Spending Script\" class=\"heading-anchor-icon fa fa-anchor\" href=\"#simple-spending-script\"></a></h1>\n<p>Shell script to run the previous example (available <a href=\"https://gist.github.com/dash-docs/f40bddfc0844ec0d66d196720dc936f8#file-regtest_transaction_simple_spending_example-sh\" target=\"\" title=\"\">here</a>):</p>\n<div class=\"CodeTabs CodeTabs_initial theme-light\"><div class=\"CodeTabs-toolbar\" role=\"tablist\"><button aria-selected=\"true\" class=\"CodeTabs_active\" role=\"tab\" type=\"button\">Shell</button></div><div class=\"CodeTabs-inner\" role=\"tabpanel\"><pre><button aria-label=\"Copy Code\" class=\"rdmd-code-copy fa\"></button><code class=\"rdmd-code lang-shell theme-light\" data-lang=\"shell\" name=\"\" tabindex=\"0\">#!/bin/bash\n\n# Set RPCUSER and RPCPWD to the username and password configure in dash.conf\nRPCUSER=&quot;user&quot;\nRPCPWD=&quot;pass&quot;\nREGTEST_CMD=&quot;dash-cli -regtest -rpcuser=$RPCUSER -rpcpassword=$RPCPWD&quot;\n\n# SIMPLE SPENDING EXAMPLE\n# -----------------------\n\nBLOCKTOGEN=101\nprintf &quot;\\nGenerating %s block(s)...\\n&quot; $BLOCKTOGEN\nCOMMAND=&quot;$REGTEST_CMD generate $BLOCKTOGEN&quot;\necho $COMMAND\nGENERATED=$($COMMAND)\necho &quot;Generated $BLOCKTOGEN block(s)&quot;\n\nprintf &quot;\\nChecking balance...\\n&quot;\nCOMMAND=&quot;$REGTEST_CMD getbalance&quot;\necho $COMMAND\nBALANCE=$($COMMAND)\necho &quot;Balance is: &quot; $BALANCE\n\nprintf &quot;\\nGetting new address...\\n&quot;\nCOMMAND=&quot;$REGTEST_CMD getnewaddress&quot;\necho $COMMAND\nNEW_ADDRESS=$($COMMAND)\necho &quot;New address is: &quot; $NEW_ADDRESS\n\nprintf &quot;\\nSending to address...\\n&quot;\nCOMMAND=&quot;$REGTEST_CMD sendtoaddress $NEW_ADDRESS 10.00&quot;\necho $COMMAND\nTXID=$($COMMAND)\necho &quot;Transaction ID (TXID) is: &quot; $TXID\n\nprintf &quot;\\nList unspent...\\n&quot;\nCOMMAND=&quot;$REGTEST_CMD listunspent&quot;\necho $COMMAND\nUNSPENT=$($COMMAND)\necho &quot;Unspent (excluding unconfirmed): &quot; $UNSPENT\n\nprintf &quot;\\nList unspent (unconfirmed)...\\n&quot;\nCOMMAND=&quot;$REGTEST_CMD listunspent 0&quot;\necho $COMMAND\nUNSPENT=$($COMMAND)\necho &quot;Unspent (including unconfirmed): &quot; $UNSPENT\n\n\nBLOCKTOGEN=1\nprintf &quot;\\nGenerating %s block(s) to confirm...\\n&quot; $BLOCKTOGEN\nCOMMAND=&quot;$REGTEST_CMD generate $BLOCKTOGEN&quot;\necho $COMMAND\nGENERATED=$($COMMAND)\necho &quot;Generated $BLOCKTOGEN block(s)&quot;\n\nprintf &quot;\\nList unspent...\\n&quot;\nCOMMAND=&quot;$REGTEST_CMD listunspent&quot;\necho $COMMAND\nUNSPENT=$($COMMAND)\necho &quot;Unspent (excluding unconfirmed): &quot; $UNSPENT\n\nunset REGTEST_CMD\nunset BLOCKTOGEN\nunset COMMAND\nunset GENERATED\nunset BALANCE\nunset NEW_ADDRESS\nunset TXID\nunset UNSPENT\n</code></pre></div></div>"
}