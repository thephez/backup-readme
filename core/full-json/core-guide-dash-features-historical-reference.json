{
 "metadata": {
  "image": [],
  "title": "",
  "description": "",
  "keywords": "",
  "robots": "index"
 },
 "api": {
  "method": "get",
  "url": "",
  "auth": "required",
  "results": {
   "codes": [
    {
     "status": 200,
     "language": "json",
     "code": "{}",
     "name": ""
    },
    {
     "status": 400,
     "language": "json",
     "code": "{}",
     "name": ""
    }
   ]
  },
  "params": []
 },
 "next": {
  "description": "",
  "pages": [
   {
    "type": "doc",
    "icon": "file-text-o",
    "name": "Block Chain",
    "slug": "core-guide-block-chain",
    "category": "Core Guides"
   }
  ]
 },
 "algolia": {
  "recordCount": 2,
  "publishPending": false,
  "translationFailure": false,
  "updatedAt": "2023-02-21T19:15:48.213Z"
 },
 "title": "Historical Reference",
 "icon": "",
 "updates": [],
 "type": "basic",
 "slug": "core-guide-dash-features-historical-reference",
 "excerpt": "",
 "body": ">\u2757\ufe0f Deprecated Content\n>\n> **The following information is deprecated and for historical reference only. It describes features that have been redesigned and no longer operate as described below.**\n\n# InstantSend (original)\n\n> \ud83d\udea7 \n>\n> **Please see [here for details of the current InstantSend design](core-guide-dash-features-instantsend).**\n\nDash Core's InstantSend feature provides a way to lock transaction inputs and enable secure, instantaneous transactions. Since Dash Core 0.13.0, any qualifying transaction is automatically upgraded to InstantSend by the network without a need for the sending wallet to explicitly request it. For these simple transactions (those containing 4 or fewer inputs), the previous requirement for a special InstantSend transaction fee was also removed. The criteria for determining eligibility can be found in the lists of limitations below.\n\nThe following video provides an overview with a good introduction to the details including the InstantSend vulnerability that was fixed in Dash Core 0.12.2. Some specific points in the video are listed here for quick reference:\n\n - 2:00 - InstantSend restrictions\n - 5:00 - Masternode quorum creation\n - 6:00 - Input locking\n - 7:45 - Quorum score calculation / Requirement for block confirmations\n - 9:00 - Description of Dash Core pre-0.12.2 InstantSend vulnerability\n - 13:00 - Description of vulnerability fix / Post Dash Core 0.12.2 operation\n\n<iframe width=\"500\" height=\"375\" src=\"https://www.youtube-nocookie.com/embed/n4PELomRiFY?rel=0;start=0\"></iframe>\n\n[block:embed]\n{\n  \"html\": \"<iframe class=\\\"embedly-embed\\\" src=\\\"//cdn.embedly.com/widgets/media.html?src=https%3A%2F%2Fwww.youtube.com%2Fembed%2Fn4PELomRiFY%3Ffeature%3Doembed%26start%3D0%26rel%3D0&display_name=YouTube&url=https%3A%2F%2Fwww.youtube.com%2Fwatch%3Fv%3Dn4PELomRiFY&image=https%3A%2F%2Fi.ytimg.com%2Fvi%2Fn4PELomRiFY%2Fhqdefault.jpg&key=02466f963b9b4bb8845a05b53d3235d7&type=text%2Fhtml&schema=youtube-nocookie\\\" width=\\\"854\\\" height=\\\"480\\\" scrolling=\\\"no\\\" title=\\\"YouTube embed\\\" frameborder=\\\"0\\\" allow=\\\"autoplay; fullscreen\\\" allowfullscreen=\\\"true\\\"></iframe>\",\n  \"url\": \"https://www.youtube-nocookie.com/embed/n4PELomRiFY?rel=0;start=0\",\n  \"title\": \"Matt Robertson - Instant Send - The Dash Conference\",\n  \"favicon\": \"https://www.youtube-nocookie.com/favicon.ico\",\n  \"image\": \"https://i.ytimg.com/vi/n4PELomRiFY/hqdefault.jpg\"\n}\n[/block]\n*InstantSend Data Flow*\n\n| **InstantSend Client** | **Direction**  | **Peers**   | **Description** |\n| --- | :---: | --- | --- |\n| [`inv` message](core-ref-p2p-network-data-messages#inv) (ix)          | \u2192 |                         | Client sends inventory for transaction lock request\n|                             | \u2190 | [`getdata` message](core-ref-p2p-network-data-messages#getdata) (ix)  | Peer responds with request for transaction lock request\n| `ix` message                | \u2192 |                         | Client sends InstantSend transaction lock request\n|                             | \u2190 | [`inv` message](core-ref-p2p-network-data-messages#inv) (txlvote) | Masternodes in the [quorum](core-guide-dash-features-masternode-quorums#quorum-configuration) respond with votes\n| [`getdata` message](core-ref-p2p-network-data-messages#getdata) (txlvote) | \u2192 |                         | Client requests vote\n|                             | \u2190 | `txlvote` message       | Peer responds with vote\n\nOnce an InstantSend lock has been requested, the `instantsend` field of various RPCs (e.g. the [`getmempoolentry` RPC](core-api-ref-remote-procedure-calls-blockchain#getmempoolentry)) is set to `true`. Then, if a sufficient number of votes approve the transaction lock, the InstantSend transaction is approved the `instantlock` field of the RPC is set to `true`.\n\nIf an InstantSend transaction is a valid transaction but does not receive a transaction lock, it reverts to being a standard transaction.\n\nThere are a number of limitations on InstantSend transactions:\n\n* The lock request will timeout 15 seconds after the first vote is seen (`INSTANTSEND_LOCK_TIMEOUT_SECONDS`)\n* The lock request will fail if it has not been locked after 60 seconds (`INSTANTSEND_FAILED_TIMEOUT_SECONDS`)\n* A \u201cper-input\u201d fee of 0.0001 DASH per input is required for non-simple transactions (inputs >=5) since they place a higher load on the masternodes. This fee was most recently decreased by [DIP-0001](https://github.com/dashpay/dips/blob/master/dip-0001.md).\n* To be used in an InstantSend transaction, an input must have at least the number confirmations (block depth) indicated by the table below\n\n| **Network** | **Confirmations Required** |\n| --- | --- |\n| Mainnet | 6 Blocks |\n| Testnet | 2 Blocks |\n| Regtest | 2 Blocks |\n| Devnet  | 2 Blocks |\n\nThere are some further limitations on Automatic InstantSend transactions:\n\n* DIP3 must be active\n* Spork 16 must be enabled\n* Mempool usage must be lower than 10% (`AUTO_IX_MEMPOOL_THRESHOLD`). As of Dash Core 0.13.0, this corresponds to a mempool size of 30 MB (`DEFAULT_MAX_MEMPOOL_SIZE` = 300 MB).\n\n**Historical Note**\n\nPrior to Dash Core 0.13.0, `instantsend` and `instantlock` values were not available via RPC. At that time, the InstantSend system worked as described below.\n\nOnce a sufficient number of votes approved the transaction lock, the InstantSend transaction was approved and showed 5 confirmations (`DEFAULT_INSTANTSEND_DEPTH`).\n\nNOTE: The 5 \"pseudo-confirmations\" were shown to convey confidence that the transaction was secure from double-spending and DID NOT indicate the transaction had already been confirmed to a block depth of 5 in the blockchain.",
 "order": 8,
 "isReference": false,
 "deprecated": false,
 "hidden": false,
 "sync_unique": "",
 "link_url": "",
 "link_external": false,
 "reusableContent": [],
 "previousSlug": "",
 "slugUpdatedAt": "2023-01-11T21:29:15.143Z",
 "revision": 15,
 "_id": "63f5176df91c7700118e77c7",
 "version": "63f5176df91c7700118e7825",
 "updatedAt": "2023-01-25T15:48:29.573Z",
 "createdAt": "2019-10-23T19:55:29.974Z",
 "project": "5daf2e65f4109c0040fd51e1",
 "user": "5b8400d7185d5e00036dcc3b",
 "parentDoc": "63f5176df91c7700118e77bd",
 "category": "63f5176df91c7700118e779e",
 "__v": 1,
 "pendingAlgoliaPublish": false,
 "isApi": false,
 "id": "63f5176df91c7700118e77c7",
 "body_html": ">\u2757\ufe0f Deprecated Content\n>\n> **The following information is deprecated and for historical reference only. It describes features that have been redesigned and no longer operate as described below.**\n\n# InstantSend (original)\n\n> \ud83d\udea7 \n>\n> **Please see [here for details of the current InstantSend design](core-guide-dash-features-instantsend).**\n\nDash Core's InstantSend feature provides a way to lock transaction inputs and enable secure, instantaneous transactions. Since Dash Core 0.13.0, any qualifying transaction is automatically upgraded to InstantSend by the network without a need for the sending wallet to explicitly request it. For these simple transactions (those containing 4 or fewer inputs), the previous requirement for a special InstantSend transaction fee was also removed. The criteria for determining eligibility can be found in the lists of limitations below.\n\nThe following video provides an overview with a good introduction to the details including the InstantSend vulnerability that was fixed in Dash Core 0.12.2. Some specific points in the video are listed here for quick reference:\n\n - 2:00 - InstantSend restrictions\n - 5:00 - Masternode quorum creation\n - 6:00 - Input locking\n - 7:45 - Quorum score calculation / Requirement for block confirmations\n - 9:00 - Description of Dash Core pre-0.12.2 InstantSend vulnerability\n - 13:00 - Description of vulnerability fix / Post Dash Core 0.12.2 operation\n\n<iframe width=\"500\" height=\"375\" src=\"https://www.youtube-nocookie.com/embed/n4PELomRiFY?rel=0;start=0\"></iframe>\n\n[block:embed]\n{\n  \"html\": \"<iframe class=\\\"embedly-embed\\\" src=\\\"//cdn.embedly.com/widgets/media.html?src=https%3A%2F%2Fwww.youtube.com%2Fembed%2Fn4PELomRiFY%3Ffeature%3Doembed%26start%3D0%26rel%3D0&display_name=YouTube&url=https%3A%2F%2Fwww.youtube.com%2Fwatch%3Fv%3Dn4PELomRiFY&image=https%3A%2F%2Fi.ytimg.com%2Fvi%2Fn4PELomRiFY%2Fhqdefault.jpg&key=02466f963b9b4bb8845a05b53d3235d7&type=text%2Fhtml&schema=youtube-nocookie\\\" width=\\\"854\\\" height=\\\"480\\\" scrolling=\\\"no\\\" title=\\\"YouTube embed\\\" frameborder=\\\"0\\\" allow=\\\"autoplay; fullscreen\\\" allowfullscreen=\\\"true\\\"></iframe>\",\n  \"url\": \"https://www.youtube-nocookie.com/embed/n4PELomRiFY?rel=0;start=0\",\n  \"title\": \"Matt Robertson - Instant Send - The Dash Conference\",\n  \"favicon\": \"https://www.youtube-nocookie.com/favicon.ico\",\n  \"image\": \"https://i.ytimg.com/vi/n4PELomRiFY/hqdefault.jpg\"\n}\n[/block]\n*InstantSend Data Flow*\n\n| **InstantSend Client** | **Direction**  | **Peers**   | **Description** |\n| --- | :---: | --- | --- |\n| [`inv` message](core-ref-p2p-network-data-messages#inv) (ix)          | \u2192 |                         | Client sends inventory for transaction lock request\n|                             | \u2190 | [`getdata` message](core-ref-p2p-network-data-messages#getdata) (ix)  | Peer responds with request for transaction lock request\n| `ix` message                | \u2192 |                         | Client sends InstantSend transaction lock request\n|                             | \u2190 | [`inv` message](core-ref-p2p-network-data-messages#inv) (txlvote) | Masternodes in the [quorum](core-guide-dash-features-masternode-quorums#quorum-configuration) respond with votes\n| [`getdata` message](core-ref-p2p-network-data-messages#getdata) (txlvote) | \u2192 |                         | Client requests vote\n|                             | \u2190 | `txlvote` message       | Peer responds with vote\n\nOnce an InstantSend lock has been requested, the `instantsend` field of various RPCs (e.g. the [`getmempoolentry` RPC](core-api-ref-remote-procedure-calls-blockchain#getmempoolentry)) is set to `true`. Then, if a sufficient number of votes approve the transaction lock, the InstantSend transaction is approved the `instantlock` field of the RPC is set to `true`.\n\nIf an InstantSend transaction is a valid transaction but does not receive a transaction lock, it reverts to being a standard transaction.\n\nThere are a number of limitations on InstantSend transactions:\n\n* The lock request will timeout 15 seconds after the first vote is seen (`INSTANTSEND_LOCK_TIMEOUT_SECONDS`)\n* The lock request will fail if it has not been locked after 60 seconds (`INSTANTSEND_FAILED_TIMEOUT_SECONDS`)\n* A \u201cper-input\u201d fee of 0.0001 DASH per input is required for non-simple transactions (inputs >=5) since they place a higher load on the masternodes. This fee was most recently decreased by [DIP-0001](https://github.com/dashpay/dips/blob/master/dip-0001.md).\n* To be used in an InstantSend transaction, an input must have at least the number confirmations (block depth) indicated by the table below\n\n| **Network** | **Confirmations Required** |\n| --- | --- |\n| Mainnet | 6 Blocks |\n| Testnet | 2 Blocks |\n| Regtest | 2 Blocks |\n| Devnet  | 2 Blocks |\n\nThere are some further limitations on Automatic InstantSend transactions:\n\n* DIP3 must be active\n* Spork 16 must be enabled\n* Mempool usage must be lower than 10% (`AUTO_IX_MEMPOOL_THRESHOLD`). As of Dash Core 0.13.0, this corresponds to a mempool size of 30 MB (`DEFAULT_MAX_MEMPOOL_SIZE` = 300 MB).\n\n**Historical Note**\n\nPrior to Dash Core 0.13.0, `instantsend` and `instantlock` values were not available via RPC. At that time, the InstantSend system worked as described below.\n\nOnce a sufficient number of votes approved the transaction lock, the InstantSend transaction was approved and showed 5 confirmations (`DEFAULT_INSTANTSEND_DEPTH`).\n\nNOTE: The 5 \"pseudo-confirmations\" were shown to convey confidence that the transaction was secure from double-spending and DID NOT indicate the transaction had already been confirmed to a block depth of 5 in the blockchain."
}