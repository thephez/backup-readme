{
 "metadata": {
  "image": [],
  "title": "Dash Masternode Sync",
  "description": "Dash Core performs full masternode synchronization as required. There are four conditions that initiate a start/restart the sync process.",
  "keywords": "",
  "robots": "index"
 },
 "api": {
  "method": "get",
  "url": "",
  "auth": "required",
  "results": {
   "codes": [
    {
     "status": 200,
     "language": "json",
     "code": "{}",
     "name": ""
    },
    {
     "status": 400,
     "language": "json",
     "code": "{}",
     "name": ""
    }
   ]
  },
  "params": []
 },
 "next": {
  "description": "",
  "pages": [
   {
    "type": "doc",
    "icon": "file-text-o",
    "name": "Governance",
    "slug": "core-guide-dash-features-governance",
    "category": "Core Guides"
   }
  ]
 },
 "algolia": {
  "recordCount": 4,
  "publishPending": false,
  "translationFailure": false,
  "updatedAt": "2023-02-21T19:15:47.019Z"
 },
 "title": "Masternode Sync",
 "icon": "",
 "updates": [],
 "type": "basic",
 "slug": "core-guide-dash-features-masternode-sync",
 "excerpt": "",
 "body": "Dash Core performs full <<glossary:masternode>> synchronization as required. There are four conditions that initiate a start/restart the sync process:\n\n* Initial startup of Dash Core\n* More than 60 minutes have passed since the last activation\n* A failure occurred during the last sync attempt (after a 1 minute cooldown before sync restarts)\n* Issuing a [`mnsync reset` RPC](core-api-ref-remote-procedure-calls-dash#mnsync) command\n\n# Initial Masternode Sync\n\nThe deterministic masternode lists introduced by [DIP3](https://github.com/dashpay/dips/blob/master/dip-0003.md) eliminated several steps of the sync process related to the masternode list and masternode payments. Since that information is now available on-chain, P2P messages related to those steps were deprecated.\n\nThis diagram shows the order in which P2P messages are sent to perform masternode synchronization initially after startup.\n\n![Masternode Sync (Initial)](https://dash-docs.github.io/img/dev/en-masternode-sync-initial-dip3.svg)\n\nThe following table details the data flow of P2P messages exchanged during initial masternode synchronization after the activation of [DIP3](https://github.com/dashpay/dips/blob/master/dip-0003.md) and <<glossary:Spork>> 15.\n\n| **Syncing Node Message** | **Direction**  | **Masternode Response**   | **Description** |\n| --- | :---: | --- | --- |\n| **1. Sporks** |   |  |  |\n| [`getsporks` message](core-ref-p2p-network-control-messages#getsporks)                            | \u2192 |                           | Syncing node requests sporks\n|                                                | \u2190 | [`spork` message](core-ref-p2p-network-control-messages#spork)(s)        |\n| **2. Mempool** |   |  |  |\n| [`mempool` message](core-ref-p2p-network-data-messages#mempool)                            | \u2192 |                           | Syncing node requests mempool entries\n|                                                | \u2190 | [`inv` message](core-ref-p2p-network-data-messages#inv)(s) | `inv` message(s) containing TXIDs of mempool transactions |\n| **3. Governance** |   |  | See [Governance sync](core-guide-dash-features-governance#synchronization) |\n\n*Masternode Sync Status*\n\nThere are several status values used to track masternode synchronization. They are used in both [`ssc` messages](core-ref-p2p-network-masternode-messages#ssc) and the [`mnsync` RPC](core-api-ref-remote-procedure-calls-dash#mnsync).\n\n| **Value** | **Status**  | **Description** |\n| --- | --- | --- |\n| _-1_  | _`MASTERNODE_SYNC_FAILED` _     | **Removed in Dash Core 0.16.0**<br>Synchronization failed |\n| _0_   | _`MASTERNODE_SYNC_INITIAL` _    | **Deprecated (merged with `MASTERNODE_SYNC_WAITING` in Dash Core 0.16.0)**<br>Synchronization just started, was reset recently, or is still in IBD |\n| 1   | `MASTERNODE_SYNC_BLOCKCHAIN` (previously `MASTERNODE_SYNC_WAITING`)  | **Renamed in Dash Core 0.16.0**<br>Synchronization pending - waiting after initial to check for more headers/blocks.  |\n| 4   | `MASTERNODE_SYNC_GOVERNANCE`  | Synchronizing governance objects  |\n| 999 | `MASTERNODE_SYNC_FINISHED`    | Synchronization finished |\n\n# Ongoing Masternode Sync\n\nOnce a masternode completes an initial full sync, continuing synchronization is maintained by the exchange of P2P messages with other <<glossary:nodes>>. This diagram shows an overview of the messages exchanged to keep governance objects synchronized between masternodes.\n\n![Masternode Sync (Ongoing)](https://dash-docs.github.io/img/dev/en-masternode-sync-ongoing.svg)\n\n**Governance**\n\nAfter the initial governance synchronization, governance information is kept current by the [`govobj` messages](core-ref-p2p-network-governance-messages#govobj) and [`govobjvote` messages](core-ref-p2p-network-governance-messages#govobjvote) relayed on the <<glossary:network>>. Unsynchronized <<glossary:peers>> may send [`govsync` messages](core-ref-p2p-network-governance-messages#govsync) to request governance sync.\n\n# Masternode Sync Schedule\n\nThe following tables detail the timing of various functions used to keep the masternodes in sync with each other. This information is derived from the scheduler section of `AppInitMain` in `src/init.cpp`.\n\n| **Period (seconds)** | **Action** | **Description** |\n| --- | --- | --- |\n| 6   | MN Sync                   | Synchronizes sporks and governance objects (masternode-sync.cpp) |\n\nThe following actions only run when the masternode sync is past `MASTERNODE_SYNC_WAITING` status.\n\n| **Period (seconds)** | **Action** | **Description** |\n| --- | --- | --- |\n| 60  | Process MN Connections    | Disconnects some masternodes (`masternodeman.cpp`) |\n| 60  | InstantSend Check/Remove  | Remove expired/orphaned/invalid InstantSend candidates and votes (`instantx.cpp`) |\n| 300 | Maintenance               | Check/remove/reprocess governance objects (`governance.cpp`) |",
 "order": 7,
 "isReference": false,
 "deprecated": false,
 "hidden": false,
 "sync_unique": "",
 "link_url": "",
 "link_external": false,
 "reusableContent": [],
 "previousSlug": "",
 "slugUpdatedAt": "2020-09-21T17:11:52.722Z",
 "revision": 2,
 "_id": "63f5176df91c7700118e77c3",
 "version": "63f5176df91c7700118e7825",
 "updatedAt": "2023-01-10T18:32:31.617Z",
 "createdAt": "2019-10-23T19:48:24.145Z",
 "project": "5daf2e65f4109c0040fd51e1",
 "user": "5b8400d7185d5e00036dcc3b",
 "parentDoc": "63f5176df91c7700118e77bd",
 "category": "63f5176df91c7700118e779e",
 "__v": 3,
 "pendingAlgoliaPublish": false,
 "isApi": false,
 "id": "63f5176df91c7700118e77c3",
 "body_html": "<p>Dash Core performs full <span class=\"GlossaryItem-trigger\">masternode</span> synchronization as required. There are four conditions that initiate a start/restart the sync process:</p>\n<ul>\n<li>Initial startup of Dash Core</li>\n<li>More than 60 minutes have passed since the last activation</li>\n<li>A failure occurred during the last sync attempt (after a 1 minute cooldown before sync restarts)</li>\n<li>Issuing a <a href=\"core-api-ref-remote-procedure-calls-dash#mnsync\" target=\"\" title=\"\"><button aria-label=\"Copy Code\" class=\"rdmd-code-copy fa\"></button><code class=\"rdmd-code lang- theme-light\" data-lang=\"\" name=\"\" tabindex=\"0\">mnsync reset</code> RPC</a> command</li>\n</ul>\n<h1 class=\"heading heading-1 header-scroll\" align=\"\"><div class=\"heading-anchor anchor waypoint\" id=\"initial-masternode-sync\"></div><div class=\"heading-text\"><div id=\"section-initial-masternode-sync\" class=\"heading-anchor_backwardsCompatibility\"></div>Initial Masternode Sync</div><a aria-label=\"Skip link to Initial Masternode Sync\" class=\"heading-anchor-icon fa fa-anchor\" href=\"#initial-masternode-sync\"></a></h1>\n<p>The deterministic masternode lists introduced by <a href=\"https://github.com/dashpay/dips/blob/master/dip-0003.md\" target=\"\" title=\"\">DIP3</a> eliminated several steps of the sync process related to the masternode list and masternode payments. Since that information is now available on-chain, P2P messages related to those steps were deprecated.</p>\n<p>This diagram shows the order in which P2P messages are sent to perform masternode synchronization initially after startup.</p>\n<p><span aria-label=\"Masternode Sync (Initial)\" class=\"img lightbox closed\" role=\"button\" tabindex=\"0\"><span class=\"lightbox-inner\"><img alt=\"Masternode Sync (Initial)\" loading=\"lazy\" src=\"https://dash-docs.github.io/img/dev/en-masternode-sync-initial-dip3.svg\" align=\"\" caption=\"\" height=\"auto\" title=\"\" width=\"auto\"/></span></span></p>\n<p>The following table details the data flow of P2P messages exchanged during initial masternode synchronization after the activation of <a href=\"https://github.com/dashpay/dips/blob/master/dip-0003.md\" target=\"\" title=\"\">DIP3</a> and <span class=\"GlossaryItem-trigger\">Spork</span> 15.</p>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n<div class=\"rdmd-table\"><div class=\"rdmd-table-inner\"><table><thead><tr><th><strong>Syncing Node Message</strong></th><th style=\"text-align:center\"><strong>Direction</strong></th><th><strong>Masternode Response</strong></th><th><strong>Description</strong></th></tr></thead><tbody><tr><td><strong>1. Sporks</strong></td><td style=\"text-align:center\"></td><td></td><td></td></tr><tr><td><a href=\"core-ref-p2p-network-control-messages#getsporks\" target=\"\" title=\"\"><button aria-label=\"Copy Code\" class=\"rdmd-code-copy fa\"></button><code class=\"rdmd-code lang- theme-light\" data-lang=\"\" name=\"\" tabindex=\"0\">getsporks</code> message</a></td><td style=\"text-align:center\">\u2192</td><td></td><td>Syncing node requests sporks</td></tr><tr><td></td><td style=\"text-align:center\">\u2190</td><td><a href=\"core-ref-p2p-network-control-messages#spork\" target=\"\" title=\"\"><button aria-label=\"Copy Code\" class=\"rdmd-code-copy fa\"></button><code class=\"rdmd-code lang- theme-light\" data-lang=\"\" name=\"\" tabindex=\"0\">spork</code> message</a>(s)</td><td></td></tr><tr><td><strong>2. Mempool</strong></td><td style=\"text-align:center\"></td><td></td><td></td></tr><tr><td><a href=\"core-ref-p2p-network-data-messages#mempool\" target=\"\" title=\"\"><button aria-label=\"Copy Code\" class=\"rdmd-code-copy fa\"></button><code class=\"rdmd-code lang- theme-light\" data-lang=\"\" name=\"\" tabindex=\"0\">mempool</code> message</a></td><td style=\"text-align:center\">\u2192</td><td></td><td>Syncing node requests mempool entries</td></tr><tr><td></td><td style=\"text-align:center\">\u2190</td><td><a href=\"core-ref-p2p-network-data-messages#inv\" target=\"\" title=\"\"><button aria-label=\"Copy Code\" class=\"rdmd-code-copy fa\"></button><code class=\"rdmd-code lang- theme-light\" data-lang=\"\" name=\"\" tabindex=\"0\">inv</code> message</a>(s)</td><td><button aria-label=\"Copy Code\" class=\"rdmd-code-copy fa\"></button><code class=\"rdmd-code lang- theme-light\" data-lang=\"\" name=\"\" tabindex=\"0\">inv</code> message(s) containing TXIDs of mempool transactions</td></tr><tr><td><strong>3. Governance</strong></td><td style=\"text-align:center\"></td><td></td><td>See <a href=\"core-guide-dash-features-governance#synchronization\" target=\"\" title=\"\">Governance sync</a></td></tr></tbody></table></div></div>\n<p><em>Masternode Sync Status</em></p>\n<p>There are several status values used to track masternode synchronization. They are used in both <a href=\"core-ref-p2p-network-masternode-messages#ssc\" target=\"\" title=\"\"><button aria-label=\"Copy Code\" class=\"rdmd-code-copy fa\"></button><code class=\"rdmd-code lang- theme-light\" data-lang=\"\" name=\"\" tabindex=\"0\">ssc</code> messages</a> and the <a href=\"core-api-ref-remote-procedure-calls-dash#mnsync\" target=\"\" title=\"\"><button aria-label=\"Copy Code\" class=\"rdmd-code-copy fa\"></button><code class=\"rdmd-code lang- theme-light\" data-lang=\"\" name=\"\" tabindex=\"0\">mnsync</code> RPC</a>.</p>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n<div class=\"rdmd-table\"><div class=\"rdmd-table-inner\"><table><thead><tr><th><strong>Value</strong></th><th><strong>Status</strong></th><th><strong>Description</strong></th></tr></thead><tbody><tr><td><em>-1</em></td><td><em><button aria-label=\"Copy Code\" class=\"rdmd-code-copy fa\"></button><code class=\"rdmd-code lang- theme-light\" data-lang=\"\" name=\"\" tabindex=\"0\">MASTERNODE_SYNC_FAILED</code> </em></td><td><strong>Removed in Dash Core 0.16.0</strong><br/>Synchronization failed</td></tr><tr><td><em>0</em></td><td><em><button aria-label=\"Copy Code\" class=\"rdmd-code-copy fa\"></button><code class=\"rdmd-code lang- theme-light\" data-lang=\"\" name=\"\" tabindex=\"0\">MASTERNODE_SYNC_INITIAL</code> </em></td><td><strong>Deprecated (merged with <button aria-label=\"Copy Code\" class=\"rdmd-code-copy fa\"></button><code class=\"rdmd-code lang- theme-light\" data-lang=\"\" name=\"\" tabindex=\"0\">MASTERNODE_SYNC_WAITING</code> in Dash Core 0.16.0)</strong><br/>Synchronization just started, was reset recently, or is still in IBD</td></tr><tr><td>1</td><td><button aria-label=\"Copy Code\" class=\"rdmd-code-copy fa\"></button><code class=\"rdmd-code lang- theme-light\" data-lang=\"\" name=\"\" tabindex=\"0\">MASTERNODE_SYNC_BLOCKCHAIN</code> (previously <button aria-label=\"Copy Code\" class=\"rdmd-code-copy fa\"></button><code class=\"rdmd-code lang- theme-light\" data-lang=\"\" name=\"\" tabindex=\"0\">MASTERNODE_SYNC_WAITING</code>)</td><td><strong>Renamed in Dash Core 0.16.0</strong><br/>Synchronization pending - waiting after initial to check for more headers/blocks.</td></tr><tr><td>4</td><td><button aria-label=\"Copy Code\" class=\"rdmd-code-copy fa\"></button><code class=\"rdmd-code lang- theme-light\" data-lang=\"\" name=\"\" tabindex=\"0\">MASTERNODE_SYNC_GOVERNANCE</code></td><td>Synchronizing governance objects</td></tr><tr><td>999</td><td><button aria-label=\"Copy Code\" class=\"rdmd-code-copy fa\"></button><code class=\"rdmd-code lang- theme-light\" data-lang=\"\" name=\"\" tabindex=\"0\">MASTERNODE_SYNC_FINISHED</code></td><td>Synchronization finished</td></tr></tbody></table></div></div>\n<h1 class=\"heading heading-1 header-scroll\" align=\"\"><div class=\"heading-anchor anchor waypoint\" id=\"ongoing-masternode-sync\"></div><div class=\"heading-text\"><div id=\"section-ongoing-masternode-sync\" class=\"heading-anchor_backwardsCompatibility\"></div>Ongoing Masternode Sync</div><a aria-label=\"Skip link to Ongoing Masternode Sync\" class=\"heading-anchor-icon fa fa-anchor\" href=\"#ongoing-masternode-sync\"></a></h1>\n<p>Once a masternode completes an initial full sync, continuing synchronization is maintained by the exchange of P2P messages with other <span class=\"GlossaryItem-trigger\">nodes</span>. This diagram shows an overview of the messages exchanged to keep governance objects synchronized between masternodes.</p>\n<p><span aria-label=\"Masternode Sync (Ongoing)\" class=\"img lightbox closed\" role=\"button\" tabindex=\"0\"><span class=\"lightbox-inner\"><img alt=\"Masternode Sync (Ongoing)\" loading=\"lazy\" src=\"https://dash-docs.github.io/img/dev/en-masternode-sync-ongoing.svg\" align=\"\" caption=\"\" height=\"auto\" title=\"\" width=\"auto\"/></span></span></p>\n<p><strong>Governance</strong></p>\n<p>After the initial governance synchronization, governance information is kept current by the <a href=\"core-ref-p2p-network-governance-messages#govobj\" target=\"\" title=\"\"><button aria-label=\"Copy Code\" class=\"rdmd-code-copy fa\"></button><code class=\"rdmd-code lang- theme-light\" data-lang=\"\" name=\"\" tabindex=\"0\">govobj</code> messages</a> and <a href=\"core-ref-p2p-network-governance-messages#govobjvote\" target=\"\" title=\"\"><button aria-label=\"Copy Code\" class=\"rdmd-code-copy fa\"></button><code class=\"rdmd-code lang- theme-light\" data-lang=\"\" name=\"\" tabindex=\"0\">govobjvote</code> messages</a> relayed on the <span class=\"GlossaryItem-trigger\">network</span>. Unsynchronized <span class=\"GlossaryItem-trigger\">peers</span> may send <a href=\"core-ref-p2p-network-governance-messages#govsync\" target=\"\" title=\"\"><button aria-label=\"Copy Code\" class=\"rdmd-code-copy fa\"></button><code class=\"rdmd-code lang- theme-light\" data-lang=\"\" name=\"\" tabindex=\"0\">govsync</code> messages</a> to request governance sync.</p>\n<h1 class=\"heading heading-1 header-scroll\" align=\"\"><div class=\"heading-anchor anchor waypoint\" id=\"masternode-sync-schedule\"></div><div class=\"heading-text\"><div id=\"section-masternode-sync-schedule\" class=\"heading-anchor_backwardsCompatibility\"></div>Masternode Sync Schedule</div><a aria-label=\"Skip link to Masternode Sync Schedule\" class=\"heading-anchor-icon fa fa-anchor\" href=\"#masternode-sync-schedule\"></a></h1>\n<p>The following tables detail the timing of various functions used to keep the masternodes in sync with each other. This information is derived from the scheduler section of <button aria-label=\"Copy Code\" class=\"rdmd-code-copy fa\"></button><code class=\"rdmd-code lang- theme-light\" data-lang=\"\" name=\"\" tabindex=\"0\">AppInitMain</code> in <button aria-label=\"Copy Code\" class=\"rdmd-code-copy fa\"></button><code class=\"rdmd-code lang- theme-light\" data-lang=\"\" name=\"\" tabindex=\"0\">src/init.cpp</code>.</p>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n<div class=\"rdmd-table\"><div class=\"rdmd-table-inner\"><table><thead><tr><th><strong>Period (seconds)</strong></th><th><strong>Action</strong></th><th><strong>Description</strong></th></tr></thead><tbody><tr><td>6</td><td>MN Sync</td><td>Synchronizes sporks and governance objects (masternode-sync.cpp)</td></tr></tbody></table></div></div>\n<p>The following actions only run when the masternode sync is past <button aria-label=\"Copy Code\" class=\"rdmd-code-copy fa\"></button><code class=\"rdmd-code lang- theme-light\" data-lang=\"\" name=\"\" tabindex=\"0\">MASTERNODE_SYNC_WAITING</code> status.</p>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n<div class=\"rdmd-table\"><div class=\"rdmd-table-inner\"><table><thead><tr><th><strong>Period (seconds)</strong></th><th><strong>Action</strong></th><th><strong>Description</strong></th></tr></thead><tbody><tr><td>60</td><td>Process MN Connections</td><td>Disconnects some masternodes (<button aria-label=\"Copy Code\" class=\"rdmd-code-copy fa\"></button><code class=\"rdmd-code lang- theme-light\" data-lang=\"\" name=\"\" tabindex=\"0\">masternodeman.cpp</code>)</td></tr><tr><td>60</td><td>InstantSend Check/Remove</td><td>Remove expired/orphaned/invalid InstantSend candidates and votes (<button aria-label=\"Copy Code\" class=\"rdmd-code-copy fa\"></button><code class=\"rdmd-code lang- theme-light\" data-lang=\"\" name=\"\" tabindex=\"0\">instantx.cpp</code>)</td></tr><tr><td>300</td><td>Maintenance</td><td>Check/remove/reprocess governance objects (<button aria-label=\"Copy Code\" class=\"rdmd-code-copy fa\"></button><code class=\"rdmd-code lang- theme-light\" data-lang=\"\" name=\"\" tabindex=\"0\">governance.cpp</code>)</td></tr></tbody></table></div></div>"
}