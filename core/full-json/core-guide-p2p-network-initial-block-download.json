{
 "metadata": {
  "keywords": "",
  "robots": "index",
  "description": "Before a full node can validate unconfirmed transactions and recently-mined blocks, it must download and validate all the blocks.",
  "title": "Initial Block Download",
  "image": []
 },
 "mdx": {
  "altBody": "",
  "status": "rdmd"
 },
 "api": {
  "results": {
   "codes": [
    {
     "status": 200,
     "language": "json",
     "code": "{}",
     "name": ""
    },
    {
     "status": 400,
     "language": "json",
     "code": "{}",
     "name": ""
    }
   ]
  },
  "auth": "required",
  "params": [],
  "url": "",
  "method": "get"
 },
 "next": {
  "pages": [
   {
    "type": "doc",
    "icon": "file-text-o",
    "name": "Block Broadcasting",
    "slug": "core-guide-p2p-network-block-broadcasting",
    "category": "Core Guides"
   }
  ],
  "description": ""
 },
 "algolia": {
  "translationFailure": false,
  "publishPending": false,
  "recordCount": 4,
  "updatedAt": "2023-02-21T19:15:49.767Z"
 },
 "reusableContent": [],
 "_id": "63f5176df91c7700118e77cf",
 "version": "63f5176df91c7700118e7825",
 "updatedAt": "2020-05-28T20:45:27.797Z",
 "createdAt": "2019-10-24T14:18:15.106Z",
 "project": "5daf2e65f4109c0040fd51e1",
 "user": "62b2101422da70001ee51d95",
 "parentDoc": "63f5176df91c7700118e77cc",
 "category": "63f5176df91c7700118e779e",
 "updates": [],
 "link_external": false,
 "link_url": "",
 "sync_unique": "",
 "hidden": false,
 "isReference": false,
 "order": 2,
 "body": "Before a full <<glossary:node>> can validate unconfirmed transactions and recently-mined <<glossary:blocks>>, it must download and validate all blocks from block 1 (the block after the hardcoded <<glossary:genesis block>>) to the current tip of the best <<glossary:block chain>>. This is the <<glossary:initial block download>> (IBD) or initial sync.\n\nAlthough the word \"initial\" implies this method is only used once, it can also be used any time a large number of blocks need to be downloaded, such as when a previously-caught-up node has been offline for a long time. In this case, a node can use the IBD method to download all the blocks which were produced since the last time it was online.\n\nDash Core uses the IBD method any time the last block on its local best block chain has a <<glossary:block header>> time more than 24 hours in the past. Dash Core will also perform IBD if its local best block chain is more than 144 blocks lower than its local best <<glossary:header chain>> (that is, the local block chain is more than about 6 hours in the past).\n\n# Blocks-First\n\nDash Core (up until version 0.12.0.x) uses a simple initial block download (IBD) method we'll call *blocks-first*. The goal is to download the blocks from the best block chain in sequence.\n\n![Overview Of Blocks-First Method](https://dash-docs.github.io/img/dev/en-blocks-first-flowchart.svg)\n\nThe first time a node is started, it only has a single block in its local best block chain---the hardcoded genesis block (block 0).  This node chooses a remote <<glossary:peer>>, called the sync node, and sends it the [`getblocks` message](core-ref-p2p-network-data-messages#getblocks) illustrated below.\n\n![First GetBlocks Message Sent During IBD](https://dash-docs.github.io/img/dev/en-ibd-getblocks.svg)\n\nIn the header hashes field of the [`getblocks` message](core-ref-p2p-network-data-messages#getblocks), this new node sends the header hash of the only block it has, the genesis block (`b67a...0000` in <<glossary:internal byte order>>).  It also sets the stop hash field to all zeroes to request a maximum-size response.\n\nUpon receipt of the [`getblocks` message](core-ref-p2p-network-data-messages#getblocks), the sync node takes the first (and only) header hash and searches its local best block chain for a block with that header hash. It finds that block 0 matches, so it replies with 500 block <<glossary:inventories>> (the maximum response to a [`getblocks` message](core-ref-p2p-network-data-messages#getblocks)) starting from block 1. It sends these inventories in the [`inv` message](core-ref-p2p-network-data-messages#inv) illustrated below.\n\n![First Inv Message Sent During IBD](https://dash-docs.github.io/img/dev/en-ibd-inv.svg)\n\nInventories are unique identifiers for information on the <<glossary:network>>. Each inventory contains a type field and the unique identifier for an instance of the object. For blocks, the unique identifier is a hash of the block's header.\n\nThe block inventories appear in the [`inv` message](core-ref-p2p-network-data-messages#inv) in the same order they appear in the block chain, so this first [`inv` message](core-ref-p2p-network-data-messages#inv) contains inventories for blocks 1 through 501. (For example, the hash of block 1 is `4343...0000` as seen in the illustration above.)\n\nThe IBD node uses the received inventories to request 128 blocks from the sync node in the [`getdata` message](core-ref-p2p-network-data-messages#getdata) illustrated below.\n\n![First GetData Message Sent During IBD](https://dash-docs.github.io/img/dev/en-ibd-getdata.svg)\n\nIt's important to <<glossary:blocks-first>> nodes that the blocks be requested and sent in order because each block header references the header hash of the preceding block. That means the IBD node can't fully validate a block until its parent block has been received. Blocks that can't be validated because their parents haven't been received are called <<glossary:orphan blocks>>; a subsection below describes them in more detail.\n\nUpon receipt of the [`getdata` message](core-ref-p2p-network-data-messages#getdata), the sync node replies with each of the blocks requested. Each block is put into <<glossary:serialized block>> format and sent in a separate [`block` message](core-ref-p2p-network-data-messages#block). The first [`block` message](core-ref-p2p-network-data-messages#block) sent (for block 1) is illustrated below.\n\n![First Block Message Sent During IBD](https://dash-docs.github.io/img/dev/en-ibd-block.svg)\n\nThe IBD node downloads each block, validates it, and then requests the next block it hasn't requested yet, maintaining a queue of up to 128 blocks to download. When it has requested every block for which it has an inventory, it sends another [`getblocks` message](core-ref-p2p-network-data-messages#getblocks) to the sync node requesting the inventories of up to 500 more blocks.  This second [`getblocks` message](core-ref-p2p-network-data-messages#getblocks) contains multiple header hashes as illustrated below:\n\n![Second GetBlocks Message Sent During IBD](https://dash-docs.github.io/img/dev/en-ibd-getblocks2.svg)\n\nUpon receipt of the second [`getblocks` message](core-ref-p2p-network-data-messages#getblocks), the sync node searches its local best block chain for a block that matches one of the header hashes in the message, trying each hash in the order they were received. If it finds a matching hash, it replies with 500 block inventories starting with the next block from that point. But if there is no matching hash (besides the stopping hash), it assumes the only block the two nodes have in common is block 0 and so it sends an `inv` starting with block 1 (the same [`inv` message](core-ref-p2p-network-data-messages#inv) seen several illustrations above).\n\nThis repeated search allows the sync node to send useful inventories even if the IBD node's local block chain forked from the sync node's local block chain. This <<glossary:fork>> detection becomes increasingly useful the closer the IBD node gets to the tip of the block chain.\n\nWhen the IBD node receives the second [`inv` message](core-ref-p2p-network-data-messages#inv), it will request those blocks using [`getdata` messages](core-ref-p2p-network-data-messages#getdata).  The sync node will respond with [`block` messages](core-ref-p2p-network-data-messages#block).  Then the IBD node will request more inventories with another [`getblocks` message](core-ref-p2p-network-data-messages#getblocks)---and the cycle will repeat until the IBD node is synced to the tip of the block chain.  At that point, the node will accept blocks sent through the regular block broadcasting described in a later subsection.\n\n## Blocks-First Advantages & Disadvantages\n\nThe primary advantage of <<glossary:blocks-first>> <<glossary:IBD>> is its simplicity. The primary disadvantage is that the IBD node relies on a single sync node for all of its downloading. This has several implications:\n\n* **Speed Limits:** All requests are made to the sync node, so if the sync node has limited upload bandwidth, the IBD node will have slow download speeds.  Note: if the sync node goes offline, Dash Core will continue downloading from another node---but it will still only download from a single sync node at a time.\n\n* **Download Restarts:** The sync node can send a non-best (but otherwise valid) block chain to the IBD node. The IBD node won't be able to identify it as non-best until the initial block download nears completion, forcing the IBD node to restart its block chain download over again from a different node. Dash Core ships with several block chain checkpoints at various block heights selected by developers to help an IBD node detect that it is being fed an alternative block chain history---allowing the IBD node to restart its download earlier in the process.\n\n* **Disk Fill Attacks:** Closely related to the download restarts, if the sync node sends a non-best (but otherwise valid) block chain, the chain will be stored on disk, wasting space and possibly filling up the disk drive with useless data.\n\n* **High Memory Use:** Whether maliciously or by accident, the sync node can send blocks out of order, creating orphan blocks which can't be validated until their parents have been received and validated. Orphan blocks are stored in memory while they await validation, which may lead to high memory use.\n\nAll of these problems are addressed in part or in full by the headers-first IBD method used since Dash Core 0.12.0.x.\n\n**Resources:** The table below summarizes the messages mentioned throughout this subsection. The links in the message field will take you to the reference page for that message.\n\n| **Message** | [getblocks message](core-ref-p2p-network-data-messages#getblocks) | [inv message](core-ref-p2p-network-data-messages#inv)                             | [getdata message](core-ref-p2p-network-data-messages#getdata)  | [block message](core-ref-p2p-network-data-messages#block)\n| --- | --- | --- | --- | --- |\n| **From\u2192To** | IBD\u2192Sync                         | Sync\u2192IBD                                         | IBD\u2192Sync                      | Sync\u2192IBD\n| **Payload** | One or more header hashes        | Up to 500 block inventories (unique identifiers) | One or more block inventories | One serialized block\n\n# Headers-First\n\nDash Core 0.12.0+ uses an <<glossary:initial block download>> (IBD) method called *<<glossary:headers-first>>*. The goal is to download the <<glossary:headers>> for the best <<glossary:header chain>>, partially validate them as best as possible, and then download the corresponding <<glossary:blocks>> in parallel.  This solves several problems with the older <<glossary:blocks-first>> IBD method.\n\n![Overview Of Headers-First Method](https://dash-docs.github.io/img/dev/en-headers-first-flowchart.svg)\n\nThe first time a node is started, it only has a single block in its local best <<glossary:block chain>>---the hardcoded <<glossary:genesis block>> (block 0).  The node chooses a remote <<glossary:peer>>, which we'll call the sync node, and sends it the [`getheaders` message](core-ref-p2p-network-data-messages#getheaders) illustrated below.\n\n![First getheaders message](https://dash-docs.github.io/img/dev/en-ibd-getheaders.svg)\n\nIn the header hashes field of the [`getheaders` message](core-ref-p2p-network-data-messages#getheaders), the new node sends the header hash of the only block it has, the genesis block (`b67a...0000` in internal byte order).  It also sets the stop hash field to all zeroes to request a maximum-size response.\n\nUpon receipt of the [`getheaders` message](core-ref-p2p-network-data-messages#getheaders), the sync node takes the first (and only) header hash and searches its local best block chain for a block with that header hash. It finds that block 0 matches, so it replies with 2,000 header (the maximum response) starting from block 1. It sends these header hashes in the [`headers` message](core-ref-p2p-network-data-messages#headers) illustrated below.\n\n![First headers message](https://dash-docs.github.io/img/dev/en-ibd-headers.svg)\n\nThe <<glossary:IBD>> <<glossary:node>> can partially validate these block headers by ensuring that all fields follow <<glossary:consensus rules>> and that the hash of the header is below the <<glossary:target threshold>> according to the nBits field.  (Full validation still requires all transactions from the corresponding block.)\n\nAfter the IBD node has partially validated the block headers, it can do two things in parallel:\n\n1. **Download More Headers:** the IBD node can send another [`getheaders` message](core-ref-p2p-network-data-messages#getheaders) to the sync node to request the next 2,000 headers on the best header chain. Those headers can be immediately validated and another batch requested repeatedly until a [`headers` message](core-ref-p2p-network-data-messages#headers) is received from the sync node with fewer than 2,000 headers, indicating that it has no more headers to offer. A <<glossary:headers>> sync for 1 million blocks can be completed in 500 round trips, or about 80 MB of downloaded data.\n\n    Once the IBD node receives a [`headers` message](core-ref-p2p-network-data-messages#headers) with fewer than 2,000 headers from the sync node, it sends a [`getheaders` message](core-ref-p2p-network-data-messages#getheaders) to each of its outbound peers to get their view of best header chain. By comparing the responses, it can easily determine if the headers it has downloaded belong to the best header chain reported by any of its outbound peers. This means a dishonest sync node will quickly be discovered even if checkpoints aren't used (as long as the IBD node connects to at least one honest peer; Dash Core will continue to provide checkpoints in case honest peers can't be found).\n\n2. **Download Blocks:** While the IBD node continues downloading headers, and after the headers finish downloading, the IBD node will request and download each <<glossary:block>>. The IBD node can use the block header hashes it computed from the header chain to create [`getdata` messages](core-ref-p2p-network-data-messages#getdata) that request the blocks it needs by their <<glossary:inventory>>. It doesn't need to request these from the sync node---it can request them from any of its full node <<glossary:peers>>. (Although not all full nodes may store all blocks.) This allows it to fetch blocks in parallel and avoid having its download speed constrained to the upload speed of a single sync node.\n\n    To spread the load between multiple peers, Dash Core will only request up to 16 blocks at a time from a single peer. Combined with its maximum of 8 outbound connections, this means Dash Core using headers-first will request a maximum of 128 blocks simultaneously during IBD (the same maximum number that blocks-first Dash Core requested from its sync node).\n\n![Simulated Headers-First Download Window](https://dash-docs.github.io/img/dev/en-headers-first-moving-window.svg)\n\nDash Core's headers-first mode uses a 1,024-block moving download window to maximize download speed. The lowest-height block in the window is the next block to be validated; if the block hasn't arrived by the time Dash Core is ready to validate it, Dash Core will wait a minimum of two more seconds for the stalling node to send the block. If the block still hasn't arrived, Dash Core will disconnect from the stalling node and attempt to connect to another node. For example, in the illustration above, Node A will be disconnected if it doesn't send block 3 within at least two seconds.\n\nOnce the IBD node is synced to the tip of the block chain, it will accept blocks sent through the regular block broadcasting described in a later subsection.\n\n**Resources:** The table below summarizes the messages mentioned throughout this subsection. The links in the message field will take you to the reference page for that message.\n\n| **Message** | [getheaders message](core-ref-p2p-network-data-messages#getheaders) | [headers message](core-ref-p2p-network-data-messages#headers) | [getdata message](core-ref-p2p-network-data-messages#getdata)                             | [block message](core-ref-p2p-network-data-messages#block)\n| --- | --- | --- | --- | --- |\n| **From\u2192To** | IBD\u2192Sync                           | Sync\u2192IBD                     | IBD\u2192*Many*                                               | *Many*\u2192IBD\n| **Payload** | One or more header hashes          | Up to 2,000 block headers    | One or more block inventories derived from header hashes | One serialized block",
 "excerpt": "",
 "slug": "core-guide-p2p-network-initial-block-download",
 "type": "basic",
 "title": "Initial Block Download",
 "__v": 1,
 "pendingAlgoliaPublish": false,
 "deprecated": false,
 "icon": "",
 "previousSlug": "",
 "revision": 2,
 "slugUpdatedAt": "2022-09-20T18:32:50.702Z",
 "isApi": false,
 "id": "63f5176df91c7700118e77cf",
 "body_html": "<p>Before a full <span class=\"GlossaryItem-trigger\">node</span> can validate unconfirmed transactions and recently-mined <span class=\"GlossaryItem-trigger\">blocks</span>, it must download and validate all blocks from block 1 (the block after the hardcoded <span class=\"GlossaryItem-trigger\">genesis block</span>) to the current tip of the best <span class=\"GlossaryItem-trigger\">block chain</span>. This is the <span class=\"GlossaryItem-trigger\">initial block download</span> (IBD) or initial sync.</p>\n<p>Although the word &quot;initial&quot; implies this method is only used once, it can also be used any time a large number of blocks need to be downloaded, such as when a previously-caught-up node has been offline for a long time. In this case, a node can use the IBD method to download all the blocks which were produced since the last time it was online.</p>\n<p>Dash Core uses the IBD method any time the last block on its local best block chain has a <span class=\"GlossaryItem-trigger\">block header</span> time more than 24 hours in the past. Dash Core will also perform IBD if its local best block chain is more than 144 blocks lower than its local best <span class=\"GlossaryItem-trigger\">header chain</span> (that is, the local block chain is more than about 6 hours in the past).</p>\n<h1 class=\"heading heading-1 header-scroll\" align=\"\"><div class=\"heading-anchor anchor waypoint\" id=\"blocks-first\"></div><div class=\"heading-text\"><div id=\"section-blocks-first\" class=\"heading-anchor_backwardsCompatibility\"></div>Blocks-First</div><a aria-label=\"Skip link to Blocks-First\" class=\"heading-anchor-icon fa fa-anchor\" href=\"#blocks-first\"></a></h1>\n<p>Dash Core (up until version 0.12.0.x) uses a simple initial block download (IBD) method we&#x27;ll call <em>blocks-first</em>. The goal is to download the blocks from the best block chain in sequence.</p>\n<p><span aria-label=\"Overview Of Blocks-First Method\" class=\"img lightbox closed\" role=\"button\" tabindex=\"0\"><span class=\"lightbox-inner\"><img alt=\"Overview Of Blocks-First Method\" loading=\"lazy\" src=\"https://dash-docs.github.io/img/dev/en-blocks-first-flowchart.svg\" align=\"\" caption=\"\" height=\"auto\" title=\"\" width=\"auto\"/></span></span></p>\n<p>The first time a node is started, it only has a single block in its local best block chain---the hardcoded genesis block (block 0).  This node chooses a remote <span class=\"GlossaryItem-trigger\">peer</span>, called the sync node, and sends it the <a href=\"core-ref-p2p-network-data-messages#getblocks\" target=\"\" title=\"\"><button aria-label=\"Copy Code\" class=\"rdmd-code-copy fa\"></button><code class=\"rdmd-code lang- theme-light\" data-lang=\"\" name=\"\" tabindex=\"0\">getblocks</code> message</a> illustrated below.</p>\n<p><span aria-label=\"First GetBlocks Message Sent During IBD\" class=\"img lightbox closed\" role=\"button\" tabindex=\"0\"><span class=\"lightbox-inner\"><img alt=\"First GetBlocks Message Sent During IBD\" loading=\"lazy\" src=\"https://dash-docs.github.io/img/dev/en-ibd-getblocks.svg\" align=\"\" caption=\"\" height=\"auto\" title=\"\" width=\"auto\"/></span></span></p>\n<p>In the header hashes field of the <a href=\"core-ref-p2p-network-data-messages#getblocks\" target=\"\" title=\"\"><button aria-label=\"Copy Code\" class=\"rdmd-code-copy fa\"></button><code class=\"rdmd-code lang- theme-light\" data-lang=\"\" name=\"\" tabindex=\"0\">getblocks</code> message</a>, this new node sends the header hash of the only block it has, the genesis block (<button aria-label=\"Copy Code\" class=\"rdmd-code-copy fa\"></button><code class=\"rdmd-code lang- theme-light\" data-lang=\"\" name=\"\" tabindex=\"0\">b67a...0000</code> in <span class=\"GlossaryItem-trigger\">internal byte order</span>).  It also sets the stop hash field to all zeroes to request a maximum-size response.</p>\n<p>Upon receipt of the <a href=\"core-ref-p2p-network-data-messages#getblocks\" target=\"\" title=\"\"><button aria-label=\"Copy Code\" class=\"rdmd-code-copy fa\"></button><code class=\"rdmd-code lang- theme-light\" data-lang=\"\" name=\"\" tabindex=\"0\">getblocks</code> message</a>, the sync node takes the first (and only) header hash and searches its local best block chain for a block with that header hash. It finds that block 0 matches, so it replies with 500 block <span class=\"GlossaryItem-trigger\">inventories</span> (the maximum response to a <a href=\"core-ref-p2p-network-data-messages#getblocks\" target=\"\" title=\"\"><button aria-label=\"Copy Code\" class=\"rdmd-code-copy fa\"></button><code class=\"rdmd-code lang- theme-light\" data-lang=\"\" name=\"\" tabindex=\"0\">getblocks</code> message</a>) starting from block 1. It sends these inventories in the <a href=\"core-ref-p2p-network-data-messages#inv\" target=\"\" title=\"\"><button aria-label=\"Copy Code\" class=\"rdmd-code-copy fa\"></button><code class=\"rdmd-code lang- theme-light\" data-lang=\"\" name=\"\" tabindex=\"0\">inv</code> message</a> illustrated below.</p>\n<p><span aria-label=\"First Inv Message Sent During IBD\" class=\"img lightbox closed\" role=\"button\" tabindex=\"0\"><span class=\"lightbox-inner\"><img alt=\"First Inv Message Sent During IBD\" loading=\"lazy\" src=\"https://dash-docs.github.io/img/dev/en-ibd-inv.svg\" align=\"\" caption=\"\" height=\"auto\" title=\"\" width=\"auto\"/></span></span></p>\n<p>Inventories are unique identifiers for information on the <span class=\"GlossaryItem-trigger\">network</span>. Each inventory contains a type field and the unique identifier for an instance of the object. For blocks, the unique identifier is a hash of the block&#x27;s header.</p>\n<p>The block inventories appear in the <a href=\"core-ref-p2p-network-data-messages#inv\" target=\"\" title=\"\"><button aria-label=\"Copy Code\" class=\"rdmd-code-copy fa\"></button><code class=\"rdmd-code lang- theme-light\" data-lang=\"\" name=\"\" tabindex=\"0\">inv</code> message</a> in the same order they appear in the block chain, so this first <a href=\"core-ref-p2p-network-data-messages#inv\" target=\"\" title=\"\"><button aria-label=\"Copy Code\" class=\"rdmd-code-copy fa\"></button><code class=\"rdmd-code lang- theme-light\" data-lang=\"\" name=\"\" tabindex=\"0\">inv</code> message</a> contains inventories for blocks 1 through 501. (For example, the hash of block 1 is <button aria-label=\"Copy Code\" class=\"rdmd-code-copy fa\"></button><code class=\"rdmd-code lang- theme-light\" data-lang=\"\" name=\"\" tabindex=\"0\">4343...0000</code> as seen in the illustration above.)</p>\n<p>The IBD node uses the received inventories to request 128 blocks from the sync node in the <a href=\"core-ref-p2p-network-data-messages#getdata\" target=\"\" title=\"\"><button aria-label=\"Copy Code\" class=\"rdmd-code-copy fa\"></button><code class=\"rdmd-code lang- theme-light\" data-lang=\"\" name=\"\" tabindex=\"0\">getdata</code> message</a> illustrated below.</p>\n<p><span aria-label=\"First GetData Message Sent During IBD\" class=\"img lightbox closed\" role=\"button\" tabindex=\"0\"><span class=\"lightbox-inner\"><img alt=\"First GetData Message Sent During IBD\" loading=\"lazy\" src=\"https://dash-docs.github.io/img/dev/en-ibd-getdata.svg\" align=\"\" caption=\"\" height=\"auto\" title=\"\" width=\"auto\"/></span></span></p>\n<p>It&#x27;s important to <span class=\"GlossaryItem-trigger\">blocks-first</span> nodes that the blocks be requested and sent in order because each block header references the header hash of the preceding block. That means the IBD node can&#x27;t fully validate a block until its parent block has been received. Blocks that can&#x27;t be validated because their parents haven&#x27;t been received are called <span class=\"GlossaryItem-trigger\">orphan blocks</span>; a subsection below describes them in more detail.</p>\n<p>Upon receipt of the <a href=\"core-ref-p2p-network-data-messages#getdata\" target=\"\" title=\"\"><button aria-label=\"Copy Code\" class=\"rdmd-code-copy fa\"></button><code class=\"rdmd-code lang- theme-light\" data-lang=\"\" name=\"\" tabindex=\"0\">getdata</code> message</a>, the sync node replies with each of the blocks requested. Each block is put into <span class=\"GlossaryItem-trigger\">serialized block</span> format and sent in a separate <a href=\"core-ref-p2p-network-data-messages#block\" target=\"\" title=\"\"><button aria-label=\"Copy Code\" class=\"rdmd-code-copy fa\"></button><code class=\"rdmd-code lang- theme-light\" data-lang=\"\" name=\"\" tabindex=\"0\">block</code> message</a>. The first <a href=\"core-ref-p2p-network-data-messages#block\" target=\"\" title=\"\"><button aria-label=\"Copy Code\" class=\"rdmd-code-copy fa\"></button><code class=\"rdmd-code lang- theme-light\" data-lang=\"\" name=\"\" tabindex=\"0\">block</code> message</a> sent (for block 1) is illustrated below.</p>\n<p><span aria-label=\"First Block Message Sent During IBD\" class=\"img lightbox closed\" role=\"button\" tabindex=\"0\"><span class=\"lightbox-inner\"><img alt=\"First Block Message Sent During IBD\" loading=\"lazy\" src=\"https://dash-docs.github.io/img/dev/en-ibd-block.svg\" align=\"\" caption=\"\" height=\"auto\" title=\"\" width=\"auto\"/></span></span></p>\n<p>The IBD node downloads each block, validates it, and then requests the next block it hasn&#x27;t requested yet, maintaining a queue of up to 128 blocks to download. When it has requested every block for which it has an inventory, it sends another <a href=\"core-ref-p2p-network-data-messages#getblocks\" target=\"\" title=\"\"><button aria-label=\"Copy Code\" class=\"rdmd-code-copy fa\"></button><code class=\"rdmd-code lang- theme-light\" data-lang=\"\" name=\"\" tabindex=\"0\">getblocks</code> message</a> to the sync node requesting the inventories of up to 500 more blocks.  This second <a href=\"core-ref-p2p-network-data-messages#getblocks\" target=\"\" title=\"\"><button aria-label=\"Copy Code\" class=\"rdmd-code-copy fa\"></button><code class=\"rdmd-code lang- theme-light\" data-lang=\"\" name=\"\" tabindex=\"0\">getblocks</code> message</a> contains multiple header hashes as illustrated below:</p>\n<p><span aria-label=\"Second GetBlocks Message Sent During IBD\" class=\"img lightbox closed\" role=\"button\" tabindex=\"0\"><span class=\"lightbox-inner\"><img alt=\"Second GetBlocks Message Sent During IBD\" loading=\"lazy\" src=\"https://dash-docs.github.io/img/dev/en-ibd-getblocks2.svg\" align=\"\" caption=\"\" height=\"auto\" title=\"\" width=\"auto\"/></span></span></p>\n<p>Upon receipt of the second <a href=\"core-ref-p2p-network-data-messages#getblocks\" target=\"\" title=\"\"><button aria-label=\"Copy Code\" class=\"rdmd-code-copy fa\"></button><code class=\"rdmd-code lang- theme-light\" data-lang=\"\" name=\"\" tabindex=\"0\">getblocks</code> message</a>, the sync node searches its local best block chain for a block that matches one of the header hashes in the message, trying each hash in the order they were received. If it finds a matching hash, it replies with 500 block inventories starting with the next block from that point. But if there is no matching hash (besides the stopping hash), it assumes the only block the two nodes have in common is block 0 and so it sends an <button aria-label=\"Copy Code\" class=\"rdmd-code-copy fa\"></button><code class=\"rdmd-code lang- theme-light\" data-lang=\"\" name=\"\" tabindex=\"0\">inv</code> starting with block 1 (the same <a href=\"core-ref-p2p-network-data-messages#inv\" target=\"\" title=\"\"><button aria-label=\"Copy Code\" class=\"rdmd-code-copy fa\"></button><code class=\"rdmd-code lang- theme-light\" data-lang=\"\" name=\"\" tabindex=\"0\">inv</code> message</a> seen several illustrations above).</p>\n<p>This repeated search allows the sync node to send useful inventories even if the IBD node&#x27;s local block chain forked from the sync node&#x27;s local block chain. This <span class=\"GlossaryItem-trigger\">fork</span> detection becomes increasingly useful the closer the IBD node gets to the tip of the block chain.</p>\n<p>When the IBD node receives the second <a href=\"core-ref-p2p-network-data-messages#inv\" target=\"\" title=\"\"><button aria-label=\"Copy Code\" class=\"rdmd-code-copy fa\"></button><code class=\"rdmd-code lang- theme-light\" data-lang=\"\" name=\"\" tabindex=\"0\">inv</code> message</a>, it will request those blocks using <a href=\"core-ref-p2p-network-data-messages#getdata\" target=\"\" title=\"\"><button aria-label=\"Copy Code\" class=\"rdmd-code-copy fa\"></button><code class=\"rdmd-code lang- theme-light\" data-lang=\"\" name=\"\" tabindex=\"0\">getdata</code> messages</a>.  The sync node will respond with <a href=\"core-ref-p2p-network-data-messages#block\" target=\"\" title=\"\"><button aria-label=\"Copy Code\" class=\"rdmd-code-copy fa\"></button><code class=\"rdmd-code lang- theme-light\" data-lang=\"\" name=\"\" tabindex=\"0\">block</code> messages</a>.  Then the IBD node will request more inventories with another <a href=\"core-ref-p2p-network-data-messages#getblocks\" target=\"\" title=\"\"><button aria-label=\"Copy Code\" class=\"rdmd-code-copy fa\"></button><code class=\"rdmd-code lang- theme-light\" data-lang=\"\" name=\"\" tabindex=\"0\">getblocks</code> message</a>---and the cycle will repeat until the IBD node is synced to the tip of the block chain.  At that point, the node will accept blocks sent through the regular block broadcasting described in a later subsection.</p>\n<h2 class=\"heading heading-2 header-scroll\" align=\"\"><div class=\"heading-anchor anchor waypoint\" id=\"blocks-first-advantages--disadvantages\"></div><div class=\"heading-text\"><div id=\"section-blocks-first-advantages-disadvantages\" class=\"heading-anchor_backwardsCompatibility\"></div>Blocks-First Advantages &amp; Disadvantages</div><a aria-label=\"Skip link to Blocks-First Advantages &amp; Disadvantages\" class=\"heading-anchor-icon fa fa-anchor\" href=\"#blocks-first-advantages--disadvantages\"></a></h2>\n<p>The primary advantage of <span class=\"GlossaryItem-trigger\">blocks-first</span> <span class=\"GlossaryItem-trigger\">IBD</span> is its simplicity. The primary disadvantage is that the IBD node relies on a single sync node for all of its downloading. This has several implications:</p>\n<ul>\n<li>\n<p><strong>Speed Limits:</strong> All requests are made to the sync node, so if the sync node has limited upload bandwidth, the IBD node will have slow download speeds.  Note: if the sync node goes offline, Dash Core will continue downloading from another node---but it will still only download from a single sync node at a time.</p>\n</li>\n<li>\n<p><strong>Download Restarts:</strong> The sync node can send a non-best (but otherwise valid) block chain to the IBD node. The IBD node won&#x27;t be able to identify it as non-best until the initial block download nears completion, forcing the IBD node to restart its block chain download over again from a different node. Dash Core ships with several block chain checkpoints at various block heights selected by developers to help an IBD node detect that it is being fed an alternative block chain history---allowing the IBD node to restart its download earlier in the process.</p>\n</li>\n<li>\n<p><strong>Disk Fill Attacks:</strong> Closely related to the download restarts, if the sync node sends a non-best (but otherwise valid) block chain, the chain will be stored on disk, wasting space and possibly filling up the disk drive with useless data.</p>\n</li>\n<li>\n<p><strong>High Memory Use:</strong> Whether maliciously or by accident, the sync node can send blocks out of order, creating orphan blocks which can&#x27;t be validated until their parents have been received and validated. Orphan blocks are stored in memory while they await validation, which may lead to high memory use.</p>\n</li>\n</ul>\n<p>All of these problems are addressed in part or in full by the headers-first IBD method used since Dash Core 0.12.0.x.</p>\n<p><strong>Resources:</strong> The table below summarizes the messages mentioned throughout this subsection. The links in the message field will take you to the reference page for that message.</p>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n<div class=\"rdmd-table\"><div class=\"rdmd-table-inner\"><table><thead><tr><th><strong>Message</strong></th><th><a href=\"core-ref-p2p-network-data-messages#getblocks\" target=\"\" title=\"\">getblocks message</a></th><th><a href=\"core-ref-p2p-network-data-messages#inv\" target=\"\" title=\"\">inv message</a></th><th><a href=\"core-ref-p2p-network-data-messages#getdata\" target=\"\" title=\"\">getdata message</a></th><th><a href=\"core-ref-p2p-network-data-messages#block\" target=\"\" title=\"\">block message</a></th></tr></thead><tbody><tr><td><strong>From\u2192To</strong></td><td>IBD\u2192Sync</td><td>Sync\u2192IBD</td><td>IBD\u2192Sync</td><td>Sync\u2192IBD</td></tr><tr><td><strong>Payload</strong></td><td>One or more header hashes</td><td>Up to 500 block inventories (unique identifiers)</td><td>One or more block inventories</td><td>One serialized block</td></tr></tbody></table></div></div>\n<h1 class=\"heading heading-1 header-scroll\" align=\"\"><div class=\"heading-anchor anchor waypoint\" id=\"headers-first\"></div><div class=\"heading-text\"><div id=\"section-headers-first\" class=\"heading-anchor_backwardsCompatibility\"></div>Headers-First</div><a aria-label=\"Skip link to Headers-First\" class=\"heading-anchor-icon fa fa-anchor\" href=\"#headers-first\"></a></h1>\n<p>Dash Core 0.12.0+ uses an <span class=\"GlossaryItem-trigger\">initial block download</span> (IBD) method called <em><span class=\"GlossaryItem-trigger\">headers-first</span></em>. The goal is to download the <span class=\"GlossaryItem-trigger\">headers</span> for the best <span class=\"GlossaryItem-trigger\">header chain</span>, partially validate them as best as possible, and then download the corresponding <span class=\"GlossaryItem-trigger\">blocks</span> in parallel.  This solves several problems with the older <span class=\"GlossaryItem-trigger\">blocks-first</span> IBD method.</p>\n<p><span aria-label=\"Overview Of Headers-First Method\" class=\"img lightbox closed\" role=\"button\" tabindex=\"0\"><span class=\"lightbox-inner\"><img alt=\"Overview Of Headers-First Method\" loading=\"lazy\" src=\"https://dash-docs.github.io/img/dev/en-headers-first-flowchart.svg\" align=\"\" caption=\"\" height=\"auto\" title=\"\" width=\"auto\"/></span></span></p>\n<p>The first time a node is started, it only has a single block in its local best <span class=\"GlossaryItem-trigger\">block chain</span>---the hardcoded <span class=\"GlossaryItem-trigger\">genesis block</span> (block 0).  The node chooses a remote <span class=\"GlossaryItem-trigger\">peer</span>, which we&#x27;ll call the sync node, and sends it the <a href=\"core-ref-p2p-network-data-messages#getheaders\" target=\"\" title=\"\"><button aria-label=\"Copy Code\" class=\"rdmd-code-copy fa\"></button><code class=\"rdmd-code lang- theme-light\" data-lang=\"\" name=\"\" tabindex=\"0\">getheaders</code> message</a> illustrated below.</p>\n<p><span aria-label=\"First getheaders message\" class=\"img lightbox closed\" role=\"button\" tabindex=\"0\"><span class=\"lightbox-inner\"><img alt=\"First getheaders message\" loading=\"lazy\" src=\"https://dash-docs.github.io/img/dev/en-ibd-getheaders.svg\" align=\"\" caption=\"\" height=\"auto\" title=\"\" width=\"auto\"/></span></span></p>\n<p>In the header hashes field of the <a href=\"core-ref-p2p-network-data-messages#getheaders\" target=\"\" title=\"\"><button aria-label=\"Copy Code\" class=\"rdmd-code-copy fa\"></button><code class=\"rdmd-code lang- theme-light\" data-lang=\"\" name=\"\" tabindex=\"0\">getheaders</code> message</a>, the new node sends the header hash of the only block it has, the genesis block (<button aria-label=\"Copy Code\" class=\"rdmd-code-copy fa\"></button><code class=\"rdmd-code lang- theme-light\" data-lang=\"\" name=\"\" tabindex=\"0\">b67a...0000</code> in internal byte order).  It also sets the stop hash field to all zeroes to request a maximum-size response.</p>\n<p>Upon receipt of the <a href=\"core-ref-p2p-network-data-messages#getheaders\" target=\"\" title=\"\"><button aria-label=\"Copy Code\" class=\"rdmd-code-copy fa\"></button><code class=\"rdmd-code lang- theme-light\" data-lang=\"\" name=\"\" tabindex=\"0\">getheaders</code> message</a>, the sync node takes the first (and only) header hash and searches its local best block chain for a block with that header hash. It finds that block 0 matches, so it replies with 2,000 header (the maximum response) starting from block 1. It sends these header hashes in the <a href=\"core-ref-p2p-network-data-messages#headers\" target=\"\" title=\"\"><button aria-label=\"Copy Code\" class=\"rdmd-code-copy fa\"></button><code class=\"rdmd-code lang- theme-light\" data-lang=\"\" name=\"\" tabindex=\"0\">headers</code> message</a> illustrated below.</p>\n<p><span aria-label=\"First headers message\" class=\"img lightbox closed\" role=\"button\" tabindex=\"0\"><span class=\"lightbox-inner\"><img alt=\"First headers message\" loading=\"lazy\" src=\"https://dash-docs.github.io/img/dev/en-ibd-headers.svg\" align=\"\" caption=\"\" height=\"auto\" title=\"\" width=\"auto\"/></span></span></p>\n<p>The <span class=\"GlossaryItem-trigger\">IBD</span> <span class=\"GlossaryItem-trigger\">node</span> can partially validate these block headers by ensuring that all fields follow <span class=\"GlossaryItem-trigger\">consensus rules</span> and that the hash of the header is below the <span class=\"GlossaryItem-trigger\">target threshold</span> according to the nBits field.  (Full validation still requires all transactions from the corresponding block.)</p>\n<p>After the IBD node has partially validated the block headers, it can do two things in parallel:</p>\n<ol>\n<li>\n<p><strong>Download More Headers:</strong> the IBD node can send another <a href=\"core-ref-p2p-network-data-messages#getheaders\" target=\"\" title=\"\"><button aria-label=\"Copy Code\" class=\"rdmd-code-copy fa\"></button><code class=\"rdmd-code lang- theme-light\" data-lang=\"\" name=\"\" tabindex=\"0\">getheaders</code> message</a> to the sync node to request the next 2,000 headers on the best header chain. Those headers can be immediately validated and another batch requested repeatedly until a <a href=\"core-ref-p2p-network-data-messages#headers\" target=\"\" title=\"\"><button aria-label=\"Copy Code\" class=\"rdmd-code-copy fa\"></button><code class=\"rdmd-code lang- theme-light\" data-lang=\"\" name=\"\" tabindex=\"0\">headers</code> message</a> is received from the sync node with fewer than 2,000 headers, indicating that it has no more headers to offer. A <span class=\"GlossaryItem-trigger\">headers</span> sync for 1 million blocks can be completed in 500 round trips, or about 80 MB of downloaded data.</p>\n<p>Once the IBD node receives a <a href=\"core-ref-p2p-network-data-messages#headers\" target=\"\" title=\"\"><button aria-label=\"Copy Code\" class=\"rdmd-code-copy fa\"></button><code class=\"rdmd-code lang- theme-light\" data-lang=\"\" name=\"\" tabindex=\"0\">headers</code> message</a> with fewer than 2,000 headers from the sync node, it sends a <a href=\"core-ref-p2p-network-data-messages#getheaders\" target=\"\" title=\"\"><button aria-label=\"Copy Code\" class=\"rdmd-code-copy fa\"></button><code class=\"rdmd-code lang- theme-light\" data-lang=\"\" name=\"\" tabindex=\"0\">getheaders</code> message</a> to each of its outbound peers to get their view of best header chain. By comparing the responses, it can easily determine if the headers it has downloaded belong to the best header chain reported by any of its outbound peers. This means a dishonest sync node will quickly be discovered even if checkpoints aren&#x27;t used (as long as the IBD node connects to at least one honest peer; Dash Core will continue to provide checkpoints in case honest peers can&#x27;t be found).</p>\n</li>\n<li>\n<p><strong>Download Blocks:</strong> While the IBD node continues downloading headers, and after the headers finish downloading, the IBD node will request and download each <span class=\"GlossaryItem-trigger\">block</span>. The IBD node can use the block header hashes it computed from the header chain to create <a href=\"core-ref-p2p-network-data-messages#getdata\" target=\"\" title=\"\"><button aria-label=\"Copy Code\" class=\"rdmd-code-copy fa\"></button><code class=\"rdmd-code lang- theme-light\" data-lang=\"\" name=\"\" tabindex=\"0\">getdata</code> messages</a> that request the blocks it needs by their <span class=\"GlossaryItem-trigger\">inventory</span>. It doesn&#x27;t need to request these from the sync node---it can request them from any of its full node <span class=\"GlossaryItem-trigger\">peers</span>. (Although not all full nodes may store all blocks.) This allows it to fetch blocks in parallel and avoid having its download speed constrained to the upload speed of a single sync node.</p>\n<p>To spread the load between multiple peers, Dash Core will only request up to 16 blocks at a time from a single peer. Combined with its maximum of 8 outbound connections, this means Dash Core using headers-first will request a maximum of 128 blocks simultaneously during IBD (the same maximum number that blocks-first Dash Core requested from its sync node).</p>\n</li>\n</ol>\n<p><span aria-label=\"Simulated Headers-First Download Window\" class=\"img lightbox closed\" role=\"button\" tabindex=\"0\"><span class=\"lightbox-inner\"><img alt=\"Simulated Headers-First Download Window\" loading=\"lazy\" src=\"https://dash-docs.github.io/img/dev/en-headers-first-moving-window.svg\" align=\"\" caption=\"\" height=\"auto\" title=\"\" width=\"auto\"/></span></span></p>\n<p>Dash Core&#x27;s headers-first mode uses a 1,024-block moving download window to maximize download speed. The lowest-height block in the window is the next block to be validated; if the block hasn&#x27;t arrived by the time Dash Core is ready to validate it, Dash Core will wait a minimum of two more seconds for the stalling node to send the block. If the block still hasn&#x27;t arrived, Dash Core will disconnect from the stalling node and attempt to connect to another node. For example, in the illustration above, Node A will be disconnected if it doesn&#x27;t send block 3 within at least two seconds.</p>\n<p>Once the IBD node is synced to the tip of the block chain, it will accept blocks sent through the regular block broadcasting described in a later subsection.</p>\n<p><strong>Resources:</strong> The table below summarizes the messages mentioned throughout this subsection. The links in the message field will take you to the reference page for that message.</p>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n<div class=\"rdmd-table\"><div class=\"rdmd-table-inner\"><table><thead><tr><th><strong>Message</strong></th><th><a href=\"core-ref-p2p-network-data-messages#getheaders\" target=\"\" title=\"\">getheaders message</a></th><th><a href=\"core-ref-p2p-network-data-messages#headers\" target=\"\" title=\"\">headers message</a></th><th><a href=\"core-ref-p2p-network-data-messages#getdata\" target=\"\" title=\"\">getdata message</a></th><th><a href=\"core-ref-p2p-network-data-messages#block\" target=\"\" title=\"\">block message</a></th></tr></thead><tbody><tr><td><strong>From\u2192To</strong></td><td>IBD\u2192Sync</td><td>Sync\u2192IBD</td><td>IBD\u2192<em>Many</em></td><td><em>Many</em>\u2192IBD</td></tr><tr><td><strong>Payload</strong></td><td>One or more header hashes</td><td>Up to 2,000 block headers</td><td>One or more block inventories derived from header hashes</td><td>One serialized block</td></tr></tbody></table></div></div>"
}