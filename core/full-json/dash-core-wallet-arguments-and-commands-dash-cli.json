{
 "metadata": {
  "keywords": "",
  "robots": "index",
  "image": [],
  "title": "dash-cli",
  "description": "The dash-cli application provides a command-line option for accessing Dash Core RPCs."
 },
 "mdx": {
  "altBody": "",
  "status": "rdmd"
 },
 "api": {
  "method": "get",
  "url": "",
  "auth": "required",
  "results": {
   "codes": [
    {
     "name": "",
     "code": "{}",
     "language": "json",
     "status": 200
    },
    {
     "name": "",
     "code": "{}",
     "language": "json",
     "status": 400
    }
   ]
  },
  "params": []
 },
 "next": {
  "description": "",
  "pages": []
 },
 "algolia": {
  "translationFailure": false,
  "publishPending": false,
  "recordCount": 4,
  "updatedAt": "2023-04-11T17:01:41.744Z"
 },
 "reusableContent": [],
 "_id": "63f5176df91c7700118e781c",
 "title": "dash-cli",
 "updates": [],
 "type": "basic",
 "slug": "dash-core-wallet-arguments-and-commands-dash-cli",
 "excerpt": "Dash Core RPC client",
 "body": "The `dash-cli` application provides a command-line option for accessing Dash Core RPCs.\n\n# Usage\n\n> \ud83d\udea7 Multiple wallet support\n> \n> Since Dash Core 18.0 introduced the ability to have multiple wallets loaded at the same time, wallet-related RPCs require using the `-rpcwallet` option any time more than one wallet file is loaded. This is to ensure the RPC command is executed using the correct wallet. The syntax is:  \n> `dash-cli -rpcwallet=<wallet-name> <command>`\n\n```bash Send command\ndash-cli [options] <command> [params]\n```\n```bash Send command using wallet\ndash-cli [options] -rpcwallet=<wallet-name> <command> [params]\n```\n```bash Send command (with named arguments)\n  dash-cli [options] -named <command> [name=value] ... \n```\n```bash List commands\ndash-cli [options] help\n```\n```bash Get help for command\ndash-cli [options] help <command>\n```\n\n\n\n> \ud83d\udcd8 RPC Details\n> \n> The list of RPCs can be found [here](core-api-ref-remote-procedure-call-quick-reference) with links to more detailed information. Using dash-cli, this information is available using the `dash-cli [options] help` and `dash-cli [options] help <command>` commands.\n\n## Options:\n\n```text\n  -?\n       Print this help message and exit\n\n  -conf=<file>\n       Specify configuration file. Relative paths will be prefixed by datadir\n       location. (default: dash.conf)\n\n  -datadir=<dir>\n       Specify data directory\n\n  -getinfo\n       Get general information from the remote server. Note that unlike\n       server-side RPC calls, the results of -getinfo is the result of\n       multiple non-atomic requests. Some entries in the result may\n       represent results from different states (e.g. wallet balance may\n       be as of a different block from the chain state reported)\n\n  -named\n       Pass named instead of positional arguments (default: false)\n\n  -rpcclienttimeout=<n>\n       Timeout in seconds during HTTP requests, or 0 for no timeout. (default:\n       900)\n\n  -rpcconnect=<ip>\n       Send commands to node running on <ip> (default: 127.0.0.1)\n\n  -rpccookiefile=<loc>\n       Location of the auth cookie. Relative paths will be prefixed by a\n       net-specific datadir location. (default: data dir)\n\n  -rpcpassword=<pw>\n       Password for JSON-RPC connections\n\n  -rpcport=<port>\n       Connect to JSON-RPC on <port> (default: 9998, testnet: 19998, regtest:\n       19898)\n\n  -rpcuser=<user>\n       Username for JSON-RPC connections\n\n  -rpcwait\n       Wait for RPC server to start\n\n  -rpcwallet=<walletname>\n       Send RPC for non-default wallet on RPC server (needs to exactly match\n       corresponding -wallet option passed to dashd). This changes the\n       RPC endpoint used, e.g. http://127.0.0.1:9998/wallet/<walletname>\n\n  -stdin\n       Read extra arguments from standard input, one per line until EOF/Ctrl-D\n       (recommended for sensitive information such as passphrases). When\n       combined with -stdinrpcpass, the first line from standard input\n       is used for the RPC password.\n\n  -stdinrpcpass\n       Read RPC password from standard input as a single line. When combined\n       with -stdin, the first line from standard input is used for the\n       RPC password. When combined with -stdinwalletpassphrase,\n       -stdinrpcpass consumes the first line, and -stdinwalletpassphrase\n       consumes the second.\n\n  -stdinwalletpassphrase\n       Read wallet passphrase from standard input as a single line. When\n       combined with -stdin, the first line from standard input is used\n       for the wallet passphrase.\n\n  -version\n       Print version and exit\n```\n\n\n\n## Chain selection options:\n\n```text\n  -devnet=<name>\n       Use devnet chain with provided name\n\n  -highsubsidyblocks=<n>\n       The number of blocks with a higher than normal subsidy to mine at the\n       start of a chain (default: 0, devnet-only)\n\n  -highsubsidyfactor=<n>\n       The factor to multiply the normal block subsidy by while in the\n       highsubsidyblocks window of a chain (default: 1, devnet-only)\n\n  -llmqchainlocks=<quorum name>\n       Override the default LLMQ type used for ChainLocks. Allows using\n       ChainLocks with smaller LLMQs. (default: llmq_50_60, devnet-only)\n\n  -llmqdevnetparams=<size>:<threshold>\n       Override the default LLMQ size for the LLMQ_DEVNET quorum (default: 3:2,\n       devnet-only)\n\n  -llmqinstantsend=<quorum name>\n       Override the default LLMQ type used for InstantSend. Allows using\n       InstantSend with smaller LLMQs. (default: llmq_50_60,\n       devnet-only)\n\n  -llmqinstantsenddip0024=<quorum name>\n       Override the default LLMQ type used for InstantSendDIP0024. (default:\n       llmq_60_75, devnet-only)\n\n  -llmqplatform=<quorum name>\n       Override the default LLMQ type used for Platform. (default: llmq_100_67,\n       devnet-only)\n\n  -minimumdifficultyblocks=<n>\n       The number of blocks that can be mined with the minimum difficulty at\n       the start of a chain (default: 0, devnet-only)\n\n  -powtargetspacing=<n>\n       Override the default PowTargetSpacing value in seconds (default: 2.5\n       minutes, devnet-only)\n\n  -testnet\n       Use the test chain\n```",
 "order": 2,
 "isReference": false,
 "hidden": false,
 "sync_unique": "",
 "link_url": "",
 "link_external": false,
 "pendingAlgoliaPublish": false,
 "parentDoc": "63f5176df91c7700118e781a",
 "createdAt": "2020-06-04T13:51:43.087Z",
 "updatedAt": "2023-04-11T17:01:41.336Z",
 "user": "5b8400d7185d5e00036dcc3b",
 "category": "63f5176df91c7700118e77a4",
 "project": "5daf2e65f4109c0040fd51e1",
 "version": "63f5176df91c7700118e7825",
 "__v": 0,
 "previousSlug": "",
 "slugUpdatedAt": "2020-10-06T21:18:37.098Z",
 "deprecated": false,
 "icon": "",
 "revision": 19,
 "isApi": false,
 "id": "63f5176df91c7700118e781c",
 "body_html": "<p>The <button aria-label=\"Copy Code\" class=\"rdmd-code-copy fa\"></button><code class=\"rdmd-code lang- theme-light\" data-lang=\"\" name=\"\" tabindex=\"0\">dash-cli</code> application provides a command-line option for accessing Dash Core RPCs.</p>\n<h1 class=\"heading heading-1 header-scroll\" align=\"\"><div class=\"heading-anchor anchor waypoint\" id=\"usage\"></div><div class=\"heading-text\"><div id=\"section-usage\" class=\"heading-anchor_backwardsCompatibility\"></div>Usage</div><a aria-label=\"Skip link to Usage\" class=\"heading-anchor-icon fa fa-anchor\" href=\"#usage\"></a></h1>\n<blockquote class=\"callout callout_warn\" theme=\"\ud83d\udea7\"><h2 class=\"callout-heading\"><span class=\"callout-icon\">\ud83d\udea7</span><p>Multiple wallet support</p></h2><p>Since Dash Core 18.0 introduced the ability to have multiple wallets loaded at the same time, wallet-related RPCs require using the <button aria-label=\"Copy Code\" class=\"rdmd-code-copy fa\"></button><code class=\"rdmd-code lang- theme-light\" data-lang=\"\" name=\"\" tabindex=\"0\">-rpcwallet</code> option any time more than one wallet file is loaded. This is to ensure the RPC command is executed using the correct wallet. The syntax is:<br/>\n<button aria-label=\"Copy Code\" class=\"rdmd-code-copy fa\"></button><code class=\"rdmd-code lang- theme-light\" data-lang=\"\" name=\"\" tabindex=\"0\">dash-cli -rpcwallet=&lt;wallet-name&gt; &lt;command&gt;</code></p></blockquote>\n<div class=\"CodeTabs CodeTabs_initial theme-light\"><div class=\"CodeTabs-toolbar\" role=\"tablist\"><button aria-selected=\"true\" class=\"CodeTabs_active\" role=\"tab\" type=\"button\">Send command</button><button aria-selected=\"false\" class=\"\" role=\"tab\" type=\"button\">Send command using wallet</button><button aria-selected=\"false\" class=\"\" role=\"tab\" type=\"button\">Send command (with named arguments)</button><button aria-selected=\"false\" class=\"\" role=\"tab\" type=\"button\">List commands</button><button aria-selected=\"false\" class=\"\" role=\"tab\" type=\"button\">Get help for command</button></div><div class=\"CodeTabs-inner\" role=\"tabpanel\"><pre><button aria-label=\"Copy Code\" class=\"rdmd-code-copy fa\"></button><code class=\"rdmd-code lang-bash theme-light\" data-lang=\"bash\" name=\"Send command\" tabindex=\"0\">dash-cli [options] &lt;command&gt; [params]\n</code></pre><pre><button aria-label=\"Copy Code\" class=\"rdmd-code-copy fa\"></button><code class=\"rdmd-code lang-bash theme-light\" data-lang=\"bash\" name=\"Send command using wallet\" tabindex=\"0\">dash-cli [options] -rpcwallet=&lt;wallet-name&gt; &lt;command&gt; [params]\n</code></pre><pre><button aria-label=\"Copy Code\" class=\"rdmd-code-copy fa\"></button><code class=\"rdmd-code lang-bash theme-light\" data-lang=\"bash\" name=\"Send command (with named arguments)\" tabindex=\"0\">  dash-cli [options] -named &lt;command&gt; [name=value] ... \n</code></pre><pre><button aria-label=\"Copy Code\" class=\"rdmd-code-copy fa\"></button><code class=\"rdmd-code lang-bash theme-light\" data-lang=\"bash\" name=\"List commands\" tabindex=\"0\">dash-cli [options] help\n</code></pre><pre><button aria-label=\"Copy Code\" class=\"rdmd-code-copy fa\"></button><code class=\"rdmd-code lang-bash theme-light\" data-lang=\"bash\" name=\"Get help for command\" tabindex=\"0\">dash-cli [options] help &lt;command&gt;\n</code></pre></div></div>\n<blockquote class=\"callout callout_info\" theme=\"\ud83d\udcd8\"><h2 class=\"callout-heading\"><span class=\"callout-icon\">\ud83d\udcd8</span><p>RPC Details</p></h2><p>The list of RPCs can be found <a href=\"core-api-ref-remote-procedure-call-quick-reference\" target=\"\" title=\"\">here</a> with links to more detailed information. Using dash-cli, this information is available using the <button aria-label=\"Copy Code\" class=\"rdmd-code-copy fa\"></button><code class=\"rdmd-code lang- theme-light\" data-lang=\"\" name=\"\" tabindex=\"0\">dash-cli [options] help</code> and <button aria-label=\"Copy Code\" class=\"rdmd-code-copy fa\"></button><code class=\"rdmd-code lang- theme-light\" data-lang=\"\" name=\"\" tabindex=\"0\">dash-cli [options] help &lt;command&gt;</code> commands.</p></blockquote>\n<h2 class=\"heading heading-2 header-scroll\" align=\"\"><div class=\"heading-anchor anchor waypoint\" id=\"options\"></div><div class=\"heading-text\"><div id=\"section-options\" class=\"heading-anchor_backwardsCompatibility\"></div>Options:</div><a aria-label=\"Skip link to Options:\" class=\"heading-anchor-icon fa fa-anchor\" href=\"#options\"></a></h2>\n<div class=\"CodeTabs CodeTabs_initial theme-light\"><div class=\"CodeTabs-toolbar\" role=\"tablist\"><button aria-selected=\"true\" class=\"CodeTabs_active\" role=\"tab\" type=\"button\">Text</button></div><div class=\"CodeTabs-inner\" role=\"tabpanel\"><pre><button aria-label=\"Copy Code\" class=\"rdmd-code-copy fa\"></button><code class=\"rdmd-code lang-text theme-light\" data-lang=\"text\" name=\"\" tabindex=\"0\">  -?\n       Print this help message and exit\n\n  -conf=&lt;file&gt;\n       Specify configuration file. Relative paths will be prefixed by datadir\n       location. (default: dash.conf)\n\n  -datadir=&lt;dir&gt;\n       Specify data directory\n\n  -getinfo\n       Get general information from the remote server. Note that unlike\n       server-side RPC calls, the results of -getinfo is the result of\n       multiple non-atomic requests. Some entries in the result may\n       represent results from different states (e.g. wallet balance may\n       be as of a different block from the chain state reported)\n\n  -named\n       Pass named instead of positional arguments (default: false)\n\n  -rpcclienttimeout=&lt;n&gt;\n       Timeout in seconds during HTTP requests, or 0 for no timeout. (default:\n       900)\n\n  -rpcconnect=&lt;ip&gt;\n       Send commands to node running on &lt;ip&gt; (default: 127.0.0.1)\n\n  -rpccookiefile=&lt;loc&gt;\n       Location of the auth cookie. Relative paths will be prefixed by a\n       net-specific datadir location. (default: data dir)\n\n  -rpcpassword=&lt;pw&gt;\n       Password for JSON-RPC connections\n\n  -rpcport=&lt;port&gt;\n       Connect to JSON-RPC on &lt;port&gt; (default: 9998, testnet: 19998, regtest:\n       19898)\n\n  -rpcuser=&lt;user&gt;\n       Username for JSON-RPC connections\n\n  -rpcwait\n       Wait for RPC server to start\n\n  -rpcwallet=&lt;walletname&gt;\n       Send RPC for non-default wallet on RPC server (needs to exactly match\n       corresponding -wallet option passed to dashd). This changes the\n       RPC endpoint used, e.g. http://127.0.0.1:9998/wallet/&lt;walletname&gt;\n\n  -stdin\n       Read extra arguments from standard input, one per line until EOF/Ctrl-D\n       (recommended for sensitive information such as passphrases). When\n       combined with -stdinrpcpass, the first line from standard input\n       is used for the RPC password.\n\n  -stdinrpcpass\n       Read RPC password from standard input as a single line. When combined\n       with -stdin, the first line from standard input is used for the\n       RPC password. When combined with -stdinwalletpassphrase,\n       -stdinrpcpass consumes the first line, and -stdinwalletpassphrase\n       consumes the second.\n\n  -stdinwalletpassphrase\n       Read wallet passphrase from standard input as a single line. When\n       combined with -stdin, the first line from standard input is used\n       for the wallet passphrase.\n\n  -version\n       Print version and exit\n</code></pre></div></div>\n<h2 class=\"heading heading-2 header-scroll\" align=\"\"><div class=\"heading-anchor anchor waypoint\" id=\"chain-selection-options\"></div><div class=\"heading-text\"><div id=\"section-chain-selection-options\" class=\"heading-anchor_backwardsCompatibility\"></div>Chain selection options:</div><a aria-label=\"Skip link to Chain selection options:\" class=\"heading-anchor-icon fa fa-anchor\" href=\"#chain-selection-options\"></a></h2>\n<div class=\"CodeTabs CodeTabs_initial theme-light\"><div class=\"CodeTabs-toolbar\" role=\"tablist\"><button aria-selected=\"true\" class=\"CodeTabs_active\" role=\"tab\" type=\"button\">Text</button></div><div class=\"CodeTabs-inner\" role=\"tabpanel\"><pre><button aria-label=\"Copy Code\" class=\"rdmd-code-copy fa\"></button><code class=\"rdmd-code lang-text theme-light\" data-lang=\"text\" name=\"\" tabindex=\"0\">  -devnet=&lt;name&gt;\n       Use devnet chain with provided name\n\n  -highsubsidyblocks=&lt;n&gt;\n       The number of blocks with a higher than normal subsidy to mine at the\n       start of a chain (default: 0, devnet-only)\n\n  -highsubsidyfactor=&lt;n&gt;\n       The factor to multiply the normal block subsidy by while in the\n       highsubsidyblocks window of a chain (default: 1, devnet-only)\n\n  -llmqchainlocks=&lt;quorum name&gt;\n       Override the default LLMQ type used for ChainLocks. Allows using\n       ChainLocks with smaller LLMQs. (default: llmq_50_60, devnet-only)\n\n  -llmqdevnetparams=&lt;size&gt;:&lt;threshold&gt;\n       Override the default LLMQ size for the LLMQ_DEVNET quorum (default: 3:2,\n       devnet-only)\n\n  -llmqinstantsend=&lt;quorum name&gt;\n       Override the default LLMQ type used for InstantSend. Allows using\n       InstantSend with smaller LLMQs. (default: llmq_50_60,\n       devnet-only)\n\n  -llmqinstantsenddip0024=&lt;quorum name&gt;\n       Override the default LLMQ type used for InstantSendDIP0024. (default:\n       llmq_60_75, devnet-only)\n\n  -llmqplatform=&lt;quorum name&gt;\n       Override the default LLMQ type used for Platform. (default: llmq_100_67,\n       devnet-only)\n\n  -minimumdifficultyblocks=&lt;n&gt;\n       The number of blocks that can be mined with the minimum difficulty at\n       the start of a chain (default: 0, devnet-only)\n\n  -powtargetspacing=&lt;n&gt;\n       Override the default PowTargetSpacing value in seconds (default: 2.5\n       minutes, devnet-only)\n\n  -testnet\n       Use the test chain\n</code></pre></div></div>"
}