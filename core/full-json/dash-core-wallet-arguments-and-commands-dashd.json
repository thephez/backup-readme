{
 "pendingAlgoliaPublish": false, 
 "parentDoc": "5ed8ebdf90de08002fb9239b", 
 "excerpt": "Dash Core daemon", 
 "api": {
  "url": "", 
  "params": [], 
  "method": "get", 
  "auth": "required", 
  "results": {
   "codes": [
    {
     "status": 200, 
     "code": "{}", 
     "name": "", 
     "language": "json"
    }, 
    {
     "status": 400, 
     "code": "{}", 
     "name": "", 
     "language": "json"
    }
   ]
  }
 }, 
 "previousSlug": "", 
 "updatedAt": "2020-10-06T21:18:59.232Z", 
 "id": "5ed9069ef5b0f1039b719bcd", 
 "sync_unique": "", 
 "isApi": false, 
 "createdAt": "2020-06-04T14:35:10.463Z", 
 "category": "5ed8eaf5f1719a01f34a7e5e", 
 "title": "dashd", 
 "next": {
  "description": "", 
  "pages": []
 }, 
 "version": "5e96055329a18c0025d39261", 
 "slugUpdatedAt": "2020-10-06T18:01:01.457Z", 
 "hidden": false, 
 "type": "basic", 
 "metadata": {
  "image": [], 
  "description": "", 
  "title": ""
 }, 
 "body": "# Usage\n\n**Start Dash Core Daemon**\n```bash \ndashd [options]\n```\n\n## Options:\n\n```text\n  -?\n       Print this help message and exit\n\n  -version\n       Print version and exit\n\n  -alertnotify=<cmd>\n       Execute command when a relevant alert is received or we see a really\n       long fork (%s in cmd is replaced by message)\n\n  -blocknotify=<cmd>\n       Execute command when the best block changes (%s in cmd is replaced by\n       block hash)\n\n  -assumevalid=<hex>\n       If this block is in the chain assume that it and its ancestors are valid\n       and potentially skip their script verification (0 to verify all,\n       default:\n       000000000000000c01e55cb55bcb15f700d79563efcbdecf8ab5aaee33dcfa49,\n       testnet:\n       0000019906db5219bdc6c9a0a94facf80356bcf1afebc0d356485711a294385f)\n\n  -conf=<file>\n       Specify configuration file. Relative paths will be prefixed by datadir\n       location. (default: dash.conf)\n\n  -daemon\n       Run in the background as a daemon and accept commands\n\n  -datadir=<dir>\n       Specify data directory\n\n  -dbcache=<n>\n       Set database cache size in megabytes (4 to 16384, default: 300)\n\n  -debuglogfile=<file>\n       Specify location of debug log file. Relative paths will be prefixed by a\n       net-specific datadir location. (default: debug.log)\n\n  -loadblock=<file>\n       Imports blocks from external blk000??.dat file on startup\n\n  -maxorphantxsize=<n>\n       Maximum total size of all orphan transactions in megabytes (default: 10)\n\n  -maxmempool=<n>\n       Keep the transaction memory pool below <n> megabytes (default: 300)\n\n  -mempoolexpiry=<n>\n       Do not keep transactions in the mempool longer than <n> hours (default:\n       336)\n\n  -persistmempool\n       Whether to save the mempool on shutdown and load on restart (default: 1)\n\n  -syncmempool\n       Sync mempool from other nodes on start (default: 1)\n\n  -blockreconstructionextratxn=<n>\n       Extra transactions to keep in memory for compact block reconstructions\n       (default: 100)\n\n  -par=<n>\n       Set the number of script verification threads (-4 to 16, 0 = auto, <0 =\n       leave that many cores free, default: 0)\n\n  -pid=<file>\n       Specify pid file. Relative paths will be prefixed by a net-specific\n       datadir location. (default: dashd.pid)\n\n  -prune=<n>\n       Reduce storage requirements by enabling pruning (deleting) of old\n       blocks. This allows the pruneblockchain RPC to be called to\n       delete specific blocks, and enables automatic pruning of old\n       blocks if a target size in MiB is provided. This mode is\n       incompatible with -txindex, -rescan and -disablegovernance=false.\n       Warning: Reverting this setting requires re-downloading the\n       entire blockchain. (default: 0 = disable pruning blocks, 1 =\n       allow manual pruning via RPC, >945 = automatically prune block\n       files to stay under the specified target size in MiB)\n\n  -reindex-chainstate\n       Rebuild chain state from the currently indexed blocks\n\n  -reindex\n       Rebuild chain state and block index from the blk*.dat files on disk\n\n  -sysperms\n       Create new files with system default permissions, instead of umask 077\n       (only effective with disabled wallet functionality)\n\n  -txindex\n       Maintain a full transaction index, used by the getrawtransaction rpc\n       call (default: 1)\n\n  -addressindex\n       Maintain a full address index, used to query for the balance, txids and\n       unspent outputs for addresses (default: 0)\n\n  -timestampindex\n       Maintain a timestamp index for block hashes, used to query blocks hashes\n       by a range of timestamps (default: 0)\n\n  -spentindex\n       Maintain a full spent index, used to query the spending txid and input\n       index for an outpoint (default: 0)\n```\n\n## Connection options:\n\n```text\n  -addnode=<ip>\n       Add a node to connect to and attempt to keep the connection open (see\n       the `addnode` RPC command help for more info)\n\n  -allowprivatenet\n       Allow RFC1918 addresses to be relayed and connected to (default: 0)\n\n  -banscore=<n>\n       Threshold for disconnecting misbehaving peers (default: 100)\n\n  -bantime=<n>\n       Number of seconds to keep misbehaving peers from reconnecting (default:\n       86400)\n\n  -bind=<addr>\n       Bind to given address and always listen on it. Use [host]:port notation\n       for IPv6\n\n  -connect=<ip>\n       Connect only to the specified node(s); -connect=0 disables automatic\n       connections (the rules for this peer are the same as for\n       -addnode)\n\n  -discover\n       Discover own IP addresses (default: 1 when listening and no -externalip\n       or -proxy)\n\n  -dns\n       Allow DNS lookups for -addnode, -seednode and -connect (default: 1)\n\n  -dnsseed\n       Query for peer addresses via DNS lookup, if low on addresses (default: 1\n       unless -connect used)\n\n  -enablebip61\n       Send reject messages per BIP61 (default: 1)\n\n  -externalip=<ip>\n       Specify your own public address\n\n  -forcednsseed\n       Always query for peer addresses via DNS lookup (default: 0)\n\n  -listen\n       Accept connections from outside (default: 1 if no -proxy or -connect)\n\n  -listenonion\n       Automatically create Tor hidden service (default: 1)\n\n  -maxconnections=<n>\n       Maintain at most <n> connections to peers (temporary service connections\n       excluded) (default: 125)\n\n  -maxreceivebuffer=<n>\n       Maximum per-connection receive buffer, <n>*1000 bytes (default: 5000)\n\n  -maxsendbuffer=<n>\n       Maximum per-connection send buffer, <n>*1000 bytes (default: 1000)\n\n  -maxtimeadjustment\n       Maximum allowed median peer time offset adjustment. Local perspective of\n       time may be influenced by peers forward or backward by this\n       amount. (default: 4200 seconds)\n\n  -onion=<ip:port>\n       Use separate SOCKS5 proxy to reach peers via Tor hidden services\n       (default: -proxy)\n\n  -onlynet=<net>\n       Only connect to nodes in network <net> (ipv4, ipv6 or onion)\n\n  -permitbaremultisig\n       Relay non-P2SH multisig (default: 1)\n\n  -peerbloomfilters\n       Support filtering of blocks and transaction with bloom filters (default:\n       1)\n\n  -port=<port>\n       Listen for connections on <port> (default: 9999 or testnet: 19999)\n\n  -proxy=<ip:port>\n       Connect through SOCKS5 proxy\n\n  -proxyrandomize\n       Randomize credentials for every proxy connection. This enables Tor\n       stream isolation (default: 1)\n\n  -seednode=<ip>\n       Connect to a node to retrieve peer addresses, and disconnect\n\n  -socketevents=<mode>\n       Socket events mode, which must be one of: 'select', 'poll', 'epoll'\n       (default: epoll)\n\n  -timeout=<n>\n       Specify connection timeout in milliseconds (minimum: 1, default: 5000)\n\n  -torcontrol=<ip>:<port>\n       Tor control port to use if onion listening enabled (default:\n       127.0.0.1:9051)\n\n  -torpassword=<pass>\n       Tor control port password (default: empty)\n\n  -upnp\n       Use UPnP to map the listening port (default: 0)\n\n  -whitebind=<addr>\n       Bind to given address and whitelist peers connecting to it. Use\n       [host]:port notation for IPv6\n\n  -whitelist=<IP address or network>\n       Whitelist peers connecting from the given IP address (e.g. 1.2.3.4) or\n       CIDR notated network (e.g. 1.2.3.0/24). Can be specified multiple\n       times. Whitelisted peers cannot be DoS banned and their\n       transactions are always relayed, even if they are already in the\n       mempool, useful e.g. for a gateway\n\n  -maxuploadtarget=<n>\n       Tries to keep outbound traffic under the given target (in MiB per 24h),\n       0 = no limit (default: 0)\n```\n\n## Wallet options:\n\n```text\n  -disablewallet\n       Do not load the wallet and disable wallet RPC calls\n\n  -keypool=<n>\n       Set key pool size to <n> (default: 1000)\n\n  -fallbackfee=<amt>\n       A fee rate (in DASH/kB) that will be used when fee estimation has\n       insufficient data (default: 0.00001)\n\n  -discardfee=<amt>\n       The fee rate (in DASH/kB) that indicates your tolerance for discarding\n       change by adding it to the fee (default: 0.0001). Note: An output\n       is discarded if it is dust at this rate, but we will always\n       discard up to the dust relay fee and a discard fee above that is\n       limited by the fee estimate for the longest target\n\n  -mintxfee=<amt>\n       Fees (in DASH/kB) smaller than this are considered zero fee for\n       transaction creation (default: 0.00001)\n\n  -paytxfee=<amt>\n       Fee (in DASH/kB) to add to transactions you send (default: 0.00)\n\n  -rescan\n       Rescan the block chain for missing wallet transactions on startup\n\n  -salvagewallet\n       Attempt to recover private keys from a corrupt wallet on startup\n\n  -spendzeroconfchange\n       Spend unconfirmed change when sending transactions (default: 1)\n\n  -txconfirmtarget=<n>\n       If paytxfee is not set, include enough fee so transactions begin\n       confirmation on average within n blocks (default: 6)\n\n  -usehd\n       Use hierarchical deterministic key generation (HD) after BIP39/BIP44.\n       Only has effect during wallet creation/first start (default: 0)\n\n  -mnemonic=<text>\n       User defined mnemonic for HD wallet (bip39). Only has effect during\n       wallet creation/first start (default: randomly generated)\n\n  -mnemonicpassphrase=<text>\n       User defined mnemonic passphrase for HD wallet (BIP39). Only has effect\n       during wallet creation/first start (default: empty string)\n\n  -hdseed=<hex>\n       User defined seed for HD wallet (should be in hex). Only has effect\n       during wallet creation/first start (default: randomly generated)\n\n  -upgradewallet\n       Upgrade wallet to latest format on startup\n\n  -wallet=<path>\n       Specify wallet database path. Can be specified multiple times to load\n       multiple wallets. Path is interpreted relative to <walletdir> if\n       it is not absolute, and will be created if it does not exist (as\n       a directory containing a wallet.dat file and log files). For\n       backwards compatibility this will also accept names of existing\n       data files in <walletdir>.)\n\n  -walletbroadcast\n       Make the wallet broadcast transactions (default: 1)\n\n  -walletdir=<dir>\n       Specify directory to hold wallets (default: <datadir>/wallets if it\n       exists, otherwise <datadir>)\n\n  -walletnotify=<cmd>\n       Execute command when a wallet transaction changes (%s in cmd is replaced\n       by TxID)\n\n  -zapwallettxes=<mode>\n       Delete all wallet transactions and only recover those parts of the\n       blockchain through -rescan on startup (1 = keep tx meta data e.g.\n       account owner and payment request information, 2 = drop tx meta\n       data)\n\n  -createwalletbackups=<n>\n       Number of automatic wallet backups (default: 10)\n\n  -walletbackupsdir=<dir>\n       Specify full path to directory for automatic wallet backups (must exist)\n\n  -keepass\n       Use KeePass 2 integration using KeePassHttp plugin (default: 0)\n\n  -keepassport=<port>\n       Connect to KeePassHttp on port <port> (default: 19455)\n\n  -keepasskey=<key>\n       KeePassHttp key for AES encrypted communication with KeePass\n\n  -keepassid=<id>\n       KeePassHttp id for the established association\n\n  -keepassname=<name>\n       Name to construct url for KeePass entry that stores the wallet\n       passphrase\n```\n\n##PrivateSend options:\n\n```\n  -enableprivatesend\n       Enable use of PrivateSend for funds stored in this wallet (0-1, default:\n       0)\n\n  -privatesendautostart\n       Start PrivateSend automatically (0-1, default: 0)\n\n  -privatesendmultisession\n       Enable multiple PrivateSend mixing sessions per block, experimental\n       (0-1, default: 0)\n\n  -privatesendsessions=<n>\n       Use N separate masternodes in parallel to mix funds (1-10, default: 4)\n\n  -privatesendrounds=<n>\n       Use N separate masternodes for each denominated input to mix funds\n       (2-16, default: 4)\n\n  -privatesendamount=<n>\n       Target PrivateSend balance (2-21000000, default: 1000)\n\n  -privatesenddenomsgoal=<n>\n       Try to create at least N inputs of each denominated amount (10-100000,\n       default: 50)\n\n  -privatesenddenomshardcap=<n>\n       Create up to N inputs of each denominated amount (10-100000, default:\n       300)\n```\n\n## ZeroMQ notification options:\n\n```\n  -zmqpubhashblock=<address>\n       Enable publish hash block in <address>\n\n  -zmqpubhashtx=<address>\n       Enable publish hash transaction in <address>\n\n  -zmqpubhashtxlock=<address>\n       Enable publish hash transaction (locked via InstantSend) in <address>\n\n  -zmqpubhashgovernancevote=<address>\n       Enable publish hash of governance votes in <address>\n\n  -zmqpubhashgovernanceobject=<address>\n       Enable publish hash of governance objects (like proposals) in <address>\n\n  -zmqpubhashinstantsenddoublespend=<address>\n       Enable publish transaction hashes of attempted InstantSend double spend\n       in <address>\n\n  -zmqpubrawblock=<address>\n       Enable publish raw block in <address>\n\n  -zmqpubrawtx=<address>\n       Enable publish raw transaction in <address>\n\n  -zmqpubrawtxlock=<address>\n       Enable publish raw transaction (locked via InstantSend) in <address>\n\n  -zmqpubrawinstantsenddoublespend=<address>\n       Enable publish raw transactions of attempted InstantSend double spend in\n       <address>\n```\n\n## Debugging/Testing options:\n\n```\n  -uacomment=<cmt>\n       Append comment to the user agent string\n\n  -debug=<category>\n       Output debugging information (default: 0, supplying <category> is\n       optional). If <category> is not supplied or if <category> = 1,\n       output all debugging information. <category> can be: net, tor,\n       mempool, http, bench, zmq, db, rpc, estimatefee, addrman,\n       selectcoins, reindex, cmpctblock, rand, prune, proxy, mempoolrej,\n       libevent, coindb, qt, leveldb, chainlocks, gobject, instantsend,\n       keepass, llmq, llmq-dkg, llmq-sigs, mnpayments, mnsync,\n       privatesend, spork, netconn.\n\n  -debugexclude=<category>\n       Exclude debugging information for a category. Can be used in conjunction\n       with -debug=1 to output debug logs for all categories except one\n       or more specified categories.\n\n  -help-debug\n       Show all debugging options (usage: --help -help-debug)\n\n  -logips\n       Include IP addresses in debug output (default: 0)\n\n  -logtimestamps\n       Prepend debug output with timestamp (default: 1)\n\n  -maxtxfee=<amt>\n       Maximum total fees (in DASH) to use in a single wallet transaction or\n       raw transaction; setting this too low may abort large\n       transactions (default: 0.10)\n\n  -printtoconsole\n       Send trace/debug info to console instead of debug.log file\n\n  -printtodebuglog\n       Send trace/debug info to debug.log file (default: 1)\n\n  -shrinkdebugfile\n       Shrink debug.log file on client startup (default: 1 when no -debug)\n```\n\n## Chain selection options:\n\n```\n  -testnet\n       Use the test chain\n\n  -devnet=<name>\n       Use devnet chain with provided name\n\n  -disablegovernance\n       Disable governance validation (0-1, default: 0)\n\n  -sporkaddr=<dashaddress>\n       Override spork address. Only useful for regtest and devnet. Using this\n       on mainnet or testnet will ban you.\n\n  -minsporkkeys=<n>\n       Overrides minimum spork signers to change spork value. Only useful for\n       regtest and devnet. Using this on mainnet or testnet will ban\n       you.\n```\n\n## Masternode options:\n\n```\n  -masternodeblsprivkey=<hex>\n       Set the masternode BLS private key and enable the client to act as a\n       masternode\n```\n\n## InstantSend options:\n\n```\n  -instantsendnotify=<cmd>\n       Execute command when a wallet InstantSend transaction is successfully\n       locked (%s in cmd is replaced by TxID)\n```\n\n## Node relay options:\n\n```\n  -bytespersigop\n       Minimum bytes per sigop in transactions we relay and mine (default: 20)\n\n  -datacarrier\n       Relay and mine data carrier transactions (default: 1)\n\n  -datacarriersize\n       Maximum size of data in data carrier transactions we relay and mine\n       (default: 83)\n\n  -minrelaytxfee=<amt>\n       Fees (in DASH/kB) smaller than this are considered zero fee for\n       relaying, mining and transaction creation (default: 0.00001)\n\n  -whitelistrelay\n       Accept relayed transactions received from whitelisted peers even when\n       not relaying transactions (default: 1)\n\n  -whitelistforcerelay\n       Force relay of transactions from whitelisted peers even if they violate\n       local relay policy (default: 1)\n```\n\n## Block creation options:\n\n```\n  -blockmaxsize=<n>\n       Set maximum block size in bytes (default: 2000000)\n\n  -blockmintxfee=<amt>\n       Set lowest fee rate (in DASH/kB) for transactions to be included in\n       block creation. (default: 0.00001)\n```\n\n## RPC server options:\n\n```\n  -server\n       Accept command line and JSON-RPC commands\n\n  -rest\n       Accept public REST requests (default: 0)\n\n  -rpcbind=<addr>[:port]\n       Bind to given address to listen for JSON-RPC connections. This option is\n       ignored unless -rpcallowip is also passed. Port is optional and\n       overrides -rpcport. Use [host]:port notation for IPv6. This\n       option can be specified multiple times (default: 127.0.0.1 and\n       ::1 i.e., localhost, or if -rpcallowip has been specified,\n       0.0.0.0 and :: i.e., all addresses)\n\n  -rpccookiefile=<loc>\n       Location of the auth cookie. Relative paths will be prefixed by a\n       net-specific datadir location. (default: data dir)\n\n  -rpcuser=<user>\n       Username for JSON-RPC connections\n\n  -rpcpassword=<pw>\n       Password for JSON-RPC connections\n\n  -rpcauth=<userpw>\n       Username and hashed password for JSON-RPC connections. The field\n       <userpw> comes in the format: <USERNAME>:<SALT>$<HASH>. A\n       canonical python script is included in share/rpcuser. The client\n       then connects normally using the\n       rpcuser=<USERNAME>/rpcpassword=<PASSWORD> pair of arguments. This\n       option can be specified multiple times\n\n  -rpcport=<port>\n       Listen for JSON-RPC connections on <port> (default: 9998 or testnet:\n       19998)\n\n  -rpcallowip=<ip>\n       Allow JSON-RPC connections from specified source. Valid for <ip> are a\n       single IP (e.g. 1.2.3.4), a network/netmask (e.g.\n       1.2.3.4/255.255.255.0) or a network/CIDR (e.g. 1.2.3.4/24). This\n       option can be specified multiple times\n\n  -rpcthreads=<n>\n       Set the number of threads to service RPC calls (default: 4)\n```", 
 "link_external": false, 
 "body_html": "<div class=\"magic-block-textarea\"><h1 class=\"header-scroll\"><div class=\"anchor waypoint\" id=\"section-usage\"></div>Usage<a class=\"fa fa-anchor\" href=\"#section-usage\"></a></h1>\n<p><strong>Start Dash Core Daemon</strong></p>\n<pre><code class=\"lang-bash\"><span class='cm-s-neo'>dashd [options]</span>\n</code></pre>\n<h2 class=\"header-scroll\"><div class=\"anchor waypoint\" id=\"section-options\"></div>Options:<a class=\"fa fa-anchor\" href=\"#section-options\"></a></h2>\n<pre><code class=\"lang-text\">  -?\n       Print this help message and exit\n\n  -version\n       Print version and exit\n\n  -alertnotify=&lt;cmd&gt;\n       Execute command when a relevant alert is received or we see a really\n       long fork (%s in cmd is replaced by message)\n\n  -blocknotify=&lt;cmd&gt;\n       Execute command when the best block changes (%s in cmd is replaced by\n       block hash)\n\n  -assumevalid=&lt;hex&gt;\n       If this block is in the chain assume that it and its ancestors are valid\n       and potentially skip their script verification (0 to verify all,\n       default:\n       000000000000000c01e55cb55bcb15f700d79563efcbdecf8ab5aaee33dcfa49,\n       testnet:\n       0000019906db5219bdc6c9a0a94facf80356bcf1afebc0d356485711a294385f)\n\n  -conf=&lt;file&gt;\n       Specify configuration file. Relative paths will be prefixed by datadir\n       location. (default: dash.conf)\n\n  -daemon\n       Run in the background as a daemon and accept commands\n\n  -datadir=&lt;dir&gt;\n       Specify data directory\n\n  -dbcache=&lt;n&gt;\n       Set database cache size in megabytes (4 to 16384, default: 300)\n\n  -debuglogfile=&lt;file&gt;\n       Specify location of debug log file. Relative paths will be prefixed by a\n       net-specific datadir location. (default: debug.log)\n\n  -loadblock=&lt;file&gt;\n       Imports blocks from external blk000??.dat file on startup\n\n  -maxorphantxsize=&lt;n&gt;\n       Maximum total size of all orphan transactions in megabytes (default: 10)\n\n  -maxmempool=&lt;n&gt;\n       Keep the transaction memory pool below &lt;n&gt; megabytes (default: 300)\n\n  -mempoolexpiry=&lt;n&gt;\n       Do not keep transactions in the mempool longer than &lt;n&gt; hours (default:\n       336)\n\n  -persistmempool\n       Whether to save the mempool on shutdown and load on restart (default: 1)\n\n  -syncmempool\n       Sync mempool from other nodes on start (default: 1)\n\n  -blockreconstructionextratxn=&lt;n&gt;\n       Extra transactions to keep in memory for compact block reconstructions\n       (default: 100)\n\n  -par=&lt;n&gt;\n       Set the number of script verification threads (-4 to 16, 0 = auto, &lt;0 =\n       leave that many cores free, default: 0)\n\n  -pid=&lt;file&gt;\n       Specify pid file. Relative paths will be prefixed by a net-specific\n       datadir location. (default: dashd.pid)\n\n  -prune=&lt;n&gt;\n       Reduce storage requirements by enabling pruning (deleting) of old\n       blocks. This allows the pruneblockchain RPC to be called to\n       delete specific blocks, and enables automatic pruning of old\n       blocks if a target size in MiB is provided. This mode is\n       incompatible with -txindex, -rescan and -disablegovernance=false.\n       Warning: Reverting this setting requires re-downloading the\n       entire blockchain. (default: 0 = disable pruning blocks, 1 =\n       allow manual pruning via RPC, &gt;945 = automatically prune block\n       files to stay under the specified target size in MiB)\n\n  -reindex-chainstate\n       Rebuild chain state from the currently indexed blocks\n\n  -reindex\n       Rebuild chain state and block index from the blk*.dat files on disk\n\n  -sysperms\n       Create new files with system default permissions, instead of umask 077\n       (only effective with disabled wallet functionality)\n\n  -txindex\n       Maintain a full transaction index, used by the getrawtransaction rpc\n       call (default: 1)\n\n  -addressindex\n       Maintain a full address index, used to query for the balance, txids and\n       unspent outputs for addresses (default: 0)\n\n  -timestampindex\n       Maintain a timestamp index for block hashes, used to query blocks hashes\n       by a range of timestamps (default: 0)\n\n  -spentindex\n       Maintain a full spent index, used to query the spending txid and input\n       index for an outpoint (default: 0)\n</code></pre>\n<h2 class=\"header-scroll\"><div class=\"anchor waypoint\" id=\"section-connection-options\"></div>Connection options:<a class=\"fa fa-anchor\" href=\"#section-connection-options\"></a></h2>\n<pre><code class=\"lang-text\">  -addnode=&lt;ip&gt;\n       Add a node to connect to and attempt to keep the connection open (see\n       the `addnode` RPC command help for more info)\n\n  -allowprivatenet\n       Allow RFC1918 addresses to be relayed and connected to (default: 0)\n\n  -banscore=&lt;n&gt;\n       Threshold for disconnecting misbehaving peers (default: 100)\n\n  -bantime=&lt;n&gt;\n       Number of seconds to keep misbehaving peers from reconnecting (default:\n       86400)\n\n  -bind=&lt;addr&gt;\n       Bind to given address and always listen on it. Use [host]:port notation\n       for IPv6\n\n  -connect=&lt;ip&gt;\n       Connect only to the specified node(s); -connect=0 disables automatic\n       connections (the rules for this peer are the same as for\n       -addnode)\n\n  -discover\n       Discover own IP addresses (default: 1 when listening and no -externalip\n       or -proxy)\n\n  -dns\n       Allow DNS lookups for -addnode, -seednode and -connect (default: 1)\n\n  -dnsseed\n       Query for peer addresses via DNS lookup, if low on addresses (default: 1\n       unless -connect used)\n\n  -enablebip61\n       Send reject messages per BIP61 (default: 1)\n\n  -externalip=&lt;ip&gt;\n       Specify your own public address\n\n  -forcednsseed\n       Always query for peer addresses via DNS lookup (default: 0)\n\n  -listen\n       Accept connections from outside (default: 1 if no -proxy or -connect)\n\n  -listenonion\n       Automatically create Tor hidden service (default: 1)\n\n  -maxconnections=&lt;n&gt;\n       Maintain at most &lt;n&gt; connections to peers (temporary service connections\n       excluded) (default: 125)\n\n  -maxreceivebuffer=&lt;n&gt;\n       Maximum per-connection receive buffer, &lt;n&gt;*1000 bytes (default: 5000)\n\n  -maxsendbuffer=&lt;n&gt;\n       Maximum per-connection send buffer, &lt;n&gt;*1000 bytes (default: 1000)\n\n  -maxtimeadjustment\n       Maximum allowed median peer time offset adjustment. Local perspective of\n       time may be influenced by peers forward or backward by this\n       amount. (default: 4200 seconds)\n\n  -onion=&lt;ip:port&gt;\n       Use separate SOCKS5 proxy to reach peers via Tor hidden services\n       (default: -proxy)\n\n  -onlynet=&lt;net&gt;\n       Only connect to nodes in network &lt;net&gt; (ipv4, ipv6 or onion)\n\n  -permitbaremultisig\n       Relay non-P2SH multisig (default: 1)\n\n  -peerbloomfilters\n       Support filtering of blocks and transaction with bloom filters (default:\n       1)\n\n  -port=&lt;port&gt;\n       Listen for connections on &lt;port&gt; (default: 9999 or testnet: 19999)\n\n  -proxy=&lt;ip:port&gt;\n       Connect through SOCKS5 proxy\n\n  -proxyrandomize\n       Randomize credentials for every proxy connection. This enables Tor\n       stream isolation (default: 1)\n\n  -seednode=&lt;ip&gt;\n       Connect to a node to retrieve peer addresses, and disconnect\n\n  -socketevents=&lt;mode&gt;\n       Socket events mode, which must be one of: &#39;select&#39;, &#39;poll&#39;, &#39;epoll&#39;\n       (default: epoll)\n\n  -timeout=&lt;n&gt;\n       Specify connection timeout in milliseconds (minimum: 1, default: 5000)\n\n  -torcontrol=&lt;ip&gt;:&lt;port&gt;\n       Tor control port to use if onion listening enabled (default:\n       127.0.0.1:9051)\n\n  -torpassword=&lt;pass&gt;\n       Tor control port password (default: empty)\n\n  -upnp\n       Use UPnP to map the listening port (default: 0)\n\n  -whitebind=&lt;addr&gt;\n       Bind to given address and whitelist peers connecting to it. Use\n       [host]:port notation for IPv6\n\n  -whitelist=&lt;IP address or network&gt;\n       Whitelist peers connecting from the given IP address (e.g. 1.2.3.4) or\n       CIDR notated network (e.g. 1.2.3.0&#x2F;24). Can be specified multiple\n       times. Whitelisted peers cannot be DoS banned and their\n       transactions are always relayed, even if they are already in the\n       mempool, useful e.g. for a gateway\n\n  -maxuploadtarget=&lt;n&gt;\n       Tries to keep outbound traffic under the given target (in MiB per 24h),\n       0 = no limit (default: 0)\n</code></pre>\n<h2 class=\"header-scroll\"><div class=\"anchor waypoint\" id=\"section-wallet-options\"></div>Wallet options:<a class=\"fa fa-anchor\" href=\"#section-wallet-options\"></a></h2>\n<pre><code class=\"lang-text\">  -disablewallet\n       Do not load the wallet and disable wallet RPC calls\n\n  -keypool=&lt;n&gt;\n       Set key pool size to &lt;n&gt; (default: 1000)\n\n  -fallbackfee=&lt;amt&gt;\n       A fee rate (in DASH&#x2F;kB) that will be used when fee estimation has\n       insufficient data (default: 0.00001)\n\n  -discardfee=&lt;amt&gt;\n       The fee rate (in DASH&#x2F;kB) that indicates your tolerance for discarding\n       change by adding it to the fee (default: 0.0001). Note: An output\n       is discarded if it is dust at this rate, but we will always\n       discard up to the dust relay fee and a discard fee above that is\n       limited by the fee estimate for the longest target\n\n  -mintxfee=&lt;amt&gt;\n       Fees (in DASH&#x2F;kB) smaller than this are considered zero fee for\n       transaction creation (default: 0.00001)\n\n  -paytxfee=&lt;amt&gt;\n       Fee (in DASH&#x2F;kB) to add to transactions you send (default: 0.00)\n\n  -rescan\n       Rescan the block chain for missing wallet transactions on startup\n\n  -salvagewallet\n       Attempt to recover private keys from a corrupt wallet on startup\n\n  -spendzeroconfchange\n       Spend unconfirmed change when sending transactions (default: 1)\n\n  -txconfirmtarget=&lt;n&gt;\n       If paytxfee is not set, include enough fee so transactions begin\n       confirmation on average within n blocks (default: 6)\n\n  -usehd\n       Use hierarchical deterministic key generation (HD) after BIP39&#x2F;BIP44.\n       Only has effect during wallet creation&#x2F;first start (default: 0)\n\n  -mnemonic=&lt;text&gt;\n       User defined mnemonic for HD wallet (bip39). Only has effect during\n       wallet creation&#x2F;first start (default: randomly generated)\n\n  -mnemonicpassphrase=&lt;text&gt;\n       User defined mnemonic passphrase for HD wallet (BIP39). Only has effect\n       during wallet creation&#x2F;first start (default: empty string)\n\n  -hdseed=&lt;hex&gt;\n       User defined seed for HD wallet (should be in hex). Only has effect\n       during wallet creation&#x2F;first start (default: randomly generated)\n\n  -upgradewallet\n       Upgrade wallet to latest format on startup\n\n  -wallet=&lt;path&gt;\n       Specify wallet database path. Can be specified multiple times to load\n       multiple wallets. Path is interpreted relative to &lt;walletdir&gt; if\n       it is not absolute, and will be created if it does not exist (as\n       a directory containing a wallet.dat file and log files). For\n       backwards compatibility this will also accept names of existing\n       data files in &lt;walletdir&gt;.)\n\n  -walletbroadcast\n       Make the wallet broadcast transactions (default: 1)\n\n  -walletdir=&lt;dir&gt;\n       Specify directory to hold wallets (default: &lt;datadir&gt;&#x2F;wallets if it\n       exists, otherwise &lt;datadir&gt;)\n\n  -walletnotify=&lt;cmd&gt;\n       Execute command when a wallet transaction changes (%s in cmd is replaced\n       by TxID)\n\n  -zapwallettxes=&lt;mode&gt;\n       Delete all wallet transactions and only recover those parts of the\n       blockchain through -rescan on startup (1 = keep tx meta data e.g.\n       account owner and payment request information, 2 = drop tx meta\n       data)\n\n  -createwalletbackups=&lt;n&gt;\n       Number of automatic wallet backups (default: 10)\n\n  -walletbackupsdir=&lt;dir&gt;\n       Specify full path to directory for automatic wallet backups (must exist)\n\n  -keepass\n       Use KeePass 2 integration using KeePassHttp plugin (default: 0)\n\n  -keepassport=&lt;port&gt;\n       Connect to KeePassHttp on port &lt;port&gt; (default: 19455)\n\n  -keepasskey=&lt;key&gt;\n       KeePassHttp key for AES encrypted communication with KeePass\n\n  -keepassid=&lt;id&gt;\n       KeePassHttp id for the established association\n\n  -keepassname=&lt;name&gt;\n       Name to construct url for KeePass entry that stores the wallet\n       passphrase\n</code></pre>\n<h2 class=\"header-scroll\"><div class=\"anchor waypoint\" id=\"section-private-send-options\"></div>PrivateSend options:<a class=\"fa fa-anchor\" href=\"#section-private-send-options\"></a></h2>\n<pre><code>  -enableprivatesend\n       Enable use of PrivateSend for funds stored in this wallet (0-1, default:\n       0)\n\n  -privatesendautostart\n       Start PrivateSend automatically (0-1, default: 0)\n\n  -privatesendmultisession\n       Enable multiple PrivateSend mixing sessions per block, experimental\n       (0-1, default: 0)\n\n  -privatesendsessions=&lt;n&gt;\n       Use N separate masternodes in parallel to mix funds (1-10, default: 4)\n\n  -privatesendrounds=&lt;n&gt;\n       Use N separate masternodes for each denominated input to mix funds\n       (2-16, default: 4)\n\n  -privatesendamount=&lt;n&gt;\n       Target PrivateSend balance (2-21000000, default: 1000)\n\n  -privatesenddenomsgoal=&lt;n&gt;\n       Try to create at least N inputs of each denominated amount (10-100000,\n       default: 50)\n\n  -privatesenddenomshardcap=&lt;n&gt;\n       Create up to N inputs of each denominated amount (10-100000, default:\n       300)\n</code></pre><h2 class=\"header-scroll\"><div class=\"anchor waypoint\" id=\"section-zero-mq-notification-options\"></div>ZeroMQ notification options:<a class=\"fa fa-anchor\" href=\"#section-zero-mq-notification-options\"></a></h2>\n<pre><code>  -zmqpubhashblock=&lt;address&gt;\n       Enable publish hash block in &lt;address&gt;\n\n  -zmqpubhashtx=&lt;address&gt;\n       Enable publish hash transaction in &lt;address&gt;\n\n  -zmqpubhashtxlock=&lt;address&gt;\n       Enable publish hash transaction (locked via InstantSend) in &lt;address&gt;\n\n  -zmqpubhashgovernancevote=&lt;address&gt;\n       Enable publish hash of governance votes in &lt;address&gt;\n\n  -zmqpubhashgovernanceobject=&lt;address&gt;\n       Enable publish hash of governance objects (like proposals) in &lt;address&gt;\n\n  -zmqpubhashinstantsenddoublespend=&lt;address&gt;\n       Enable publish transaction hashes of attempted InstantSend double spend\n       in &lt;address&gt;\n\n  -zmqpubrawblock=&lt;address&gt;\n       Enable publish raw block in &lt;address&gt;\n\n  -zmqpubrawtx=&lt;address&gt;\n       Enable publish raw transaction in &lt;address&gt;\n\n  -zmqpubrawtxlock=&lt;address&gt;\n       Enable publish raw transaction (locked via InstantSend) in &lt;address&gt;\n\n  -zmqpubrawinstantsenddoublespend=&lt;address&gt;\n       Enable publish raw transactions of attempted InstantSend double spend in\n       &lt;address&gt;\n</code></pre><h2 class=\"header-scroll\"><div class=\"anchor waypoint\" id=\"section-debugging-testing-options\"></div>Debugging/Testing options:<a class=\"fa fa-anchor\" href=\"#section-debugging-testing-options\"></a></h2>\n<pre><code>  -uacomment=&lt;cmt&gt;\n       Append comment to the user agent string\n\n  -debug=&lt;category&gt;\n       Output debugging information (default: 0, supplying &lt;category&gt; is\n       optional). If &lt;category&gt; is not supplied or if &lt;category&gt; = 1,\n       output all debugging information. &lt;category&gt; can be: net, tor,\n       mempool, http, bench, zmq, db, rpc, estimatefee, addrman,\n       selectcoins, reindex, cmpctblock, rand, prune, proxy, mempoolrej,\n       libevent, coindb, qt, leveldb, chainlocks, gobject, instantsend,\n       keepass, llmq, llmq-dkg, llmq-sigs, mnpayments, mnsync,\n       privatesend, spork, netconn.\n\n  -debugexclude=&lt;category&gt;\n       Exclude debugging information for a category. Can be used in conjunction\n       with -debug=1 to output debug logs for all categories except one\n       or more specified categories.\n\n  -help-debug\n       Show all debugging options (usage: --help -help-debug)\n\n  -logips\n       Include IP addresses in debug output (default: 0)\n\n  -logtimestamps\n       Prepend debug output with timestamp (default: 1)\n\n  -maxtxfee=&lt;amt&gt;\n       Maximum total fees (in DASH) to use in a single wallet transaction or\n       raw transaction; setting this too low may abort large\n       transactions (default: 0.10)\n\n  -printtoconsole\n       Send trace/debug info to console instead of debug.log file\n\n  -printtodebuglog\n       Send trace/debug info to debug.log file (default: 1)\n\n  -shrinkdebugfile\n       Shrink debug.log file on client startup (default: 1 when no -debug)\n</code></pre><h2 class=\"header-scroll\"><div class=\"anchor waypoint\" id=\"section-chain-selection-options\"></div>Chain selection options:<a class=\"fa fa-anchor\" href=\"#section-chain-selection-options\"></a></h2>\n<pre><code>  -testnet\n       Use the test chain\n\n  -devnet=&lt;name&gt;\n       Use devnet chain with provided name\n\n  -disablegovernance\n       Disable governance validation (0-1, default: 0)\n\n  -sporkaddr=&lt;dashaddress&gt;\n       Override spork address. Only useful for regtest and devnet. Using this\n       on mainnet or testnet will ban you.\n\n  -minsporkkeys=&lt;n&gt;\n       Overrides minimum spork signers to change spork value. Only useful for\n       regtest and devnet. Using this on mainnet or testnet will ban\n       you.\n</code></pre><h2 class=\"header-scroll\"><div class=\"anchor waypoint\" id=\"section-masternode-options\"></div>Masternode options:<a class=\"fa fa-anchor\" href=\"#section-masternode-options\"></a></h2>\n<pre><code>  -masternodeblsprivkey=&lt;hex&gt;\n       Set the masternode BLS private key and enable the client to act as a\n       masternode\n</code></pre><h2 class=\"header-scroll\"><div class=\"anchor waypoint\" id=\"section-instant-send-options\"></div>InstantSend options:<a class=\"fa fa-anchor\" href=\"#section-instant-send-options\"></a></h2>\n<pre><code>  -instantsendnotify=&lt;cmd&gt;\n       Execute command when a wallet InstantSend transaction is successfully\n       locked (%s in cmd is replaced by TxID)\n</code></pre><h2 class=\"header-scroll\"><div class=\"anchor waypoint\" id=\"section-node-relay-options\"></div>Node relay options:<a class=\"fa fa-anchor\" href=\"#section-node-relay-options\"></a></h2>\n<pre><code>  -bytespersigop\n       Minimum bytes per sigop in transactions we relay and mine (default: 20)\n\n  -datacarrier\n       Relay and mine data carrier transactions (default: 1)\n\n  -datacarriersize\n       Maximum size of data in data carrier transactions we relay and mine\n       (default: 83)\n\n  -minrelaytxfee=&lt;amt&gt;\n       Fees (in DASH/kB) smaller than this are considered zero fee for\n       relaying, mining and transaction creation (default: 0.00001)\n\n  -whitelistrelay\n       Accept relayed transactions received from whitelisted peers even when\n       not relaying transactions (default: 1)\n\n  -whitelistforcerelay\n       Force relay of transactions from whitelisted peers even if they violate\n       local relay policy (default: 1)\n</code></pre><h2 class=\"header-scroll\"><div class=\"anchor waypoint\" id=\"section-block-creation-options\"></div>Block creation options:<a class=\"fa fa-anchor\" href=\"#section-block-creation-options\"></a></h2>\n<pre><code>  -blockmaxsize=&lt;n&gt;\n       Set maximum block size in bytes (default: 2000000)\n\n  -blockmintxfee=&lt;amt&gt;\n       Set lowest fee rate (in DASH/kB) for transactions to be included in\n       block creation. (default: 0.00001)\n</code></pre><h2 class=\"header-scroll\"><div class=\"anchor waypoint\" id=\"section-rpc-server-options\"></div>RPC server options:<a class=\"fa fa-anchor\" href=\"#section-rpc-server-options\"></a></h2>\n<pre><code>  -server\n       Accept command line and JSON-RPC commands\n\n  -rest\n       Accept public REST requests (default: 0)\n\n  -rpcbind=&lt;addr&gt;[:port]\n       Bind to given address to listen for JSON-RPC connections. This option is\n       ignored unless -rpcallowip is also passed. Port is optional and\n       overrides -rpcport. Use [host]:port notation for IPv6. This\n       option can be specified multiple times (default: 127.0.0.1 and\n       ::1 i.e., localhost, or if -rpcallowip has been specified,\n       0.0.0.0 and :: i.e., all addresses)\n\n  -rpccookiefile=&lt;loc&gt;\n       Location of the auth cookie. Relative paths will be prefixed by a\n       net-specific datadir location. (default: data dir)\n\n  -rpcuser=&lt;user&gt;\n       Username for JSON-RPC connections\n\n  -rpcpassword=&lt;pw&gt;\n       Password for JSON-RPC connections\n\n  -rpcauth=&lt;userpw&gt;\n       Username and hashed password for JSON-RPC connections. The field\n       &lt;userpw&gt; comes in the format: &lt;USERNAME&gt;:&lt;SALT&gt;$&lt;HASH&gt;. A\n       canonical python script is included in share/rpcuser. The client\n       then connects normally using the\n       rpcuser=&lt;USERNAME&gt;/rpcpassword=&lt;PASSWORD&gt; pair of arguments. This\n       option can be specified multiple times\n\n  -rpcport=&lt;port&gt;\n       Listen for JSON-RPC connections on &lt;port&gt; (default: 9998 or testnet:\n       19998)\n\n  -rpcallowip=&lt;ip&gt;\n       Allow JSON-RPC connections from specified source. Valid for &lt;ip&gt; are a\n       single IP (e.g. 1.2.3.4), a network/netmask (e.g.\n       1.2.3.4/255.255.255.0) or a network/CIDR (e.g. 1.2.3.4/24). This\n       option can be specified multiple times\n\n  -rpcthreads=&lt;n&gt;\n       Set the number of threads to service RPC calls (default: 4)\n</code></pre>\n</div>", 
 "updates": [], 
 "isReference": false, 
 "slug": "dash-core-wallet-arguments-and-commands-dashd", 
 "link_url": "", 
 "project": "5daf2e65f4109c0040fd51e1", 
 "__v": 0, 
 "_id": "5ed9069ef5b0f1039b719bcd", 
 "order": 0, 
 "user": "5b8400d7185d5e00036dcc3b"
}