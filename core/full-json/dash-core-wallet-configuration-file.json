{
 "metadata": {
  "image": [],
  "title": "Configuration File",
  "description": "To use dashd and dash-cli, you will need to add a RPC password to your dash.conf file.",
  "keywords": "",
  "robots": "index"
 },
 "mdx": {
  "altBody": "",
  "status": "rdmd"
 },
 "api": {
  "method": "get",
  "url": "",
  "auth": "required",
  "results": {
   "codes": [
    {
     "name": "",
     "code": "{}",
     "language": "json",
     "status": 200
    },
    {
     "name": "",
     "code": "{}",
     "language": "json",
     "status": 400
    }
   ]
  },
  "params": []
 },
 "next": {
  "description": "",
  "pages": []
 },
 "algolia": {
  "recordCount": 4,
  "publishPending": false,
  "translationFailure": false,
  "updatedAt": "2023-02-21T19:16:08.676Z"
 },
 "title": "Configuration Files",
 "icon": "",
 "updates": [],
 "type": "basic",
 "slug": "dash-core-wallet-configuration-file",
 "excerpt": "Dash Core settings",
 "body": "# dash.conf\n\nTo use `dashd` and `dash-cli`, you will need to add a RPC password to your `dash.conf` file. Both programs will read from the same file if both run on the same system as the same user, so any long random password will work:\n\n``` text\nrpcpassword=change_this_to_a_long_random_password\n```\n\nYou should also make the `dash.conf` file only readable to its owner.  On Linux, Mac OSX, and other Unix-like systems, this can be accomplished by running the following command in the Dash Core application directory:\n\n``` text\nchmod 0600 dash.conf\n```\n\nFor development, it's safer and cheaper to use Dash's test network (<<glossary:testnet>>), <<glossary:regression test mode>> (regtest), or a developer network  (<<glossary:devnet>>) described below.\n\nQuestions about Dash use are best sent to the [Dash forum](https://www.dash.org/forum/categories/dash-support.61/) and [Discord channels](http://www.dashchat.org).\n\n## Example Testnet Config\n\n```text\ntestnet=1\n\n# RPC Settings\nrpcuser=user\nrpcpassword=pass\nrpcallowip=127.0.0.1\n#----\nlisten=1\nserver=1\n\n# Index Settings\ntxindex=1\naddressindex=1\ntimestampindex=1\nspentindex=1\n\n[test]\nrpcport=19998\n```\n\n## Configuration sections for different networks\n\nSince Dash Core 0.16 it is possible for a single configuration file to set different options for different networks. This is done by using sections or by prefixing the option with the network as shown below:\n\n>\u2757\ufe0f Valid Section Names\n>\n> Please note that the only valid section names are **`[main]`**, **`[test]`**, **`[regtest]`**, and **`[devnet]`**.\n\n``` text Example dash.conf\n# Enable RPC server for all networks\nserver=1\n\n[main]\n# Set custom mainnet ports\nport=9989\nrpcport=9988\n# Set custom mainnet RPC auth\nrpcuser=mainnetuser\nrpcpassword=mainnetpass\n\n[test]\n# Set custom testnet RPC auth\nrpcuser=testnetuser\nrpcpassword=testnetpass\n\n# Enabling indexing\ntxindex=1\naddressindex=1\ntimestampindex=1\nspentindex=1\n\n[regtest]\nmempoolsize=20\n\n[devnet]\nport=21999\nrpcport=21998\n```\n\nWith this configuration file, dashd, dash-qt, or dash-cli can be run with the `-conf=<configuration file>` along with the `-testnet`,  `-regtest`, or `-devnet=<devnet name>` parameter to select the correct settings.\n\n>\u2757\ufe0f \n>\n> The following options will only apply to mainnet **_unless they are in a section_** (e.g., `[test]`): `addnode=`, `connect=`, `port=`, `bind=`, `rpcport=`, `rpcbind=` and `wallet=`. \nThe options to choose a network (`regtest=` and `testnet=`) must be specified outside of sections.\n\n# settings.json\n\n> \ud83d\udc4d Added in Dash Core 18.1.0\n\nSince Dash Core 18.1, wallets created or loaded in the GUI will now be automatically loaded on startup so they don't need to be manually reloaded the next time Dash is started. The list of wallets to load on startup is stored in `\\<datadir\\>/settings.json`. Additionally, any wallets specified in `-wallet=` settings on the command line or in the `dash.conf` file are also loaded. Wallets that are unloaded in the GUI are also removed from the settings list so they won't automatically load on the next startup.\n\nThe `createwallet`, `loadwallet`, and `unloadwallet` RPCs now accept `load_on_startup` options to modify the settings list. Unless these options are explicitly set to true or false, the list is not modified, so the RPC methods remain backwards compatible.",
 "order": 1,
 "isReference": false,
 "deprecated": false,
 "hidden": false,
 "sync_unique": "",
 "link_url": "",
 "link_external": false,
 "reusableContent": [],
 "previousSlug": "",
 "slugUpdatedAt": "2020-10-07T18:30:29.837Z",
 "revision": 16,
 "_id": "63f5176df91c7700118e7819",
 "pendingAlgoliaPublish": false,
 "createdAt": "2020-06-04T12:40:05.491Z",
 "updatedAt": "2023-01-05T16:09:57.760Z",
 "user": "5b8400d7185d5e00036dcc3b",
 "category": "63f5176df91c7700118e77a4",
 "project": "5daf2e65f4109c0040fd51e1",
 "version": "63f5176df91c7700118e7825",
 "__v": 0,
 "parentDoc": null,
 "isApi": false,
 "id": "63f5176df91c7700118e7819",
 "body_html": "<h1 class=\"heading heading-1 header-scroll\" align=\"\"><div class=\"heading-anchor anchor waypoint\" id=\"dashconf\"></div><div class=\"heading-text\"><div id=\"section-dash-conf\" class=\"heading-anchor_backwardsCompatibility\"></div>dash.conf</div><a aria-label=\"Skip link to dash.conf\" class=\"heading-anchor-icon fa fa-anchor\" href=\"#dashconf\"></a></h1>\n<p>To use <button aria-label=\"Copy Code\" class=\"rdmd-code-copy fa\"></button><code class=\"rdmd-code lang- theme-light\" data-lang=\"\" name=\"\" tabindex=\"0\">dashd</code> and <button aria-label=\"Copy Code\" class=\"rdmd-code-copy fa\"></button><code class=\"rdmd-code lang- theme-light\" data-lang=\"\" name=\"\" tabindex=\"0\">dash-cli</code>, you will need to add a RPC password to your <button aria-label=\"Copy Code\" class=\"rdmd-code-copy fa\"></button><code class=\"rdmd-code lang- theme-light\" data-lang=\"\" name=\"\" tabindex=\"0\">dash.conf</code> file. Both programs will read from the same file if both run on the same system as the same user, so any long random password will work:</p>\n<div class=\"CodeTabs CodeTabs_initial theme-light\"><div class=\"CodeTabs-toolbar\" role=\"tablist\"><button aria-selected=\"true\" class=\"CodeTabs_active\" role=\"tab\" type=\"button\">Text</button></div><div class=\"CodeTabs-inner\" role=\"tabpanel\"><pre><button aria-label=\"Copy Code\" class=\"rdmd-code-copy fa\"></button><code class=\"rdmd-code lang-text theme-light\" data-lang=\"text\" name=\"\" tabindex=\"0\">rpcpassword=change_this_to_a_long_random_password\n</code></pre></div></div>\n<p>You should also make the <button aria-label=\"Copy Code\" class=\"rdmd-code-copy fa\"></button><code class=\"rdmd-code lang- theme-light\" data-lang=\"\" name=\"\" tabindex=\"0\">dash.conf</code> file only readable to its owner.  On Linux, Mac OSX, and other Unix-like systems, this can be accomplished by running the following command in the Dash Core application directory:</p>\n<div class=\"CodeTabs CodeTabs_initial theme-light\"><div class=\"CodeTabs-toolbar\" role=\"tablist\"><button aria-selected=\"true\" class=\"CodeTabs_active\" role=\"tab\" type=\"button\">Text</button></div><div class=\"CodeTabs-inner\" role=\"tabpanel\"><pre><button aria-label=\"Copy Code\" class=\"rdmd-code-copy fa\"></button><code class=\"rdmd-code lang-text theme-light\" data-lang=\"text\" name=\"\" tabindex=\"0\">chmod 0600 dash.conf\n</code></pre></div></div>\n<p>For development, it&#x27;s safer and cheaper to use Dash&#x27;s test network (<span class=\"GlossaryItem-trigger\">testnet</span>), <span class=\"GlossaryItem-trigger\">regression test mode</span> (regtest), or a developer network  (<span class=\"GlossaryItem-trigger\">devnet</span>) described below.</p>\n<p>Questions about Dash use are best sent to the <a href=\"https://www.dash.org/forum/categories/dash-support.61/\" target=\"\" title=\"\">Dash forum</a> and <a href=\"http://www.dashchat.org\" target=\"\" title=\"\">Discord channels</a>.</p>\n<h2 class=\"heading heading-2 header-scroll\" align=\"\"><div class=\"heading-anchor anchor waypoint\" id=\"example-testnet-config\"></div><div class=\"heading-text\"><div id=\"section-example-testnet-config\" class=\"heading-anchor_backwardsCompatibility\"></div>Example Testnet Config</div><a aria-label=\"Skip link to Example Testnet Config\" class=\"heading-anchor-icon fa fa-anchor\" href=\"#example-testnet-config\"></a></h2>\n<div class=\"CodeTabs CodeTabs_initial theme-light\"><div class=\"CodeTabs-toolbar\" role=\"tablist\"><button aria-selected=\"true\" class=\"CodeTabs_active\" role=\"tab\" type=\"button\">Text</button></div><div class=\"CodeTabs-inner\" role=\"tabpanel\"><pre><button aria-label=\"Copy Code\" class=\"rdmd-code-copy fa\"></button><code class=\"rdmd-code lang-text theme-light\" data-lang=\"text\" name=\"\" tabindex=\"0\">testnet=1\n\n# RPC Settings\nrpcuser=user\nrpcpassword=pass\nrpcallowip=127.0.0.1\n#----\nlisten=1\nserver=1\n\n# Index Settings\ntxindex=1\naddressindex=1\ntimestampindex=1\nspentindex=1\n\n[test]\nrpcport=19998\n</code></pre></div></div>\n<h2 class=\"heading heading-2 header-scroll\" align=\"\"><div class=\"heading-anchor anchor waypoint\" id=\"configuration-sections-for-different-networks\"></div><div class=\"heading-text\"><div id=\"section-configuration-sections-for-different-networks\" class=\"heading-anchor_backwardsCompatibility\"></div>Configuration sections for different networks</div><a aria-label=\"Skip link to Configuration sections for different networks\" class=\"heading-anchor-icon fa fa-anchor\" href=\"#configuration-sections-for-different-networks\"></a></h2>\n<p>Since Dash Core 0.16 it is possible for a single configuration file to set different options for different networks. This is done by using sections or by prefixing the option with the network as shown below:</p>\n<blockquote class=\"callout callout_error\" theme=\"\u2757\ufe0f\"><h2 class=\"callout-heading\"><span class=\"callout-icon\">\u2757\ufe0f</span><p>Valid Section Names</p></h2><p>Please note that the only valid section names are <strong><button aria-label=\"Copy Code\" class=\"rdmd-code-copy fa\"></button><code class=\"rdmd-code lang- theme-light\" data-lang=\"\" name=\"\" tabindex=\"0\">[main]</code></strong>, <strong><button aria-label=\"Copy Code\" class=\"rdmd-code-copy fa\"></button><code class=\"rdmd-code lang- theme-light\" data-lang=\"\" name=\"\" tabindex=\"0\">[test]</code></strong>, <strong><button aria-label=\"Copy Code\" class=\"rdmd-code-copy fa\"></button><code class=\"rdmd-code lang- theme-light\" data-lang=\"\" name=\"\" tabindex=\"0\">[regtest]</code></strong>, and <strong><button aria-label=\"Copy Code\" class=\"rdmd-code-copy fa\"></button><code class=\"rdmd-code lang- theme-light\" data-lang=\"\" name=\"\" tabindex=\"0\">[devnet]</code></strong>.</p></blockquote>\n<div class=\"CodeTabs CodeTabs_initial theme-light\"><div class=\"CodeTabs-toolbar\" role=\"tablist\"><button aria-selected=\"true\" class=\"CodeTabs_active\" role=\"tab\" type=\"button\">Example dash.conf</button></div><div class=\"CodeTabs-inner\" role=\"tabpanel\"><pre><button aria-label=\"Copy Code\" class=\"rdmd-code-copy fa\"></button><code class=\"rdmd-code lang-text theme-light\" data-lang=\"text\" name=\"Example dash.conf\" tabindex=\"0\"># Enable RPC server for all networks\nserver=1\n\n[main]\n# Set custom mainnet ports\nport=9989\nrpcport=9988\n# Set custom mainnet RPC auth\nrpcuser=mainnetuser\nrpcpassword=mainnetpass\n\n[test]\n# Set custom testnet RPC auth\nrpcuser=testnetuser\nrpcpassword=testnetpass\n\n# Enabling indexing\ntxindex=1\naddressindex=1\ntimestampindex=1\nspentindex=1\n\n[regtest]\nmempoolsize=20\n\n[devnet]\nport=21999\nrpcport=21998\n</code></pre></div></div>\n<p>With this configuration file, dashd, dash-qt, or dash-cli can be run with the <button aria-label=\"Copy Code\" class=\"rdmd-code-copy fa\"></button><code class=\"rdmd-code lang- theme-light\" data-lang=\"\" name=\"\" tabindex=\"0\">-conf=&lt;configuration file&gt;</code> along with the <button aria-label=\"Copy Code\" class=\"rdmd-code-copy fa\"></button><code class=\"rdmd-code lang- theme-light\" data-lang=\"\" name=\"\" tabindex=\"0\">-testnet</code>,  <button aria-label=\"Copy Code\" class=\"rdmd-code-copy fa\"></button><code class=\"rdmd-code lang- theme-light\" data-lang=\"\" name=\"\" tabindex=\"0\">-regtest</code>, or <button aria-label=\"Copy Code\" class=\"rdmd-code-copy fa\"></button><code class=\"rdmd-code lang- theme-light\" data-lang=\"\" name=\"\" tabindex=\"0\">-devnet=&lt;devnet name&gt;</code> parameter to select the correct settings.</p>\n<blockquote class=\"callout callout_error\" theme=\"\u2757\ufe0f\"><h2 class=\"callout-heading empty\"><span class=\"callout-icon\">\u2757\ufe0f</span></h2><p>The following options will only apply to mainnet <strong><em>unless they are in a section</em></strong> (e.g., <button aria-label=\"Copy Code\" class=\"rdmd-code-copy fa\"></button><code class=\"rdmd-code lang- theme-light\" data-lang=\"\" name=\"\" tabindex=\"0\">[test]</code>): <button aria-label=\"Copy Code\" class=\"rdmd-code-copy fa\"></button><code class=\"rdmd-code lang- theme-light\" data-lang=\"\" name=\"\" tabindex=\"0\">addnode=</code>, <button aria-label=\"Copy Code\" class=\"rdmd-code-copy fa\"></button><code class=\"rdmd-code lang- theme-light\" data-lang=\"\" name=\"\" tabindex=\"0\">connect=</code>, <button aria-label=\"Copy Code\" class=\"rdmd-code-copy fa\"></button><code class=\"rdmd-code lang- theme-light\" data-lang=\"\" name=\"\" tabindex=\"0\">port=</code>, <button aria-label=\"Copy Code\" class=\"rdmd-code-copy fa\"></button><code class=\"rdmd-code lang- theme-light\" data-lang=\"\" name=\"\" tabindex=\"0\">bind=</code>, <button aria-label=\"Copy Code\" class=\"rdmd-code-copy fa\"></button><code class=\"rdmd-code lang- theme-light\" data-lang=\"\" name=\"\" tabindex=\"0\">rpcport=</code>, <button aria-label=\"Copy Code\" class=\"rdmd-code-copy fa\"></button><code class=\"rdmd-code lang- theme-light\" data-lang=\"\" name=\"\" tabindex=\"0\">rpcbind=</code> and <button aria-label=\"Copy Code\" class=\"rdmd-code-copy fa\"></button><code class=\"rdmd-code lang- theme-light\" data-lang=\"\" name=\"\" tabindex=\"0\">wallet=</code>.<br/>\nThe options to choose a network (<button aria-label=\"Copy Code\" class=\"rdmd-code-copy fa\"></button><code class=\"rdmd-code lang- theme-light\" data-lang=\"\" name=\"\" tabindex=\"0\">regtest=</code> and <button aria-label=\"Copy Code\" class=\"rdmd-code-copy fa\"></button><code class=\"rdmd-code lang- theme-light\" data-lang=\"\" name=\"\" tabindex=\"0\">testnet=</code>) must be specified outside of sections.</p></blockquote>\n<h1 class=\"heading heading-1 header-scroll\" align=\"\"><div class=\"heading-anchor anchor waypoint\" id=\"settingsjson\"></div><div class=\"heading-text\"><div id=\"section-settings-json\" class=\"heading-anchor_backwardsCompatibility\"></div>settings.json</div><a aria-label=\"Skip link to settings.json\" class=\"heading-anchor-icon fa fa-anchor\" href=\"#settingsjson\"></a></h1>\n<blockquote class=\"callout callout_okay\" theme=\"\ud83d\udc4d\"><h2 class=\"callout-heading\"><span class=\"callout-icon\">\ud83d\udc4d</span><p>Added in Dash Core 18.1.0</p></h2></blockquote>\n<p>Since Dash Core 18.1, wallets created or loaded in the GUI will now be automatically loaded on startup so they don&#x27;t need to be manually reloaded the next time Dash is started. The list of wallets to load on startup is stored in <button aria-label=\"Copy Code\" class=\"rdmd-code-copy fa\"></button><code class=\"rdmd-code lang- theme-light\" data-lang=\"\" name=\"\" tabindex=\"0\">\\&lt;datadir\\&gt;/settings.json</code>. Additionally, any wallets specified in <button aria-label=\"Copy Code\" class=\"rdmd-code-copy fa\"></button><code class=\"rdmd-code lang- theme-light\" data-lang=\"\" name=\"\" tabindex=\"0\">-wallet=</code> settings on the command line or in the <button aria-label=\"Copy Code\" class=\"rdmd-code-copy fa\"></button><code class=\"rdmd-code lang- theme-light\" data-lang=\"\" name=\"\" tabindex=\"0\">dash.conf</code> file are also loaded. Wallets that are unloaded in the GUI are also removed from the settings list so they won&#x27;t automatically load on the next startup.</p>\n<p>The <button aria-label=\"Copy Code\" class=\"rdmd-code-copy fa\"></button><code class=\"rdmd-code lang- theme-light\" data-lang=\"\" name=\"\" tabindex=\"0\">createwallet</code>, <button aria-label=\"Copy Code\" class=\"rdmd-code-copy fa\"></button><code class=\"rdmd-code lang- theme-light\" data-lang=\"\" name=\"\" tabindex=\"0\">loadwallet</code>, and <button aria-label=\"Copy Code\" class=\"rdmd-code-copy fa\"></button><code class=\"rdmd-code lang- theme-light\" data-lang=\"\" name=\"\" tabindex=\"0\">unloadwallet</code> RPCs now accept <button aria-label=\"Copy Code\" class=\"rdmd-code-copy fa\"></button><code class=\"rdmd-code lang- theme-light\" data-lang=\"\" name=\"\" tabindex=\"0\">load_on_startup</code> options to modify the settings list. Unless these options are explicitly set to true or false, the list is not modified, so the RPC methods remain backwards compatible.</p>"
}