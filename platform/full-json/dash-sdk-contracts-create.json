{
 "metadata": {
  "image": [],
  "title": "",
  "description": "",
  "keywords": "",
  "robots": "index"
 },
 "api": {
  "method": "get",
  "url": "",
  "auth": "required",
  "results": {
   "codes": [
    {
     "name": "",
     "code": "{}",
     "language": "json",
     "status": 200
    },
    {
     "name": "",
     "code": "{}",
     "language": "json",
     "status": 400
    }
   ]
  },
  "params": [],
  "examples": {
   "codes": []
  }
 },
 "next": {
  "description": "",
  "pages": []
 },
 "algolia": {
  "recordCount": 1,
  "publishPending": false,
  "translationFailure": false,
  "updatedAt": "2023-09-06T16:36:51.755Z"
 },
 "title": "Create",
 "icon": "",
 "updates": [],
 "type": "basic",
 "slug": "dash-sdk-contracts-create",
 "excerpt": "",
 "body": "**Usage**: `client.platform.contracts.create(contractDefinitions, identity)`  \n**Description**: This method will return a Contract object initialized with the parameters defined and apply to the used identity. \n\nParameters: \n\n| parameters              | type             | required | Description                                                                                                            |\n| ----------------------- | ---------------- | -------- | ---------------------------------------------------------------------------------------------------------------------- |\n| **contractDefinitions** | JSONDataContract | yes      | The defined [JSON Application Schema](https://dashplatform.readme.io/docs/explanation-platform-protocol-data-contract) |\n| **identity**            | Identity         | yes      | A valid [registered `application` identity](https://dashplatform.readme.io/docs/dash-sdk-identities-register)          |\n\n**Example**:\n\n```js\n  const identityId = '';// Your identity identifier.\n  \n  // Your valid json contract definitions\n  const contractDefinitions = {\n    note: {\n      properties: {\n        message: {\n          type: \"string\"\n        }\n      },\n      additionalProperties: false\n    }\n  };\n  const identity = await client.platform.identities.get(identityId);\n  const contract = client.platform.contracts.create(contractDefinitions, identity);\n  \n  // You can use the validate method from DPP to validate the created contract\n  const validationResult = client.platform.dpp.dataContract.validate(contract);\n```\n\n**Note**: When your contract is created, it will only exist locally. Use the [publish](https://dashplatform.readme.io/docs/dash-sdk-contracts-publish) method to register it.  \n\nReturns: Contract.",
 "order": 0,
 "isReference": false,
 "deprecated": false,
 "hidden": false,
 "sync_unique": "",
 "link_url": "",
 "link_external": false,
 "reusableContent": [],
 "previousSlug": "sdk-contracts-create",
 "slugUpdatedAt": "2023-07-17T21:41:04.173Z",
 "revision": 9,
 "_id": "64f8a9df750465004742adf1",
 "user": "62b2101422da70001ee51d95",
 "project": "5bda01cad172e200499a20a9",
 "parentDoc": "64f8a9df750465004742adf0",
 "category": "64f8a9df750465004742ad74",
 "createdAt": "2023-07-13T17:37:01.036Z",
 "updatedAt": "2023-07-18T14:07:49.135Z",
 "version": "64f8a9df750465004742ae1d",
 "__v": 1,
 "isApi": false,
 "id": "64f8a9df750465004742adf1",
 "body_html": "**Usage**: `client.platform.contracts.create(contractDefinitions, identity)`  \n**Description**: This method will return a Contract object initialized with the parameters defined and apply to the used identity. \n\nParameters: \n\n| parameters              | type             | required | Description                                                                                                            |\n| ----------------------- | ---------------- | -------- | ---------------------------------------------------------------------------------------------------------------------- |\n| **contractDefinitions** | JSONDataContract | yes      | The defined [JSON Application Schema](https://dashplatform.readme.io/docs/explanation-platform-protocol-data-contract) |\n| **identity**            | Identity         | yes      | A valid [registered `application` identity](https://dashplatform.readme.io/docs/dash-sdk-identities-register)          |\n\n**Example**:\n\n```js\n  const identityId = '';// Your identity identifier.\n  \n  // Your valid json contract definitions\n  const contractDefinitions = {\n    note: {\n      properties: {\n        message: {\n          type: \"string\"\n        }\n      },\n      additionalProperties: false\n    }\n  };\n  const identity = await client.platform.identities.get(identityId);\n  const contract = client.platform.contracts.create(contractDefinitions, identity);\n  \n  // You can use the validate method from DPP to validate the created contract\n  const validationResult = client.platform.dpp.dataContract.validate(contract);\n```\n\n**Note**: When your contract is created, it will only exist locally. Use the [publish](https://dashplatform.readme.io/docs/dash-sdk-contracts-publish) method to register it.  \n\nReturns: Contract."
}