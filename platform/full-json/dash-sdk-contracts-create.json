{
 "metadata": {
  "image": [],
  "title": "",
  "description": ""
 },
 "api": {
  "method": "get",
  "url": "",
  "auth": "required",
  "results": {
   "codes": [
    {
     "name": "",
     "code": "{}",
     "language": "json",
     "status": 200
    },
    {
     "name": "",
     "code": "{}",
     "language": "json",
     "status": 400
    }
   ]
  },
  "params": [],
  "examples": {
   "codes": []
  }
 },
 "next": {
  "description": "",
  "pages": []
 },
 "algolia": {
  "recordCount": 1,
  "publishPending": false,
  "updatedAt": "2023-09-06T16:36:51.755Z"
 },
 "title": "Create",
 "icon": "",
 "updates": [],
 "type": "basic",
 "slug": "dash-sdk-contracts-create",
 "excerpt": "",
 "body": "**Usage**: `client.platform.contracts.create(contractDefinitions, identity)`  \n**Description**: This method will return a Contract object initialized with the parameters defined and apply to the used identity. \n\nParameters: \n\n| parameters              | type             | required | Description                                                                                                            |\n| ----------------------- | ---------------- | -------- | ---------------------------------------------------------------------------------------------------------------------- |\n| **contractDefinitions** | JSONDataContract | yes      | The defined [JSON Application Schema](https://dashplatform.readme.io/docs/explanation-platform-protocol-data-contract) |\n| **identity**            | Identity         | yes      | A valid [registered `application` identity](https://dashplatform.readme.io/docs/dash-sdk-identities-register)          |\n\n**Example**:\n\n```js\n  const identityId = '';// Your identity identifier.\n  \n  // Your valid json contract definitions\n  const contractDefinitions = {\n    note: {\n      properties: {\n        message: {\n          type: \"string\"\n        }\n      },\n      additionalProperties: false\n    }\n  };\n  const identity = await client.platform.identities.get(identityId);\n  const contract = client.platform.contracts.create(contractDefinitions, identity);\n  \n  // You can use the validate method from DPP to validate the created contract\n  const validationResult = client.platform.dpp.dataContract.validate(contract);\n```\n\n**Note**: When your contract is created, it will only exist locally. Use the [publish](https://dashplatform.readme.io/docs/dash-sdk-contracts-publish) method to register it.  \n\nReturns: Contract.",
 "order": 0,
 "isReference": false,
 "deprecated": false,
 "hidden": false,
 "sync_unique": "",
 "link_url": "",
 "link_external": false,
 "previousSlug": "sdk-contracts-create",
 "slugUpdatedAt": "2023-07-17T21:41:04.173Z",
 "revision": 9,
 "_id": "64f8a9df750465004742adf1",
 "user": "62b2101422da70001ee51d95",
 "project": "5bda01cad172e200499a20a9",
 "parentDoc": "64f8a9df750465004742adf0",
 "category": "64f8a9df750465004742ad74",
 "createdAt": "2023-07-13T17:37:01.036Z",
 "updatedAt": "2023-07-18T14:07:49.135Z",
 "version": "64f8a9df750465004742ae1d",
 "__v": 1,
 "isApi": false,
 "id": "64f8a9df750465004742adf1",
 "body_html": "<div class=\"magic-block-textarea\"><p><strong>Usage</strong>: <code>client.platform.contracts.create(contractDefinitions, identity)</code><br><strong>Description</strong>: This method will return a Contract object initialized with the parameters defined and apply to the used identity. </p>\n<p>Parameters: </p>\n<div class=\"marked-table\"><table>\n<thead>\n<tr>\n<th>parameters</th>\n<th>type</th>\n<th>required</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><strong>contractDefinitions</strong></td>\n<td>JSONDataContract</td>\n<td>yes</td>\n<td>The defined <a href=\"https://dashplatform.readme.io/docs/explanation-platform-protocol-data-contract\">JSON Application Schema</a></td>\n</tr>\n<tr>\n<td><strong>identity</strong></td>\n<td>Identity</td>\n<td>yes</td>\n<td>A valid <a href=\"https://dashplatform.readme.io/docs/dash-sdk-identities-register\">registered <code>application</code> identity</a></td>\n</tr>\n</tbody>\n</table></div>\n<p><strong>Example</strong>:</p>\n<pre><code class=\"lang-js\"><span class='cm-s-neo'>  <span class=\"cm-keyword\">const</span> <span class=\"cm-def\">identityId</span> <span class=\"cm-operator\">=</span> <span class=\"cm-string\">''</span>;<span class=\"cm-comment\">&#47;&#47; Your identity identifier.</span>\n\n  <span class=\"cm-comment\">&#47;&#47; Your valid json contract definitions</span>\n  <span class=\"cm-keyword\">const</span> <span class=\"cm-def\">contractDefinitions</span> <span class=\"cm-operator\">=</span> {\n    <span class=\"cm-property\">note</span>: {\n      <span class=\"cm-property\">properties</span>: {\n        <span class=\"cm-property\">message</span>: {\n          <span class=\"cm-property\">type</span>: <span class=\"cm-string\">\"string\"</span>\n        }\n      },\n      <span class=\"cm-property\">additionalProperties</span>: <span class=\"cm-atom\">false</span>\n    }\n  };\n  <span class=\"cm-keyword\">const</span> <span class=\"cm-def\">identity</span> <span class=\"cm-operator\">=</span> <span class=\"cm-keyword\">await</span> <span class=\"cm-variable\">client</span>.<span class=\"cm-property\">platform</span>.<span class=\"cm-property\">identities</span>.<span class=\"cm-property\">get</span>(<span class=\"cm-variable\">identityId</span>);\n  <span class=\"cm-keyword\">const</span> <span class=\"cm-def\">contract</span> <span class=\"cm-operator\">=</span> <span class=\"cm-variable\">client</span>.<span class=\"cm-property\">platform</span>.<span class=\"cm-property\">contracts</span>.<span class=\"cm-property\">create</span>(<span class=\"cm-variable\">contractDefinitions</span>, <span class=\"cm-variable\">identity</span>);\n\n  <span class=\"cm-comment\">&#47;&#47; You can use the validate method from DPP to validate the created contract</span>\n  <span class=\"cm-keyword\">const</span> <span class=\"cm-def\">validationResult</span> <span class=\"cm-operator\">=</span> <span class=\"cm-variable\">client</span>.<span class=\"cm-property\">platform</span>.<span class=\"cm-property\">dpp</span>.<span class=\"cm-property\">dataContract</span>.<span class=\"cm-property\">validate</span>(<span class=\"cm-variable\">contract</span>);</span>\n</code></pre>\n<p><strong>Note</strong>: When your contract is created, it will only exist locally. Use the <a href=\"https://dashplatform.readme.io/docs/dash-sdk-contracts-publish\">publish</a> method to register it.  </p>\n<p>Returns: Contract.</p>\n\n</div>"
}