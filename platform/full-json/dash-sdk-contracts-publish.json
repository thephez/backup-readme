{
 "metadata": {
  "image": [],
  "title": "",
  "description": "",
  "keywords": "",
  "robots": "index"
 },
 "api": {
  "method": "get",
  "url": "",
  "auth": "required",
  "results": {
   "codes": [
    {
     "name": "",
     "code": "{}",
     "language": "json",
     "status": 200
    },
    {
     "name": "",
     "code": "{}",
     "language": "json",
     "status": 400
    }
   ]
  },
  "params": [],
  "examples": {
   "codes": []
  }
 },
 "next": {
  "description": "",
  "pages": []
 },
 "algolia": {
  "recordCount": 1,
  "publishPending": false,
  "translationFailure": false,
  "updatedAt": "2023-09-06T16:36:52.606Z"
 },
 "title": "Publish",
 "icon": "",
 "updates": [],
 "type": "basic",
 "slug": "dash-sdk-contracts-publish",
 "excerpt": "",
 "body": "**Usage**: `client.platform.contracts.publish(contract, identity)`  \n**Description**: This method will sign and broadcast any valid contract.\n\nParameters:\n\n| parameters   | type     | required | Description                                                                                              |\n| ------------ | -------- | -------- | -------------------------------------------------------------------------------------------------------- |\n| **contract** | Contract | yes      | A valid [created contract](https://dashplatform.readme.io/docs/dash-sdk-documents-create)                |\n| **identity** | Identity | yes      | A valid [registered `application` identity](https://dashplatform.readme.io/docs/dash-sdk-names-register) |\n\n**Example**:\n\n```js\nconst identityId = '';// Your identity identifier.\nconst identity = await client.platform.identities.get(identityId);\n// See the contract.create documentation for more on how to create a dataContract\nconst contract = await client.platform.contracts.create(contractDefinitions, identity);\nawait client.platform.contracts.publish(contract, identity);\n```\n\nReturns : DataContractCreateTransition.",
 "order": 2,
 "isReference": false,
 "deprecated": false,
 "hidden": false,
 "sync_unique": "",
 "link_url": "",
 "link_external": false,
 "reusableContent": [],
 "previousSlug": "publish",
 "slugUpdatedAt": "2023-07-17T21:41:23.689Z",
 "revision": 8,
 "_id": "64f8a9df750465004742adf3",
 "user": "62b2101422da70001ee51d95",
 "project": "5bda01cad172e200499a20a9",
 "parentDoc": "64f8a9df750465004742adf0",
 "category": "64f8a9df750465004742ad74",
 "createdAt": "2023-07-13T17:58:41.825Z",
 "updatedAt": "2023-07-18T14:07:49.133Z",
 "version": "64f8a9df750465004742ae1d",
 "__v": 1,
 "isApi": false,
 "id": "64f8a9df750465004742adf3",
 "body_html": "<div class=\"magic-block-textarea\"><p><strong>Usage</strong>: <code>client.platform.contracts.publish(contract, identity)</code><br><strong>Description</strong>: This method will sign and broadcast any valid contract.</p>\n<p>Parameters:</p>\n<div class=\"marked-table\"><table>\n<thead>\n<tr>\n<th>parameters</th>\n<th>type</th>\n<th>required</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><strong>contract</strong></td>\n<td>Contract</td>\n<td>yes</td>\n<td>A valid <a href=\"https://dashplatform.readme.io/docs/dash-sdk-documents-create\">created contract</a></td>\n</tr>\n<tr>\n<td><strong>identity</strong></td>\n<td>Identity</td>\n<td>yes</td>\n<td>A valid <a href=\"https://dashplatform.readme.io/docs/dash-sdk-names-register\">registered <code>application</code> identity</a></td>\n</tr>\n</tbody>\n</table></div>\n<p><strong>Example</strong>:</p>\n<pre><code class=\"lang-js\"><span class='cm-s-neo'><span class=\"cm-keyword\">const</span> <span class=\"cm-def\">identityId</span> <span class=\"cm-operator\">=</span> <span class=\"cm-string\">''</span>;<span class=\"cm-comment\">&#47;&#47; Your identity identifier.</span>\n<span class=\"cm-keyword\">const</span> <span class=\"cm-def\">identity</span> <span class=\"cm-operator\">=</span> <span class=\"cm-keyword\">await</span> <span class=\"cm-variable\">client</span>.<span class=\"cm-property\">platform</span>.<span class=\"cm-property\">identities</span>.<span class=\"cm-property\">get</span>(<span class=\"cm-variable\">identityId</span>);\n<span class=\"cm-comment\">&#47;&#47; See the contract.create documentation for more on how to create a dataContract</span>\n<span class=\"cm-keyword\">const</span> <span class=\"cm-def\">contract</span> <span class=\"cm-operator\">=</span> <span class=\"cm-keyword\">await</span> <span class=\"cm-variable\">client</span>.<span class=\"cm-property\">platform</span>.<span class=\"cm-property\">contracts</span>.<span class=\"cm-property\">create</span>(<span class=\"cm-variable\">contractDefinitions</span>, <span class=\"cm-variable\">identity</span>);\n<span class=\"cm-keyword\">await</span> <span class=\"cm-variable\">client</span>.<span class=\"cm-property\">platform</span>.<span class=\"cm-property\">contracts</span>.<span class=\"cm-property\">publish</span>(<span class=\"cm-variable\">contract</span>, <span class=\"cm-variable\">identity</span>);</span>\n</code></pre>\n<p>Returns : DataContractCreateTransition.</p>\n\n</div>"
}