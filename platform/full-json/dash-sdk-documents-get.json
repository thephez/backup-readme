{
 "metadata": {
  "image": [],
  "title": "",
  "description": "",
  "keywords": "",
  "robots": "index"
 },
 "api": {
  "method": "get",
  "url": "",
  "auth": "required",
  "results": {
   "codes": [
    {
     "name": "",
     "code": "{}",
     "language": "json",
     "status": 200
    },
    {
     "name": "",
     "code": "{}",
     "language": "json",
     "status": 400
    }
   ]
  },
  "params": [],
  "examples": {
   "codes": []
  }
 },
 "next": {
  "description": "",
  "pages": []
 },
 "algolia": {
  "recordCount": 1,
  "publishPending": false,
  "translationFailure": false,
  "updatedAt": "2023-09-06T16:36:53.289Z"
 },
 "title": "Get",
 "icon": "",
 "updates": [],
 "type": "basic",
 "slug": "dash-sdk-documents-get",
 "excerpt": "",
 "body": "**Usage**: `client.platform.documents.get(typeLocator, opts)`  \n**Description**: This method will allow you to fetch back documents matching the provided parameters. \n\nParameters: \n\n| parameters      | type   | required         | Description                                                         |\n| --------------- | ------ | ---------------- | ------------------------------------------------------------------- |\n| **typeLocator** | string | yes              | Field of a specific application, under the form `appName.fieldName` |\n| **opts**        | object | no (default: {}) | Query options of the request                                        |\n\n**Queries options**:\n\n| parameters     | type    | required | Description               |\n| -------------- | ------- | -------- | ------------------------- |\n| **where**      | array   | no       | Mongo-like where query    |\n| **orderBy**    | array   | no       | Mongo-like orderBy query  |\n| **limit**      | integer | no       | how many objects to fetch |\n| **startAt**    | integer | no       | number of objects to skip |\n| **startAfter** | integer | no       | exclusive skip            |\n\n[Learn more about query syntax](https://dashplatform.readme.io/docs/reference-query-syntax).\n\n**Example**: \n\n```js\n   const queryOpts = {\n         where: [\n             ['normalizedLabel', '==', 'alice'],\n             ['normalizedParentDomainName', '==', 'dash'],\n         ],\n     };\n  await client.platform.documents.get('dpns.domain', queryOpts);\n```",
 "order": 2,
 "isReference": false,
 "deprecated": false,
 "hidden": false,
 "sync_unique": "",
 "link_url": "",
 "link_external": false,
 "reusableContent": [],
 "previousSlug": "get-1",
 "slugUpdatedAt": "2023-07-17T21:42:26.687Z",
 "revision": 5,
 "_id": "64f8a9df750465004742adf8",
 "user": "62b2101422da70001ee51d95",
 "project": "5bda01cad172e200499a20a9",
 "parentDoc": "64f8a9df750465004742adf5",
 "category": "64f8a9df750465004742ad74",
 "createdAt": "2023-07-13T18:03:49.763Z",
 "updatedAt": "2023-07-18T14:07:54.439Z",
 "version": "64f8a9df750465004742ae1d",
 "__v": 1,
 "isApi": false,
 "id": "64f8a9df750465004742adf8",
 "body_html": "**Usage**: `client.platform.documents.get(typeLocator, opts)`  \n**Description**: This method will allow you to fetch back documents matching the provided parameters. \n\nParameters: \n\n| parameters      | type   | required         | Description                                                         |\n| --------------- | ------ | ---------------- | ------------------------------------------------------------------- |\n| **typeLocator** | string | yes              | Field of a specific application, under the form `appName.fieldName` |\n| **opts**        | object | no (default: {}) | Query options of the request                                        |\n\n**Queries options**:\n\n| parameters     | type    | required | Description               |\n| -------------- | ------- | -------- | ------------------------- |\n| **where**      | array   | no       | Mongo-like where query    |\n| **orderBy**    | array   | no       | Mongo-like orderBy query  |\n| **limit**      | integer | no       | how many objects to fetch |\n| **startAt**    | integer | no       | number of objects to skip |\n| **startAfter** | integer | no       | exclusive skip            |\n\n[Learn more about query syntax](https://dashplatform.readme.io/docs/reference-query-syntax).\n\n**Example**: \n\n```js\n   const queryOpts = {\n         where: [\n             ['normalizedLabel', '==', 'alice'],\n             ['normalizedParentDomainName', '==', 'dash'],\n         ],\n     };\n  await client.platform.documents.get('dpns.domain', queryOpts);\n```"
}