{
 "metadata": {
  "image": [],
  "title": "",
  "description": "",
  "keywords": "",
  "robots": "index"
 },
 "api": {
  "method": "get",
  "url": "",
  "auth": "required",
  "results": {
   "codes": [
    {
     "name": "",
     "code": "{}",
     "language": "json",
     "status": 200
    },
    {
     "name": "",
     "code": "{}",
     "language": "json",
     "status": 400
    }
   ]
  },
  "params": [],
  "examples": {
   "codes": []
  }
 },
 "next": {
  "description": "",
  "pages": []
 },
 "algolia": {
  "recordCount": 1,
  "publishPending": false,
  "translationFailure": false,
  "updatedAt": "2023-09-06T16:36:50.564Z"
 },
 "title": "Pay to another address",
 "icon": "",
 "updates": [],
 "type": "basic",
 "slug": "dash-sdk-examples-paying-to-another-address",
 "excerpt": "",
 "body": "## Paying to another address\n\nIn order to pay, you need to have an [existing balance](https://dashplatform.readme.io/docs/dash-sdk-examples-receive-money-and-check-balance).  \nThe below code will allow you to pay to a single address a specific amount of satoshis.\n\n```js\nconst Dash = require('dash');\n\nconst mnemonic = ''; // your mnemonic here.\nconst client = new Dash.Client({\n  wallet: {\n    mnemonic,\n  },\n});\n\nasync function payToRecipient(account) {\n  const transaction = account.createTransaction({\n    recipient: 'yNPbcFfabtNmmxKdGwhHomdYfVs6gikbPf',\n    satoshis: 10000,\n  });\n  const transactionId = await account.broadcastTransaction(transaction);\n}\n\nclient.wallet.getAccount().then(payToRecipient);\n\n```\n\nSee more on create [transaction options here](https://dashpay.github.io/platform/Wallet-library/account/createTransaction/).",
 "order": 2,
 "isReference": false,
 "deprecated": false,
 "hidden": false,
 "sync_unique": "",
 "link_url": "",
 "link_external": false,
 "reusableContent": [],
 "previousSlug": "paying-to-another-address",
 "slugUpdatedAt": "2023-07-17T21:34:49.636Z",
 "revision": 12,
 "_id": "64f8a9df750465004742ade4",
 "user": "62b2101422da70001ee51d95",
 "project": "5bda01cad172e200499a20a9",
 "parentDoc": "64f8a9df750465004742ade1",
 "category": "64f8a9df750465004742ad74",
 "createdAt": "2023-07-12T18:28:26.262Z",
 "updatedAt": "2023-07-18T14:07:25.384Z",
 "version": "64f8a9df750465004742ae1d",
 "__v": 1,
 "isApi": false,
 "id": "64f8a9df750465004742ade4",
 "body_html": "<h2 class=\"heading heading-2 header-scroll\" align=\"\"><div class=\"heading-anchor anchor waypoint\" id=\"paying-to-another-address\"></div><div class=\"heading-text\"><div id=\"section-paying-to-another-address\" class=\"heading-anchor_backwardsCompatibility\"></div>Paying to another address</div><a aria-label=\"Skip link to Paying to another address\" class=\"heading-anchor-icon fa fa-anchor\" href=\"#paying-to-another-address\"></a></h2>\n<p>In order to pay, you need to have an <a href=\"https://dashplatform.readme.io/docs/dash-sdk-examples-receive-money-and-check-balance\" target=\"\" title=\"\">existing balance</a>.<br/>\nThe below code will allow you to pay to a single address a specific amount of satoshis.</p>\n<div class=\"CodeTabs CodeTabs_initial theme-light\"><div class=\"CodeTabs-toolbar\" role=\"tablist\"><button aria-selected=\"true\" class=\"CodeTabs_active\" role=\"tab\" type=\"button\">JavaScript</button></div><div class=\"CodeTabs-inner\" role=\"tabpanel\"><pre><button aria-label=\"Copy Code\" class=\"rdmd-code-copy fa\"></button><code class=\"rdmd-code lang-js theme-light\" data-lang=\"js\" name=\"\" tabindex=\"0\">const Dash = require(&#x27;dash&#x27;);\n\nconst mnemonic = &#x27;&#x27;; // your mnemonic here.\nconst client = new Dash.Client({\n  wallet: {\n    mnemonic,\n  },\n});\n\nasync function payToRecipient(account) {\n  const transaction = account.createTransaction({\n    recipient: &#x27;yNPbcFfabtNmmxKdGwhHomdYfVs6gikbPf&#x27;,\n    satoshis: 10000,\n  });\n  const transactionId = await account.broadcastTransaction(transaction);\n}\n\nclient.wallet.getAccount().then(payToRecipient);\n\n</code></pre></div></div>\n<p>See more on create <a href=\"https://dashpay.github.io/platform/Wallet-library/account/createTransaction/\" target=\"\" title=\"\">transaction options here</a>.</p>"
}