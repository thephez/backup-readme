{
 "metadata": {
  "image": [],
  "title": "",
  "description": "",
  "keywords": "",
  "robots": "index"
 },
 "api": {
  "method": "get",
  "url": "",
  "auth": "required",
  "results": {
   "codes": [
    {
     "name": "",
     "code": "{}",
     "language": "json",
     "status": 200
    },
    {
     "name": "",
     "code": "{}",
     "language": "json",
     "status": 400
    }
   ]
  },
  "params": [],
  "examples": {
   "codes": []
  }
 },
 "next": {
  "description": "",
  "pages": []
 },
 "algolia": {
  "recordCount": 1,
  "publishPending": false,
  "translationFailure": false,
  "updatedAt": "2023-09-06T16:36:49.878Z"
 },
 "title": "Sign and verify messages",
 "icon": "",
 "updates": [],
 "type": "basic",
 "slug": "dash-sdk-examples-sign-and-verify-messages",
 "excerpt": "",
 "body": "## Sign and verify messages\n\nDash SDK exports the Message constructor inside the Core namespace `new Dash.Core.Message`\n\n```js\nconst Dash = require('dash');\n\nconst mnemonic = '';\n\nconst client = new Dash.Client({\n  wallet: {\n    mnemonic,\n  },\n});\n\nasync function signAndVerify() {\n  const account = await client.wallet.getAccount();\n\n  const pk = new Dash.Core.PrivateKey();\n  const message = new Dash.Core.Message('hello, world');\n  const signed = account.sign(message, pk);\n  const verified = message.verify(pk.toAddress().toString(), signed.toString());\n}\n```",
 "mdxAltBody": "",
 "order": 4,
 "isReference": false,
 "deprecated": false,
 "hidden": false,
 "sync_unique": "",
 "link_url": "",
 "link_external": false,
 "reusableContent": [],
 "previousSlug": "sign-and-verify-messages",
 "slugUpdatedAt": "2023-07-17T21:35:14.963Z",
 "revision": 7,
 "_id": "64f8a9df750465004742ade6",
 "user": "62b2101422da70001ee51d95",
 "project": "5bda01cad172e200499a20a9",
 "parentDoc": "64f8a9df750465004742ade1",
 "category": "64f8a9df750465004742ad74",
 "createdAt": "2023-07-13T14:10:35.240Z",
 "updatedAt": "2023-07-18T14:07:25.383Z",
 "version": "64f8a9df750465004742ae1d",
 "__v": 1,
 "isApi": false,
 "id": "64f8a9df750465004742ade6",
 "body_html": "<h2 class=\"heading heading-2 header-scroll\" align=\"\"><div class=\"heading-anchor anchor waypoint\" id=\"sign-and-verify-messages\"></div><div class=\"heading-text\"><div id=\"section-sign-and-verify-messages\" class=\"heading-anchor_backwardsCompatibility\"></div>Sign and verify messages</div><a aria-label=\"Skip link to Sign and verify messages\" class=\"heading-anchor-icon fa fa-anchor\" href=\"#sign-and-verify-messages\"></a></h2>\n<p>Dash SDK exports the Message constructor inside the Core namespace <button aria-label=\"Copy Code\" class=\"rdmd-code-copy fa\"></button><code class=\"rdmd-code lang- theme-light\" data-lang=\"\" name=\"\" tabindex=\"0\">new Dash.Core.Message</code></p>\n<div class=\"CodeTabs CodeTabs_initial theme-light\"><div class=\"CodeTabs-toolbar\" role=\"tablist\"><button aria-selected=\"true\" class=\"CodeTabs_active\" role=\"tab\" type=\"button\">JavaScript</button></div><div class=\"CodeTabs-inner\" role=\"tabpanel\"><pre><button aria-label=\"Copy Code\" class=\"rdmd-code-copy fa\"></button><code class=\"rdmd-code lang-js theme-light\" data-lang=\"js\" name=\"\" tabindex=\"0\">const Dash = require(&#x27;dash&#x27;);\n\nconst mnemonic = &#x27;&#x27;;\n\nconst client = new Dash.Client({\n  wallet: {\n    mnemonic,\n  },\n});\n\nasync function signAndVerify() {\n  const account = await client.wallet.getAccount();\n\n  const pk = new Dash.Core.PrivateKey();\n  const message = new Dash.Core.Message(&#x27;hello, world&#x27;);\n  const signed = account.sign(message, pk);\n  const verified = message.verify(pk.toAddress().toString(), signed.toString());\n}\n</code></pre></div></div>"
}