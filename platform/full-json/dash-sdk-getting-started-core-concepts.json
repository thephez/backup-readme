{
 "metadata": {
  "image": [],
  "title": "",
  "description": "",
  "keywords": "",
  "robots": "index"
 },
 "api": {
  "method": "get",
  "url": "",
  "auth": "required",
  "results": {
   "codes": [
    {
     "name": "",
     "code": "{}",
     "language": "json",
     "status": 200
    },
    {
     "name": "",
     "code": "{}",
     "language": "json",
     "status": 400
    }
   ]
  },
  "params": [],
  "examples": {
   "codes": []
  }
 },
 "next": {
  "description": "",
  "pages": []
 },
 "algolia": {
  "recordCount": 4,
  "publishPending": false,
  "translationFailure": false,
  "updatedAt": "2023-09-06T16:36:50.907Z"
 },
 "title": "Core concepts",
 "icon": "",
 "updates": [],
 "type": "basic",
 "slug": "dash-sdk-getting-started-core-concepts",
 "excerpt": "",
 "body": "## Core concepts\n\nThe [Dash Core Developer Guide](https://dashcore.readme.io/docs/core-guide-introduction) will answer most of questions about the fundamentals of Dash. However, some elements provided by the SDK need to be grasped, so we will quickly cover some of those.\n\n## Wallet\n\nAt the core of Dash is the Payment Chain. In order to be able to transact on it, one needs to have a set of [UTXOs](https://dashcore.readme.io/docs/core-guide-block-chain-transaction-data) that are controlled by a Wallet instance.\n\nIn order to access your UTXO, you will have to provide a valid mnemonic that will unlock the Wallet and automatically fetch the associated UTXOs.\n\nWhen an SDK instance is created, you can access your wallet via the `client.wallet` variable. (Check [wallet-lib documentation](https://dashpay.github.io/platform/Wallet-library/) for more details)\n\n## Account\n\nSince the introduction of deterministic wallets ([BIP44](https://github.com/bitcoin/bips/blob/master/bip-0044.mediawiki)), a wallet is represented by multiple accounts.\n\nIt is the instance you will use most of the time for receiving or broadcasting payments.\n\nYou can access your account with `client.getWalletAccount()`. See [how to use a different account](https://dashplatform.readme.io/docs/dash-sdk-examples-use-different-account) if you need to get an account at a specific index.\n\n## App Schema and Contracts\n\nThe Dash Platform Chain provides developers with the ability to create applications.  \nEach application requires a set of rules and conditions described as a portable document in the form of a JSON Schema.\n\nWhen registered, those applications schemas are called contracts and contains a contractId (namespace : `client.platform.contracts`).\n\nBy default, this library supports Dash Platform Name Service (DPNS) (to attach a name to an identity), under the namespace `client.platform.names` for testnet.  \n\nSee: [how to use multiple apps](https://dashplatform.readme.io/docs/dash-sdk-getting-started-working-with-multiple-apps)",
 "order": 1,
 "isReference": false,
 "deprecated": false,
 "hidden": false,
 "sync_unique": "",
 "link_url": "",
 "link_external": false,
 "reusableContent": [],
 "previousSlug": "core-concepts",
 "slugUpdatedAt": "2023-07-17T21:36:09.868Z",
 "revision": 7,
 "_id": "64f8a9df750465004742adea",
 "user": "62b2101422da70001ee51d95",
 "project": "5bda01cad172e200499a20a9",
 "parentDoc": "64f8a9df750465004742ade8",
 "category": "64f8a9df750465004742ad74",
 "createdAt": "2023-07-13T15:15:32.475Z",
 "updatedAt": "2023-07-18T14:07:31.839Z",
 "version": "64f8a9df750465004742ae1d",
 "__v": 1,
 "isApi": false,
 "id": "64f8a9df750465004742adea",
 "body_html": "## Core concepts\n\nThe [Dash Core Developer Guide](https://dashcore.readme.io/docs/core-guide-introduction) will answer most of questions about the fundamentals of Dash. However, some elements provided by the SDK need to be grasped, so we will quickly cover some of those.\n\n## Wallet\n\nAt the core of Dash is the Payment Chain. In order to be able to transact on it, one needs to have a set of [UTXOs](https://dashcore.readme.io/docs/core-guide-block-chain-transaction-data) that are controlled by a Wallet instance.\n\nIn order to access your UTXO, you will have to provide a valid mnemonic that will unlock the Wallet and automatically fetch the associated UTXOs.\n\nWhen an SDK instance is created, you can access your wallet via the `client.wallet` variable. (Check [wallet-lib documentation](https://dashpay.github.io/platform/Wallet-library/) for more details)\n\n## Account\n\nSince the introduction of deterministic wallets ([BIP44](https://github.com/bitcoin/bips/blob/master/bip-0044.mediawiki)), a wallet is represented by multiple accounts.\n\nIt is the instance you will use most of the time for receiving or broadcasting payments.\n\nYou can access your account with `client.getWalletAccount()`. See [how to use a different account](https://dashplatform.readme.io/docs/dash-sdk-examples-use-different-account) if you need to get an account at a specific index.\n\n## App Schema and Contracts\n\nThe Dash Platform Chain provides developers with the ability to create applications.  \nEach application requires a set of rules and conditions described as a portable document in the form of a JSON Schema.\n\nWhen registered, those applications schemas are called contracts and contains a contractId (namespace : `client.platform.contracts`).\n\nBy default, this library supports Dash Platform Name Service (DPNS) (to attach a name to an identity), under the namespace `client.platform.names` for testnet.  \n\nSee: [how to use multiple apps](https://dashplatform.readme.io/docs/dash-sdk-getting-started-working-with-multiple-apps)"
}