{
 "metadata": {
  "image": [],
  "title": "",
  "description": "",
  "keywords": "",
  "robots": "index"
 },
 "api": {
  "method": "get",
  "url": "",
  "auth": "required",
  "results": {
   "codes": [
    {
     "name": "",
     "code": "{}",
     "language": "json",
     "status": 200
    },
    {
     "name": "",
     "code": "{}",
     "language": "json",
     "status": 400
    }
   ]
  },
  "params": [],
  "examples": {
   "codes": []
  }
 },
 "next": {
  "description": "",
  "pages": []
 },
 "algolia": {
  "recordCount": 4,
  "publishPending": false,
  "translationFailure": false,
  "updatedAt": "2023-09-06T16:36:51.417Z"
 },
 "title": "Quick start",
 "icon": "",
 "updates": [],
 "type": "basic",
 "slug": "dash-sdk-getting-started-quick-start",
 "excerpt": "",
 "body": "# Quick start\n\nIn order to use this library, you will need to add our [NPM package](https://www.npmjs.com/dash) to your project.\n\nHaving [NodeJS](https://nodejs.org/) installed, just type :\n\n```bash\nnpm install dash\n```\n\n## Initialization\n\nLet's create a Dash SDK client instance specifying both our mnemonic and the schema we wish to work with.\n\n```js\nconst Dash = require('dash');\nconst opts = {\n  wallet: {\n    mnemonic: \"arena light cheap control apple buffalo indicate rare motor valid accident isolate\",\n  },\n};\nconst client = new Dash.Client(opts);\nclient.wallet.getAccount().then(async (account) => {\n  // Do something\n})\n```\n\nQuick note:\nIf no `mnemonic` is provided or `mnemonic: null` is passed inside the `wallet` option, a new mnemonic will be generated.\n\n\n## Make a payment\n\n```js\nclient.wallet.getAccount().then(async (account) => {\n  const transaction = account.createTransaction({\n    recipient: 'yixnmigzC236WmTXp9SBZ42csyp9By6Hw8',\n    amount: 0.12,\n  });\n  await account.broadcastTransaction(transaction);\n});\n```\n\n## Interact with Dash Platform\n\nSee the [Tutorial section](https://dashplatform.readme.io/docs/tutorials-introduction) of the Dash Platform documentation for examples.",
 "order": 4,
 "isReference": false,
 "deprecated": false,
 "hidden": false,
 "sync_unique": "",
 "link_url": "",
 "link_external": false,
 "reusableContent": [],
 "previousSlug": "quick-start",
 "slugUpdatedAt": "2023-07-17T21:39:58.364Z",
 "revision": 5,
 "_id": "64f8a9df750465004742aded",
 "user": "62b2101422da70001ee51d95",
 "project": "5bda01cad172e200499a20a9",
 "parentDoc": "64f8a9df750465004742ade8",
 "category": "64f8a9df750465004742ad74",
 "createdAt": "2023-07-13T15:18:52.377Z",
 "updatedAt": "2023-07-18T14:07:31.838Z",
 "version": "64f8a9df750465004742ae1d",
 "__v": 1,
 "isApi": false,
 "id": "64f8a9df750465004742aded",
 "body_html": "# Quick start\n\nIn order to use this library, you will need to add our [NPM package](https://www.npmjs.com/dash) to your project.\n\nHaving [NodeJS](https://nodejs.org/) installed, just type :\n\n```bash\nnpm install dash\n```\n\n## Initialization\n\nLet's create a Dash SDK client instance specifying both our mnemonic and the schema we wish to work with.\n\n```js\nconst Dash = require('dash');\nconst opts = {\n  wallet: {\n    mnemonic: \"arena light cheap control apple buffalo indicate rare motor valid accident isolate\",\n  },\n};\nconst client = new Dash.Client(opts);\nclient.wallet.getAccount().then(async (account) => {\n  // Do something\n})\n```\n\nQuick note:\nIf no `mnemonic` is provided or `mnemonic: null` is passed inside the `wallet` option, a new mnemonic will be generated.\n\n\n## Make a payment\n\n```js\nclient.wallet.getAccount().then(async (account) => {\n  const transaction = account.createTransaction({\n    recipient: 'yixnmigzC236WmTXp9SBZ42csyp9By6Hw8',\n    amount: 0.12,\n  });\n  await account.broadcastTransaction(transaction);\n});\n```\n\n## Interact with Dash Platform\n\nSee the [Tutorial section](https://dashplatform.readme.io/docs/tutorials-introduction) of the Dash Platform documentation for examples."
}