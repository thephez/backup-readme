{
 "metadata": {
  "image": [],
  "title": "",
  "description": ""
 },
 "api": {
  "method": "get",
  "url": "",
  "auth": "required",
  "results": {
   "codes": [
    {
     "name": "",
     "code": "{}",
     "language": "json",
     "status": 200
    },
    {
     "name": "",
     "code": "{}",
     "language": "json",
     "status": 400
    }
   ]
  },
  "params": [],
  "examples": {
   "codes": []
  }
 },
 "next": {
  "description": "",
  "pages": []
 },
 "algolia": {
  "recordCount": 14,
  "publishPending": false,
  "updatedAt": "2023-07-18T14:08:12.927Z"
 },
 "title": "Dashcore Lib Primitives",
 "icon": "",
 "updates": [],
 "type": "basic",
 "slug": "dash-sdk-usage-dashcore-lib-primitives",
 "excerpt": "",
 "body": "# Dashcore Lib primitives\n\nAll Dashcore lib primitives are exposed via the `Core` namespace.\n\n```js\nconst Dash = require('dash');\nconst {\n  Core: {\n    Block,\n    Transaction,\n    Address,\n    // ...\n  }\n} = Dash;\n```\n\n## Transaction\n\nThe Transaction primitive allows creating and manipulating transactions. It also allows signing transactions with a private key.  \nSupports fee control and input/output access (which allows passing a specific script).\n\n```js\nconst { Transaction } = Dash.Core;\nconst tx = new Transaction(txProps)\n```\n\nAccess the [Transaction documentation on dashpay/dashcore-lib](https://github.com/dashpay/dashcore-lib/blob/master/docs/core-concepts/transaction.md)\n\n## Address\n\nStandardized representation of a Dash Address. Address can be instantiated from a String, PrivateKey, PublicKey, HDPrivateKey or HdPublicKey.  \nPay-to-script-hash (P2SH) multi-signature addresses from an array of PublicKeys are also supported.  \n\n```js\nconst { Address } = Dash.Core;\n```\n\nAccess the [Address documentation on dashpay/dashcore-lib](https://github.com/dashpay/dashcore-lib/blob/master/docs/core-concepts/address.md)\n\n## Block\n\nGiven a binary representation of the block as input, the Block class allows you to have a deserialized representation of a Block or its header. It also allows validating the transactions in the block against the header merkle root.\n\nThe block's transactions can also be explored by iterating over elements in array (`block.transactions`).  \n\n`const { Block } = Dash.Core;`\n\nAccess the [Block documentation on dashpay/dashcore-lib](https://github.com/dashpay/dashcore-lib/blob/master/docs/core-concepts/block.md)\n\n## UnspentOutput\n\nRepresentation of an UnspentOutput (also called UTXO as in Unspent Transaction Output).  \nMostly useful in association with a Transaction and for Scripts. \n\n`const { UnspentOutput } = Dash.Core.Transaction;`\n\nAccess the [UnspentOutput documentation on dashpay/dashcore-lib](https://github.com/dashpay/dashcore-lib/blob/master/docs/core-concepts/unspentoutput.md)\n\n## HDPublicKey\n\nHierarchical Deterministic (HD) version of the PublicKey.  \nUsed internally by Wallet-lib and for exchange between peers (DashPay)\n\nconst { HDPublicKey } = Dash.Core;\\`\n\nAccess the [HDKeys documentation on dashpay/dashcore-lib](https://github.com/dashpay/dashcore-lib/blob/master/docs/core-concepts/hierarchical.md#hdpublickey)\n\n## HDPrivateKey\n\nHierarchical Deterministic (HD) version of the PrivateKey.  \nUsed internally by Wallet-lib.\n\n`const { HDPrivateKey } = Dash.Core;`\n\nAccess the [HDKeys documentation on dashpay/dashcore-lib](https://github.com/dashpay/dashcore-lib/blob/master/docs/core-concepts/hierarchical.md#hdprivatekey)\n\n## PublicKey\n\n`const { PublicKey } = Dash.Core;`\n\nAccess the [PublicKey documentation on dashpay/dashcore-lib](https://github.com/dashpay/dashcore-lib/blob/master/docs/core-concepts/publickey.md)\n\n## PrivateKey\n\n`const { PrivateKey } = Dash.Core;`\n\nAccess the [PrivateKey documentation on dashpay/dashcore-lib](https://github.com/dashpay/dashcore-lib/blob/master/docs/core-concepts/privatekey.md)\n\n## Mnemonic\n\nImplementation of [BIP39 Mnemonic code for generative deterministic keys](https://github.com/bitcoin/bips/blob/master/bip-0039.mediawiki).  \nGenerates a random mnemonic with the chosen language, validates a mnemonic or returns the associated HDPrivateKey.  \n\n`const { Mnemonic } = Dash.Core;`\n\nAccess the [Mnemonic documentation on dashpay/dashcore-lib](https://github.com/dashpay/dashcore-lib/blob/master/docs/core-concepts/mnemonic.md)\n\n## Network\n\nA representation of the internal parameters relative to the selected network. By default, all primitives works with 'livenet'.\n\n`const { Network } = Dash.Core;`\n\nAccess the [Network documentation on dashpay/dashcore-lib](https://github.com/dashpay/dashcore-lib/blob/master/docs/core-concepts/networks.md)\n\n## Script\n\n`const { Script } = Dash.Core.Transaction;`\n\nAccess the [Script documentation on dashpay/dashcore-lib](https://github.com/dashpay/dashcore-lib/blob/master/docs/core-concepts/script.md)\n\n## Input\n\n`const { Input } = Dash.Core.Transaction;`\n\nAccess the [Transaction documentation on dashpay/dashcore-lib](https://github.com/dashpay/dashcore-lib/blob/master/docs/core-concepts/transaction.md#adding-inputs)\n\n## Output\n\n`const { Output } = Dash.Core.Transaction;`\n\nAccess the [Transaction documentation on dashpay/dashcore-lib](https://github.com/dashpay/dashcore-lib/blob/master/docs/core-concepts/transaction.md#handling-outputs)",
 "order": 1,
 "isReference": false,
 "deprecated": false,
 "hidden": false,
 "sync_unique": "",
 "link_url": "",
 "link_external": false,
 "previousSlug": "dashcore-lib-primitives",
 "slugUpdatedAt": "2023-07-18T11:26:50.834Z",
 "revision": 5,
 "_id": "64b03f410206ad0f30e177fd",
 "user": "62b2101422da70001ee51d95",
 "project": "5bda01cad172e200499a20a9",
 "parentDoc": "64b03f0cfd3e740075012b5b",
 "category": "64999bbd928d7500763b43ad",
 "createdAt": "2023-07-13T18:15:29.697Z",
 "updatedAt": "2023-07-18T14:08:12.589Z",
 "version": "640776c254e610001146669e",
 "__v": 1,
 "isApi": false,
 "id": "64b03f410206ad0f30e177fd",
 "body_html": "<div class=\"magic-block-textarea\"><h1 class=\"header-scroll\"><div class=\"anchor waypoint\" id=\"section-dashcore-lib-primitives\"></div>Dashcore Lib primitives<a class=\"fa fa-anchor\" href=\"#section-dashcore-lib-primitives\"></a></h1>\n<p>All Dashcore lib primitives are exposed via the <code>Core</code> namespace.</p>\n<pre><code class=\"lang-js\"><span class='cm-s-neo'><span class=\"cm-keyword\">const</span> <span class=\"cm-def\">Dash</span> <span class=\"cm-operator\">=</span> <span class=\"cm-variable\">require</span>(<span class=\"cm-string\">'dash'</span>);\n<span class=\"cm-keyword\">const</span> {\n  <span class=\"cm-property\">Core</span>: {\n    <span class=\"cm-def\">Block</span>,\n    <span class=\"cm-def\">Transaction</span>,\n    <span class=\"cm-def\">Address</span>,\n    <span class=\"cm-comment\">&#47;&#47; ...</span>\n  }\n} <span class=\"cm-operator\">=</span> <span class=\"cm-variable\">Dash</span>;</span>\n</code></pre>\n<h2 class=\"header-scroll\"><div class=\"anchor waypoint\" id=\"section-transaction\"></div>Transaction<a class=\"fa fa-anchor\" href=\"#section-transaction\"></a></h2>\n<p>The Transaction primitive allows creating and manipulating transactions. It also allows signing transactions with a private key.<br>Supports fee control and input/output access (which allows passing a specific script).</p>\n<pre><code class=\"lang-js\"><span class='cm-s-neo'><span class=\"cm-keyword\">const</span> { <span class=\"cm-def\">Transaction</span> } <span class=\"cm-operator\">=</span> <span class=\"cm-variable\">Dash</span>.<span class=\"cm-property\">Core</span>;\n<span class=\"cm-keyword\">const</span> <span class=\"cm-def\">tx</span> <span class=\"cm-operator\">=</span> <span class=\"cm-keyword\">new</span> <span class=\"cm-variable\">Transaction</span>(<span class=\"cm-variable\">txProps</span>)</span>\n</code></pre>\n<p>Access the <a href=\"https://github.com/dashpay/dashcore-lib/blob/master/docs/core-concepts/transaction.md\">Transaction documentation on dashpay/dashcore-lib</a></p>\n<h2 class=\"header-scroll\"><div class=\"anchor waypoint\" id=\"section-address\"></div>Address<a class=\"fa fa-anchor\" href=\"#section-address\"></a></h2>\n<p>Standardized representation of a Dash Address. Address can be instantiated from a String, PrivateKey, PublicKey, HDPrivateKey or HdPublicKey.<br>Pay-to-script-hash (P2SH) multi-signature addresses from an array of PublicKeys are also supported.  </p>\n<pre><code class=\"lang-js\"><span class='cm-s-neo'><span class=\"cm-keyword\">const</span> { <span class=\"cm-def\">Address</span> } <span class=\"cm-operator\">=</span> <span class=\"cm-variable\">Dash</span>.<span class=\"cm-property\">Core</span>;</span>\n</code></pre>\n<p>Access the <a href=\"https://github.com/dashpay/dashcore-lib/blob/master/docs/core-concepts/address.md\">Address documentation on dashpay/dashcore-lib</a></p>\n<h2 class=\"header-scroll\"><div class=\"anchor waypoint\" id=\"section-block\"></div>Block<a class=\"fa fa-anchor\" href=\"#section-block\"></a></h2>\n<p>Given a binary representation of the block as input, the Block class allows you to have a deserialized representation of a Block or its header. It also allows validating the transactions in the block against the header merkle root.</p>\n<p>The block&#39;s transactions can also be explored by iterating over elements in array (<code>block.transactions</code>).  </p>\n<p><code>const { Block } = Dash.Core;</code></p>\n<p>Access the <a href=\"https://github.com/dashpay/dashcore-lib/blob/master/docs/core-concepts/block.md\">Block documentation on dashpay/dashcore-lib</a></p>\n<h2 class=\"header-scroll\"><div class=\"anchor waypoint\" id=\"section-unspent-output\"></div>UnspentOutput<a class=\"fa fa-anchor\" href=\"#section-unspent-output\"></a></h2>\n<p>Representation of an UnspentOutput (also called UTXO as in Unspent Transaction Output).<br>Mostly useful in association with a Transaction and for Scripts. </p>\n<p><code>const { UnspentOutput } = Dash.Core.Transaction;</code></p>\n<p>Access the <a href=\"https://github.com/dashpay/dashcore-lib/blob/master/docs/core-concepts/unspentoutput.md\">UnspentOutput documentation on dashpay/dashcore-lib</a></p>\n<h2 class=\"header-scroll\"><div class=\"anchor waypoint\" id=\"section-hd-public-key\"></div>HDPublicKey<a class=\"fa fa-anchor\" href=\"#section-hd-public-key\"></a></h2>\n<p>Hierarchical Deterministic (HD) version of the PublicKey.<br>Used internally by Wallet-lib and for exchange between peers (DashPay)</p>\n<p>const { HDPublicKey } = Dash.Core;`</p>\n<p>Access the <a href=\"https://github.com/dashpay/dashcore-lib/blob/master/docs/core-concepts/hierarchical.md#hdpublickey\">HDKeys documentation on dashpay/dashcore-lib</a></p>\n<h2 class=\"header-scroll\"><div class=\"anchor waypoint\" id=\"section-hd-private-key\"></div>HDPrivateKey<a class=\"fa fa-anchor\" href=\"#section-hd-private-key\"></a></h2>\n<p>Hierarchical Deterministic (HD) version of the PrivateKey.<br>Used internally by Wallet-lib.</p>\n<p><code>const { HDPrivateKey } = Dash.Core;</code></p>\n<p>Access the <a href=\"https://github.com/dashpay/dashcore-lib/blob/master/docs/core-concepts/hierarchical.md#hdprivatekey\">HDKeys documentation on dashpay/dashcore-lib</a></p>\n<h2 class=\"header-scroll\"><div class=\"anchor waypoint\" id=\"section-public-key\"></div>PublicKey<a class=\"fa fa-anchor\" href=\"#section-public-key\"></a></h2>\n<p><code>const { PublicKey } = Dash.Core;</code></p>\n<p>Access the <a href=\"https://github.com/dashpay/dashcore-lib/blob/master/docs/core-concepts/publickey.md\">PublicKey documentation on dashpay/dashcore-lib</a></p>\n<h2 class=\"header-scroll\"><div class=\"anchor waypoint\" id=\"section-private-key\"></div>PrivateKey<a class=\"fa fa-anchor\" href=\"#section-private-key\"></a></h2>\n<p><code>const { PrivateKey } = Dash.Core;</code></p>\n<p>Access the <a href=\"https://github.com/dashpay/dashcore-lib/blob/master/docs/core-concepts/privatekey.md\">PrivateKey documentation on dashpay/dashcore-lib</a></p>\n<h2 class=\"header-scroll\"><div class=\"anchor waypoint\" id=\"section-mnemonic\"></div>Mnemonic<a class=\"fa fa-anchor\" href=\"#section-mnemonic\"></a></h2>\n<p>Implementation of <a href=\"https://github.com/bitcoin/bips/blob/master/bip-0039.mediawiki\">BIP39 Mnemonic code for generative deterministic keys</a>.<br>Generates a random mnemonic with the chosen language, validates a mnemonic or returns the associated HDPrivateKey.  </p>\n<p><code>const { Mnemonic } = Dash.Core;</code></p>\n<p>Access the <a href=\"https://github.com/dashpay/dashcore-lib/blob/master/docs/core-concepts/mnemonic.md\">Mnemonic documentation on dashpay/dashcore-lib</a></p>\n<h2 class=\"header-scroll\"><div class=\"anchor waypoint\" id=\"section-network\"></div>Network<a class=\"fa fa-anchor\" href=\"#section-network\"></a></h2>\n<p>A representation of the internal parameters relative to the selected network. By default, all primitives works with &#39;livenet&#39;.</p>\n<p><code>const { Network } = Dash.Core;</code></p>\n<p>Access the <a href=\"https://github.com/dashpay/dashcore-lib/blob/master/docs/core-concepts/networks.md\">Network documentation on dashpay/dashcore-lib</a></p>\n<h2 class=\"header-scroll\"><div class=\"anchor waypoint\" id=\"section-script\"></div>Script<a class=\"fa fa-anchor\" href=\"#section-script\"></a></h2>\n<p><code>const { Script } = Dash.Core.Transaction;</code></p>\n<p>Access the <a href=\"https://github.com/dashpay/dashcore-lib/blob/master/docs/core-concepts/script.md\">Script documentation on dashpay/dashcore-lib</a></p>\n<h2 class=\"header-scroll\"><div class=\"anchor waypoint\" id=\"section-input\"></div>Input<a class=\"fa fa-anchor\" href=\"#section-input\"></a></h2>\n<p><code>const { Input } = Dash.Core.Transaction;</code></p>\n<p>Access the <a href=\"https://github.com/dashpay/dashcore-lib/blob/master/docs/core-concepts/transaction.md#adding-inputs\">Transaction documentation on dashpay/dashcore-lib</a></p>\n<h2 class=\"header-scroll\"><div class=\"anchor waypoint\" id=\"section-output\"></div>Output<a class=\"fa fa-anchor\" href=\"#section-output\"></a></h2>\n<p><code>const { Output } = Dash.Core.Transaction;</code></p>\n<p>Access the <a href=\"https://github.com/dashpay/dashcore-lib/blob/master/docs/core-concepts/transaction.md#handling-outputs\">Transaction documentation on dashpay/dashcore-lib</a></p>\n\n</div>"
}