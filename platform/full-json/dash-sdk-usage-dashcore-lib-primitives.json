{
 "metadata": {
  "image": [],
  "title": "",
  "description": "",
  "keywords": "",
  "robots": "index"
 },
 "mdx": {
  "altBody": "",
  "status": "rdmd"
 },
 "api": {
  "method": "get",
  "url": "",
  "auth": "required",
  "results": {
   "codes": [
    {
     "name": "",
     "code": "{}",
     "language": "json",
     "status": 200
    },
    {
     "name": "",
     "code": "{}",
     "language": "json",
     "status": 400
    }
   ]
  },
  "params": [],
  "examples": {
   "codes": []
  }
 },
 "next": {
  "description": "",
  "pages": []
 },
 "algolia": {
  "recordCount": 14,
  "publishPending": false,
  "translationFailure": false,
  "updatedAt": "2023-09-06T16:36:55.515Z"
 },
 "title": "Dashcore Lib Primitives",
 "icon": "",
 "updates": [],
 "type": "basic",
 "slug": "dash-sdk-usage-dashcore-lib-primitives",
 "excerpt": "",
 "body": "# Dashcore Lib primitives\n\nAll Dashcore lib primitives are exposed via the `Core` namespace.\n\n```js\nconst Dash = require('dash');\nconst {\n  Core: {\n    Block,\n    Transaction,\n    Address,\n    // ...\n  }\n} = Dash;\n```\n\n## Transaction\n\nThe Transaction primitive allows creating and manipulating transactions. It also allows signing transactions with a private key.  \nSupports fee control and input/output access (which allows passing a specific script).\n\n```js\nconst { Transaction } = Dash.Core;\nconst tx = new Transaction(txProps)\n```\n\nAccess the [Transaction documentation on dashpay/dashcore-lib](https://github.com/dashpay/dashcore-lib/blob/master/docs/core-concepts/transaction.md)\n\n## Address\n\nStandardized representation of a Dash Address. Address can be instantiated from a String, PrivateKey, PublicKey, HDPrivateKey or HdPublicKey.  \nPay-to-script-hash (P2SH) multi-signature addresses from an array of PublicKeys are also supported.  \n\n```js\nconst { Address } = Dash.Core;\n```\n\nAccess the [Address documentation on dashpay/dashcore-lib](https://github.com/dashpay/dashcore-lib/blob/master/docs/core-concepts/address.md)\n\n## Block\n\nGiven a binary representation of the block as input, the Block class allows you to have a deserialized representation of a Block or its header. It also allows validating the transactions in the block against the header merkle root.\n\nThe block's transactions can also be explored by iterating over elements in array (`block.transactions`).  \n\n`const { Block } = Dash.Core;`\n\nAccess the [Block documentation on dashpay/dashcore-lib](https://github.com/dashpay/dashcore-lib/blob/master/docs/core-concepts/block.md)\n\n## UnspentOutput\n\nRepresentation of an UnspentOutput (also called UTXO as in Unspent Transaction Output).  \nMostly useful in association with a Transaction and for Scripts. \n\n`const { UnspentOutput } = Dash.Core.Transaction;`\n\nAccess the [UnspentOutput documentation on dashpay/dashcore-lib](https://github.com/dashpay/dashcore-lib/blob/master/docs/core-concepts/unspentoutput.md)\n\n## HDPublicKey\n\nHierarchical Deterministic (HD) version of the PublicKey.  \nUsed internally by Wallet-lib and for exchange between peers (DashPay)\n\nconst { HDPublicKey } = Dash.Core;\\`\n\nAccess the [HDKeys documentation on dashpay/dashcore-lib](https://github.com/dashpay/dashcore-lib/blob/master/docs/core-concepts/hierarchical.md#hdpublickey)\n\n## HDPrivateKey\n\nHierarchical Deterministic (HD) version of the PrivateKey.  \nUsed internally by Wallet-lib.\n\n`const { HDPrivateKey } = Dash.Core;`\n\nAccess the [HDKeys documentation on dashpay/dashcore-lib](https://github.com/dashpay/dashcore-lib/blob/master/docs/core-concepts/hierarchical.md#hdprivatekey)\n\n## PublicKey\n\n`const { PublicKey } = Dash.Core;`\n\nAccess the [PublicKey documentation on dashpay/dashcore-lib](https://github.com/dashpay/dashcore-lib/blob/master/docs/core-concepts/publickey.md)\n\n## PrivateKey\n\n`const { PrivateKey } = Dash.Core;`\n\nAccess the [PrivateKey documentation on dashpay/dashcore-lib](https://github.com/dashpay/dashcore-lib/blob/master/docs/core-concepts/privatekey.md)\n\n## Mnemonic\n\nImplementation of [BIP39 Mnemonic code for generative deterministic keys](https://github.com/bitcoin/bips/blob/master/bip-0039.mediawiki).  \nGenerates a random mnemonic with the chosen language, validates a mnemonic or returns the associated HDPrivateKey.  \n\n`const { Mnemonic } = Dash.Core;`\n\nAccess the [Mnemonic documentation on dashpay/dashcore-lib](https://github.com/dashpay/dashcore-lib/blob/master/docs/core-concepts/mnemonic.md)\n\n## Network\n\nA representation of the internal parameters relative to the selected network. By default, all primitives works with 'livenet'.\n\n`const { Network } = Dash.Core;`\n\nAccess the [Network documentation on dashpay/dashcore-lib](https://github.com/dashpay/dashcore-lib/blob/master/docs/core-concepts/networks.md)\n\n## Script\n\n`const { Script } = Dash.Core.Transaction;`\n\nAccess the [Script documentation on dashpay/dashcore-lib](https://github.com/dashpay/dashcore-lib/blob/master/docs/core-concepts/script.md)\n\n## Input\n\n`const { Input } = Dash.Core.Transaction;`\n\nAccess the [Transaction documentation on dashpay/dashcore-lib](https://github.com/dashpay/dashcore-lib/blob/master/docs/core-concepts/transaction.md#adding-inputs)\n\n## Output\n\n`const { Output } = Dash.Core.Transaction;`\n\nAccess the [Transaction documentation on dashpay/dashcore-lib](https://github.com/dashpay/dashcore-lib/blob/master/docs/core-concepts/transaction.md#handling-outputs)",
 "order": 1,
 "isReference": false,
 "deprecated": false,
 "hidden": false,
 "sync_unique": "",
 "link_url": "",
 "link_external": false,
 "reusableContent": [],
 "previousSlug": "dashcore-lib-primitives",
 "slugUpdatedAt": "2023-07-18T11:26:50.834Z",
 "revision": 5,
 "_id": "64f8a9df750465004742ae04",
 "user": "62b2101422da70001ee51d95",
 "project": "5bda01cad172e200499a20a9",
 "parentDoc": "64f8a9df750465004742ae02",
 "category": "64f8a9df750465004742ad74",
 "createdAt": "2023-07-13T18:15:29.697Z",
 "updatedAt": "2023-07-18T14:08:12.589Z",
 "version": "64f8a9df750465004742ae1d",
 "__v": 1,
 "isApi": false,
 "id": "64f8a9df750465004742ae04",
 "body_html": "<h1 class=\"heading heading-1 header-scroll\" align=\"\"><div class=\"heading-anchor anchor waypoint\" id=\"dashcore-lib-primitives\"></div><div class=\"heading-text\"><div id=\"section-dashcore-lib-primitives\" class=\"heading-anchor_backwardsCompatibility\"></div>Dashcore Lib primitives</div><a aria-label=\"Skip link to Dashcore Lib primitives\" class=\"heading-anchor-icon fa fa-anchor\" href=\"#dashcore-lib-primitives\"></a></h1>\n<p>All Dashcore lib primitives are exposed via the <button aria-label=\"Copy Code\" class=\"rdmd-code-copy fa\"></button><code class=\"rdmd-code lang- theme-light\" data-lang=\"\" name=\"\" tabindex=\"0\">Core</code> namespace.</p>\n<div class=\"CodeTabs CodeTabs_initial theme-light\"><div class=\"CodeTabs-toolbar\" role=\"tablist\"><button aria-selected=\"true\" class=\"CodeTabs_active\" role=\"tab\" type=\"button\">JavaScript</button></div><div class=\"CodeTabs-inner\" role=\"tabpanel\"><pre><button aria-label=\"Copy Code\" class=\"rdmd-code-copy fa\"></button><code class=\"rdmd-code lang-js theme-light\" data-lang=\"js\" name=\"\" tabindex=\"0\">const Dash = require(&#x27;dash&#x27;);\nconst {\n  Core: {\n    Block,\n    Transaction,\n    Address,\n    // ...\n  }\n} = Dash;\n</code></pre></div></div>\n<h2 class=\"heading heading-2 header-scroll\" align=\"\"><div class=\"heading-anchor anchor waypoint\" id=\"transaction\"></div><div class=\"heading-text\"><div id=\"section-transaction\" class=\"heading-anchor_backwardsCompatibility\"></div>Transaction</div><a aria-label=\"Skip link to Transaction\" class=\"heading-anchor-icon fa fa-anchor\" href=\"#transaction\"></a></h2>\n<p>The Transaction primitive allows creating and manipulating transactions. It also allows signing transactions with a private key.<br/>\nSupports fee control and input/output access (which allows passing a specific script).</p>\n<div class=\"CodeTabs CodeTabs_initial theme-light\"><div class=\"CodeTabs-toolbar\" role=\"tablist\"><button aria-selected=\"true\" class=\"CodeTabs_active\" role=\"tab\" type=\"button\">JavaScript</button></div><div class=\"CodeTabs-inner\" role=\"tabpanel\"><pre><button aria-label=\"Copy Code\" class=\"rdmd-code-copy fa\"></button><code class=\"rdmd-code lang-js theme-light\" data-lang=\"js\" name=\"\" tabindex=\"0\">const { Transaction } = Dash.Core;\nconst tx = new Transaction(txProps)\n</code></pre></div></div>\n<p>Access the <a href=\"https://github.com/dashpay/dashcore-lib/blob/master/docs/core-concepts/transaction.md\" target=\"\" title=\"\">Transaction documentation on dashpay/dashcore-lib</a></p>\n<h2 class=\"heading heading-2 header-scroll\" align=\"\"><div class=\"heading-anchor anchor waypoint\" id=\"address\"></div><div class=\"heading-text\"><div id=\"section-address\" class=\"heading-anchor_backwardsCompatibility\"></div>Address</div><a aria-label=\"Skip link to Address\" class=\"heading-anchor-icon fa fa-anchor\" href=\"#address\"></a></h2>\n<p>Standardized representation of a Dash Address. Address can be instantiated from a String, PrivateKey, PublicKey, HDPrivateKey or HdPublicKey.<br/>\nPay-to-script-hash (P2SH) multi-signature addresses from an array of PublicKeys are also supported.  </p>\n<div class=\"CodeTabs CodeTabs_initial theme-light\"><div class=\"CodeTabs-toolbar\" role=\"tablist\"><button aria-selected=\"true\" class=\"CodeTabs_active\" role=\"tab\" type=\"button\">JavaScript</button></div><div class=\"CodeTabs-inner\" role=\"tabpanel\"><pre><button aria-label=\"Copy Code\" class=\"rdmd-code-copy fa\"></button><code class=\"rdmd-code lang-js theme-light\" data-lang=\"js\" name=\"\" tabindex=\"0\">const { Address } = Dash.Core;\n</code></pre></div></div>\n<p>Access the <a href=\"https://github.com/dashpay/dashcore-lib/blob/master/docs/core-concepts/address.md\" target=\"\" title=\"\">Address documentation on dashpay/dashcore-lib</a></p>\n<h2 class=\"heading heading-2 header-scroll\" align=\"\"><div class=\"heading-anchor anchor waypoint\" id=\"block\"></div><div class=\"heading-text\"><div id=\"section-block\" class=\"heading-anchor_backwardsCompatibility\"></div>Block</div><a aria-label=\"Skip link to Block\" class=\"heading-anchor-icon fa fa-anchor\" href=\"#block\"></a></h2>\n<p>Given a binary representation of the block as input, the Block class allows you to have a deserialized representation of a Block or its header. It also allows validating the transactions in the block against the header merkle root.</p>\n<p>The block&#x27;s transactions can also be explored by iterating over elements in array (<button aria-label=\"Copy Code\" class=\"rdmd-code-copy fa\"></button><code class=\"rdmd-code lang- theme-light\" data-lang=\"\" name=\"\" tabindex=\"0\">block.transactions</code>).  </p>\n<p><button aria-label=\"Copy Code\" class=\"rdmd-code-copy fa\"></button><code class=\"rdmd-code lang- theme-light\" data-lang=\"\" name=\"\" tabindex=\"0\">const { Block } = Dash.Core;</code></p>\n<p>Access the <a href=\"https://github.com/dashpay/dashcore-lib/blob/master/docs/core-concepts/block.md\" target=\"\" title=\"\">Block documentation on dashpay/dashcore-lib</a></p>\n<h2 class=\"heading heading-2 header-scroll\" align=\"\"><div class=\"heading-anchor anchor waypoint\" id=\"unspentoutput\"></div><div class=\"heading-text\"><div id=\"section-unspent-output\" class=\"heading-anchor_backwardsCompatibility\"></div>UnspentOutput</div><a aria-label=\"Skip link to UnspentOutput\" class=\"heading-anchor-icon fa fa-anchor\" href=\"#unspentoutput\"></a></h2>\n<p>Representation of an UnspentOutput (also called UTXO as in Unspent Transaction Output).<br/>\nMostly useful in association with a Transaction and for Scripts. </p>\n<p><button aria-label=\"Copy Code\" class=\"rdmd-code-copy fa\"></button><code class=\"rdmd-code lang- theme-light\" data-lang=\"\" name=\"\" tabindex=\"0\">const { UnspentOutput } = Dash.Core.Transaction;</code></p>\n<p>Access the <a href=\"https://github.com/dashpay/dashcore-lib/blob/master/docs/core-concepts/unspentoutput.md\" target=\"\" title=\"\">UnspentOutput documentation on dashpay/dashcore-lib</a></p>\n<h2 class=\"heading heading-2 header-scroll\" align=\"\"><div class=\"heading-anchor anchor waypoint\" id=\"hdpublickey\"></div><div class=\"heading-text\"><div id=\"section-hd-public-key\" class=\"heading-anchor_backwardsCompatibility\"></div>HDPublicKey</div><a aria-label=\"Skip link to HDPublicKey\" class=\"heading-anchor-icon fa fa-anchor\" href=\"#hdpublickey\"></a></h2>\n<p>Hierarchical Deterministic (HD) version of the PublicKey.<br/>\nUsed internally by Wallet-lib and for exchange between peers (DashPay)</p>\n<p>const { HDPublicKey } = Dash.Core;`</p>\n<p>Access the <a href=\"https://github.com/dashpay/dashcore-lib/blob/master/docs/core-concepts/hierarchical.md#hdpublickey\" target=\"\" title=\"\">HDKeys documentation on dashpay/dashcore-lib</a></p>\n<h2 class=\"heading heading-2 header-scroll\" align=\"\"><div class=\"heading-anchor anchor waypoint\" id=\"hdprivatekey\"></div><div class=\"heading-text\"><div id=\"section-hd-private-key\" class=\"heading-anchor_backwardsCompatibility\"></div>HDPrivateKey</div><a aria-label=\"Skip link to HDPrivateKey\" class=\"heading-anchor-icon fa fa-anchor\" href=\"#hdprivatekey\"></a></h2>\n<p>Hierarchical Deterministic (HD) version of the PrivateKey.<br/>\nUsed internally by Wallet-lib.</p>\n<p><button aria-label=\"Copy Code\" class=\"rdmd-code-copy fa\"></button><code class=\"rdmd-code lang- theme-light\" data-lang=\"\" name=\"\" tabindex=\"0\">const { HDPrivateKey } = Dash.Core;</code></p>\n<p>Access the <a href=\"https://github.com/dashpay/dashcore-lib/blob/master/docs/core-concepts/hierarchical.md#hdprivatekey\" target=\"\" title=\"\">HDKeys documentation on dashpay/dashcore-lib</a></p>\n<h2 class=\"heading heading-2 header-scroll\" align=\"\"><div class=\"heading-anchor anchor waypoint\" id=\"publickey\"></div><div class=\"heading-text\"><div id=\"section-public-key\" class=\"heading-anchor_backwardsCompatibility\"></div>PublicKey</div><a aria-label=\"Skip link to PublicKey\" class=\"heading-anchor-icon fa fa-anchor\" href=\"#publickey\"></a></h2>\n<p><button aria-label=\"Copy Code\" class=\"rdmd-code-copy fa\"></button><code class=\"rdmd-code lang- theme-light\" data-lang=\"\" name=\"\" tabindex=\"0\">const { PublicKey } = Dash.Core;</code></p>\n<p>Access the <a href=\"https://github.com/dashpay/dashcore-lib/blob/master/docs/core-concepts/publickey.md\" target=\"\" title=\"\">PublicKey documentation on dashpay/dashcore-lib</a></p>\n<h2 class=\"heading heading-2 header-scroll\" align=\"\"><div class=\"heading-anchor anchor waypoint\" id=\"privatekey\"></div><div class=\"heading-text\"><div id=\"section-private-key\" class=\"heading-anchor_backwardsCompatibility\"></div>PrivateKey</div><a aria-label=\"Skip link to PrivateKey\" class=\"heading-anchor-icon fa fa-anchor\" href=\"#privatekey\"></a></h2>\n<p><button aria-label=\"Copy Code\" class=\"rdmd-code-copy fa\"></button><code class=\"rdmd-code lang- theme-light\" data-lang=\"\" name=\"\" tabindex=\"0\">const { PrivateKey } = Dash.Core;</code></p>\n<p>Access the <a href=\"https://github.com/dashpay/dashcore-lib/blob/master/docs/core-concepts/privatekey.md\" target=\"\" title=\"\">PrivateKey documentation on dashpay/dashcore-lib</a></p>\n<h2 class=\"heading heading-2 header-scroll\" align=\"\"><div class=\"heading-anchor anchor waypoint\" id=\"mnemonic\"></div><div class=\"heading-text\"><div id=\"section-mnemonic\" class=\"heading-anchor_backwardsCompatibility\"></div>Mnemonic</div><a aria-label=\"Skip link to Mnemonic\" class=\"heading-anchor-icon fa fa-anchor\" href=\"#mnemonic\"></a></h2>\n<p>Implementation of <a href=\"https://github.com/bitcoin/bips/blob/master/bip-0039.mediawiki\" target=\"\" title=\"\">BIP39 Mnemonic code for generative deterministic keys</a>.<br/>\nGenerates a random mnemonic with the chosen language, validates a mnemonic or returns the associated HDPrivateKey.  </p>\n<p><button aria-label=\"Copy Code\" class=\"rdmd-code-copy fa\"></button><code class=\"rdmd-code lang- theme-light\" data-lang=\"\" name=\"\" tabindex=\"0\">const { Mnemonic } = Dash.Core;</code></p>\n<p>Access the <a href=\"https://github.com/dashpay/dashcore-lib/blob/master/docs/core-concepts/mnemonic.md\" target=\"\" title=\"\">Mnemonic documentation on dashpay/dashcore-lib</a></p>\n<h2 class=\"heading heading-2 header-scroll\" align=\"\"><div class=\"heading-anchor anchor waypoint\" id=\"network\"></div><div class=\"heading-text\"><div id=\"section-network\" class=\"heading-anchor_backwardsCompatibility\"></div>Network</div><a aria-label=\"Skip link to Network\" class=\"heading-anchor-icon fa fa-anchor\" href=\"#network\"></a></h2>\n<p>A representation of the internal parameters relative to the selected network. By default, all primitives works with &#x27;livenet&#x27;.</p>\n<p><button aria-label=\"Copy Code\" class=\"rdmd-code-copy fa\"></button><code class=\"rdmd-code lang- theme-light\" data-lang=\"\" name=\"\" tabindex=\"0\">const { Network } = Dash.Core;</code></p>\n<p>Access the <a href=\"https://github.com/dashpay/dashcore-lib/blob/master/docs/core-concepts/networks.md\" target=\"\" title=\"\">Network documentation on dashpay/dashcore-lib</a></p>\n<h2 class=\"heading heading-2 header-scroll\" align=\"\"><div class=\"heading-anchor anchor waypoint\" id=\"script\"></div><div class=\"heading-text\"><div id=\"section-script\" class=\"heading-anchor_backwardsCompatibility\"></div>Script</div><a aria-label=\"Skip link to Script\" class=\"heading-anchor-icon fa fa-anchor\" href=\"#script\"></a></h2>\n<p><button aria-label=\"Copy Code\" class=\"rdmd-code-copy fa\"></button><code class=\"rdmd-code lang- theme-light\" data-lang=\"\" name=\"\" tabindex=\"0\">const { Script } = Dash.Core.Transaction;</code></p>\n<p>Access the <a href=\"https://github.com/dashpay/dashcore-lib/blob/master/docs/core-concepts/script.md\" target=\"\" title=\"\">Script documentation on dashpay/dashcore-lib</a></p>\n<h2 class=\"heading heading-2 header-scroll\" align=\"\"><div class=\"heading-anchor anchor waypoint\" id=\"input\"></div><div class=\"heading-text\"><div id=\"section-input\" class=\"heading-anchor_backwardsCompatibility\"></div>Input</div><a aria-label=\"Skip link to Input\" class=\"heading-anchor-icon fa fa-anchor\" href=\"#input\"></a></h2>\n<p><button aria-label=\"Copy Code\" class=\"rdmd-code-copy fa\"></button><code class=\"rdmd-code lang- theme-light\" data-lang=\"\" name=\"\" tabindex=\"0\">const { Input } = Dash.Core.Transaction;</code></p>\n<p>Access the <a href=\"https://github.com/dashpay/dashcore-lib/blob/master/docs/core-concepts/transaction.md#adding-inputs\" target=\"\" title=\"\">Transaction documentation on dashpay/dashcore-lib</a></p>\n<h2 class=\"heading heading-2 header-scroll\" align=\"\"><div class=\"heading-anchor anchor waypoint\" id=\"output\"></div><div class=\"heading-text\"><div id=\"section-output\" class=\"heading-anchor_backwardsCompatibility\"></div>Output</div><a aria-label=\"Skip link to Output\" class=\"heading-anchor-icon fa fa-anchor\" href=\"#output\"></a></h2>\n<p><button aria-label=\"Copy Code\" class=\"rdmd-code-copy fa\"></button><code class=\"rdmd-code lang- theme-light\" data-lang=\"\" name=\"\" tabindex=\"0\">const { Output } = Dash.Core.Transaction;</code></p>\n<p>Access the <a href=\"https://github.com/dashpay/dashcore-lib/blob/master/docs/core-concepts/transaction.md#handling-outputs\" target=\"\" title=\"\">Transaction documentation on dashpay/dashcore-lib</a></p>"
}