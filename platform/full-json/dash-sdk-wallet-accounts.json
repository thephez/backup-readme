{
 "metadata": {
  "image": [],
  "title": "",
  "description": "",
  "keywords": "",
  "robots": "index"
 },
 "api": {
  "method": "get",
  "url": "",
  "auth": "required",
  "results": {
   "codes": [
    {
     "name": "",
     "code": "{}",
     "language": "json",
     "status": 200
    },
    {
     "name": "",
     "code": "{}",
     "language": "json",
     "status": 400
    }
   ]
  },
  "params": [],
  "examples": {
   "codes": []
  }
 },
 "next": {
  "description": "",
  "pages": []
 },
 "algolia": {
  "recordCount": 1,
  "publishPending": false,
  "translationFailure": false,
  "updatedAt": "2023-09-06T16:36:55.685Z"
 },
 "title": "Accounts",
 "icon": "",
 "updates": [],
 "type": "basic",
 "slug": "dash-sdk-wallet-accounts",
 "excerpt": "",
 "body": "## Getting an account\n\nWhen Wallet is initialized with `mnemonic`, it holds multiple Accounts according to BIP44.  \nEach Account holds the keys needed to make a payments from it.\n\nWallet's `getAccount` method used to access an account:\n\n```js\nconst client = new Dash.Client({\n  wallet: {\n    mnemonic: \"maximum blast eight orchard waste wood gospel siren parent deer athlete impact\",\n  },\n});\n\nconst account = await client.wallet.getAccount()\n// Do something with account\n```\n\nAs optional parameter, an integer representing the account `index` can be passed as parameter. By default, index account on call is 0.\n\n```\nclient.wallet.getAccount({ index: 1 })\n```\n\nAwaiting for the `getAccount()` promise is necessary to ensure the wallet is synced-up with the network and make sure that the UTXO set is ready to be used for payment/signing.",
 "order": 0,
 "isReference": false,
 "deprecated": false,
 "hidden": false,
 "sync_unique": "",
 "link_url": "",
 "link_external": false,
 "reusableContent": [],
 "previousSlug": "accounts",
 "slugUpdatedAt": "2023-07-18T11:27:14.157Z",
 "revision": 4,
 "_id": "64f8a9df750465004742ae06",
 "user": "62b2101422da70001ee51d95",
 "project": "5bda01cad172e200499a20a9",
 "parentDoc": "64f8a9df750465004742ae05",
 "category": "64f8a9df750465004742ad74",
 "createdAt": "2023-07-13T18:36:59.314Z",
 "updatedAt": "2023-07-18T14:08:18.925Z",
 "version": "64f8a9df750465004742ae1d",
 "__v": 1,
 "isApi": false,
 "id": "64f8a9df750465004742ae06",
 "body_html": "## Getting an account\n\nWhen Wallet is initialized with `mnemonic`, it holds multiple Accounts according to BIP44.  \nEach Account holds the keys needed to make a payments from it.\n\nWallet's `getAccount` method used to access an account:\n\n```js\nconst client = new Dash.Client({\n  wallet: {\n    mnemonic: \"maximum blast eight orchard waste wood gospel siren parent deer athlete impact\",\n  },\n});\n\nconst account = await client.wallet.getAccount()\n// Do something with account\n```\n\nAs optional parameter, an integer representing the account `index` can be passed as parameter. By default, index account on call is 0.\n\n```\nclient.wallet.getAccount({ index: 1 })\n```\n\nAwaiting for the `getAccount()` promise is necessary to ensure the wallet is synced-up with the network and make sure that the UTXO set is ready to be used for payment/signing."
}