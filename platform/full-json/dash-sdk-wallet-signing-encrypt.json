{
 "metadata": {
  "image": [],
  "title": "",
  "description": "",
  "keywords": "",
  "robots": "index"
 },
 "api": {
  "method": "get",
  "url": "",
  "auth": "required",
  "results": {
   "codes": [
    {
     "name": "",
     "code": "{}",
     "language": "json",
     "status": 200
    },
    {
     "name": "",
     "code": "{}",
     "language": "json",
     "status": 400
    }
   ]
  },
  "params": [],
  "examples": {
   "codes": []
  }
 },
 "next": {
  "description": "",
  "pages": []
 },
 "algolia": {
  "recordCount": 4,
  "publishPending": false,
  "translationFailure": false,
  "updatedAt": "2023-09-06T16:36:55.852Z"
 },
 "title": "Signing encrypt",
 "icon": "",
 "updates": [],
 "type": "basic",
 "slug": "dash-sdk-wallet-signing-encrypt",
 "excerpt": "",
 "body": "## Obtain account\n\n```js\nconst account = await client.wallet.getAccount();\n```\n\n## Sign a Transaction\n\n```js\nconst tx = new Dash.Core.Transaction({\n  // ...txOpts\n});\nconst signedTx = account.sign(tx);\n```\n\n## Encrypt a message\n\n```js\n  const message = 'Something';\n  const signedMessage = account.encrypt('AES', message, 'secret');\n```\n\n## Decrypt a message\n\n```js\nconst encrypted = 'U2FsdGVkX19JLa+1UpbMcut1/QFWLMlKUS+iqz+7Wl4=';\nconst message = account.decrypt('AES', encrypted, 'secret');\n```",
 "order": 1,
 "isReference": false,
 "deprecated": false,
 "hidden": false,
 "sync_unique": "",
 "link_url": "",
 "link_external": false,
 "reusableContent": [],
 "previousSlug": "signing-encrypt",
 "slugUpdatedAt": "2023-07-18T11:27:24.316Z",
 "revision": 5,
 "_id": "64f8a9df750465004742ae07",
 "user": "62b2101422da70001ee51d95",
 "project": "5bda01cad172e200499a20a9",
 "parentDoc": "64f8a9df750465004742ae05",
 "category": "64f8a9df750465004742ad74",
 "createdAt": "2023-07-13T18:37:13.489Z",
 "updatedAt": "2023-07-18T14:08:18.925Z",
 "version": "64f8a9df750465004742ae1d",
 "__v": 1,
 "isApi": false,
 "id": "64f8a9df750465004742ae07",
 "body_html": "## Obtain account\n\n```js\nconst account = await client.wallet.getAccount();\n```\n\n## Sign a Transaction\n\n```js\nconst tx = new Dash.Core.Transaction({\n  // ...txOpts\n});\nconst signedTx = account.sign(tx);\n```\n\n## Encrypt a message\n\n```js\n  const message = 'Something';\n  const signedMessage = account.encrypt('AES', message, 'secret');\n```\n\n## Decrypt a message\n\n```js\nconst encrypted = 'U2FsdGVkX19JLa+1UpbMcut1/QFWLMlKUS+iqz+7Wl4=';\nconst message = account.decrypt('AES', encrypted, 'secret');\n```"
}