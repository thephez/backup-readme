{
 "metadata": {
  "image": [],
  "title": "",
  "description": "",
  "keywords": "",
  "robots": "index"
 },
 "api": {
  "method": "get",
  "url": "",
  "auth": "required",
  "results": {
   "codes": [
    {
     "status": 200,
     "language": "json",
     "code": "{}",
     "name": ""
    },
    {
     "status": 400,
     "language": "json",
     "code": "{}",
     "name": ""
    }
   ]
  },
  "params": [],
  "examples": {
   "codes": []
  }
 },
 "next": {
  "description": "",
  "pages": [
   {
    "type": "doc",
    "icon": "file-text-o",
    "name": "Data Contract",
    "slug": "explanation-platform-protocol-data-contract",
    "category": "Explanations"
   },
   {
    "type": "doc",
    "icon": "file-text-o",
    "name": "State Transition",
    "slug": "explanation-platform-protocol-state-transition",
    "category": "Explanations"
   },
   {
    "type": "doc",
    "icon": "file-text-o",
    "name": "Document",
    "slug": "explanation-platform-protocol-document",
    "category": "Explanations",
    "atwho_order": 0
   }
  ]
 },
 "algolia": {
  "recordCount": 6,
  "publishPending": false,
  "translationFailure": false,
  "updatedAt": "2023-09-06T16:36:36.740Z"
 },
 "title": "Platform Protocol (DPP)",
 "icon": "",
 "updates": [
  "5e0279ce8b04a0001fb81ed4"
 ],
 "type": "basic",
 "slug": "explanation-platform-protocol",
 "excerpt": "Protocol for verifying and validating data on Dash Platform",
 "body": "# Overview\n\nTo ensure the consistency and integrity of data stored on Layer 2, all data is governed by the Dash Platform Protocol (DPP). Dash Platform Protocol describes serialization and validation rules for the platform's 3 core data structures: data contracts, documents, and state transitions. Each of these structures are briefly described below.\n\n# Structure Descriptions\n\n## Data Contract\n\nA data contract is a database schema that a developer needs to register with the platform in order to start using any decentralized storage functionality. Data contracts are described using the JSON Schema language and must follow some basic rules as described in the platform protocol repository. Contracts are serialized to binary form using [CBOR](https://cbor.io/).\n\n> \ud83d\udcd8 Contract updates\n> \n> Dash's data contracts support backwards-compatible modifications after their initial deployment unlike many smart contract based systems. This provides developers with additional flexibility when designing applications.\n\nFor additional detail, see the [Data Contract](explanation-platform-protocol-data-contract) explanation.\n\n## Document\n\nA document is an atomic entity used by the platform to store user-submitted data. It resembles the documents stored in a [document-oriented DB](https://en.wikipedia.org/wiki/Document-oriented_database) (e.g. [MongoDB](https://www.mongodb.com/document-databases)). All documents must follow some specific rules that are defined by a generic document schema. Additionally, documents are always related to a particular application, so they must comply with the rules defined by the application\u2019s data contract. Documents are submitted to the platform API ([DAPI](explanation-dapi)) by clients during their use of the application.\n\nFor additional detail, see the [Document](explanation-platform-protocol-document) explanation.\n\n## State Transition\n\nA state transition represents a change made by a user to the application and platform states. It consists of:\n\n- Either: \n  - An array of documents, or\n  - One data contract\n- The contract ID of the application to which the change is made\n- The user's signature.\n\nThe user signature is made for the binary representation of the state transition using a private key associated with an [identity](explanation-identity). A state transition is constructed by a client-side library when the user creates documents and submits them to the platform API.\n\nFor additional detail, see the [State Transition](explanation-platform-protocol-state-transition) explanation.\n\n# Versions\n\n| Version | Information                                                                                                                                                                                                                                                                   |\n| :------ | :---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| 0.24    | See details in the [GitHub release](https://github.com/dashpay/platform/releases/tag/v0.24.0).                                                                                                                                                                                |\n| 0.23    | See details in the [GitHub release](https://github.com/dashevo/platform/releases/tag/v0.23.0).                                                                                                                                                                                |\n| 0.22    | See details in the [GitHub release](https://github.com/dashevo/platform/releases/tag/v0.22.0).                                                                                                                                                                                |\n| 0.21    | See details in the [GitHub release](https://github.com/dashevo/js-dpp/releases/tag/v0.21.0).                                                                                                                                                                                  |\n| 0.20    | This release updated to a newer version of JSON Schema (2020-12 spec) and also switched to a new regex module ([Re2](https://github.com/google/re2)) for improved security. See more details in the [GitHub release](https://github.com/dashevo/js-dpp/releases/tag/v0.20.0). |",
 "mdxAltBody": "",
 "order": 1,
 "isReference": false,
 "deprecated": false,
 "hidden": false,
 "sync_unique": "",
 "link_url": "",
 "link_external": false,
 "reusableContent": [],
 "previousSlug": "",
 "slugUpdatedAt": "2020-10-20T19:33:58.651Z",
 "revision": 8,
 "_id": "64f8a9df750465004742ad9e",
 "version": "64f8a9df750465004742ae1d",
 "updatedAt": "2023-07-11T15:21:22.784Z",
 "createdAt": "2019-12-03T13:47:42.588Z",
 "project": "5bda01cad172e200499a20a9",
 "user": "5b8400d7185d5e00036dcc3b",
 "category": "64f8a9df750465004742ad71",
 "__v": 5,
 "parentDoc": null,
 "pendingAlgoliaPublish": false,
 "isApi": false,
 "id": "64f8a9df750465004742ad9e",
 "body_html": "<h1 class=\"heading heading-1 header-scroll\" align=\"\"><div class=\"heading-anchor anchor waypoint\" id=\"overview\"></div><div class=\"heading-text\"><div id=\"section-overview\" class=\"heading-anchor_backwardsCompatibility\"></div>Overview</div><a aria-label=\"Skip link to Overview\" class=\"heading-anchor-icon fa fa-anchor\" href=\"#overview\"></a></h1>\n<p>To ensure the consistency and integrity of data stored on Layer 2, all data is governed by the Dash Platform Protocol (DPP). Dash Platform Protocol describes serialization and validation rules for the platform&#x27;s 3 core data structures: data contracts, documents, and state transitions. Each of these structures are briefly described below.</p>\n<h1 class=\"heading heading-1 header-scroll\" align=\"\"><div class=\"heading-anchor anchor waypoint\" id=\"structure-descriptions\"></div><div class=\"heading-text\"><div id=\"section-structure-descriptions\" class=\"heading-anchor_backwardsCompatibility\"></div>Structure Descriptions</div><a aria-label=\"Skip link to Structure Descriptions\" class=\"heading-anchor-icon fa fa-anchor\" href=\"#structure-descriptions\"></a></h1>\n<h2 class=\"heading heading-2 header-scroll\" align=\"\"><div class=\"heading-anchor anchor waypoint\" id=\"data-contract\"></div><div class=\"heading-text\"><div id=\"section-data-contract\" class=\"heading-anchor_backwardsCompatibility\"></div>Data Contract</div><a aria-label=\"Skip link to Data Contract\" class=\"heading-anchor-icon fa fa-anchor\" href=\"#data-contract\"></a></h2>\n<p>A data contract is a database schema that a developer needs to register with the platform in order to start using any decentralized storage functionality. Data contracts are described using the JSON Schema language and must follow some basic rules as described in the platform protocol repository. Contracts are serialized to binary form using <a href=\"https://cbor.io/\" target=\"\" title=\"\">CBOR</a>.</p>\n<blockquote class=\"callout callout_info\" theme=\"\ud83d\udcd8\"><h2 class=\"callout-heading\"><span class=\"callout-icon\">\ud83d\udcd8</span><p>Contract updates</p></h2><p>Dash&#x27;s data contracts support backwards-compatible modifications after their initial deployment unlike many smart contract based systems. This provides developers with additional flexibility when designing applications.</p></blockquote>\n<p>For additional detail, see the <a href=\"explanation-platform-protocol-data-contract\" target=\"\" title=\"\">Data Contract</a> explanation.</p>\n<h2 class=\"heading heading-2 header-scroll\" align=\"\"><div class=\"heading-anchor anchor waypoint\" id=\"document\"></div><div class=\"heading-text\"><div id=\"section-document\" class=\"heading-anchor_backwardsCompatibility\"></div>Document</div><a aria-label=\"Skip link to Document\" class=\"heading-anchor-icon fa fa-anchor\" href=\"#document\"></a></h2>\n<p>A document is an atomic entity used by the platform to store user-submitted data. It resembles the documents stored in a <a href=\"https://en.wikipedia.org/wiki/Document-oriented_database\" target=\"\" title=\"\">document-oriented DB</a> (e.g. <a href=\"https://www.mongodb.com/document-databases\" target=\"\" title=\"\">MongoDB</a>). All documents must follow some specific rules that are defined by a generic document schema. Additionally, documents are always related to a particular application, so they must comply with the rules defined by the application\u2019s data contract. Documents are submitted to the platform API (<a href=\"explanation-dapi\" target=\"\" title=\"\">DAPI</a>) by clients during their use of the application.</p>\n<p>For additional detail, see the <a href=\"explanation-platform-protocol-document\" target=\"\" title=\"\">Document</a> explanation.</p>\n<h2 class=\"heading heading-2 header-scroll\" align=\"\"><div class=\"heading-anchor anchor waypoint\" id=\"state-transition\"></div><div class=\"heading-text\"><div id=\"section-state-transition\" class=\"heading-anchor_backwardsCompatibility\"></div>State Transition</div><a aria-label=\"Skip link to State Transition\" class=\"heading-anchor-icon fa fa-anchor\" href=\"#state-transition\"></a></h2>\n<p>A state transition represents a change made by a user to the application and platform states. It consists of:</p>\n<ul>\n<li>Either: \n<ul>\n<li>An array of documents, or</li>\n<li>One data contract</li>\n</ul>\n</li>\n<li>The contract ID of the application to which the change is made</li>\n<li>The user&#x27;s signature.</li>\n</ul>\n<p>The user signature is made for the binary representation of the state transition using a private key associated with an <a href=\"explanation-identity\" target=\"\" title=\"\">identity</a>. A state transition is constructed by a client-side library when the user creates documents and submits them to the platform API.</p>\n<p>For additional detail, see the <a href=\"explanation-platform-protocol-state-transition\" target=\"\" title=\"\">State Transition</a> explanation.</p>\n<h1 class=\"heading heading-1 header-scroll\" align=\"\"><div class=\"heading-anchor anchor waypoint\" id=\"versions\"></div><div class=\"heading-text\"><div id=\"section-versions\" class=\"heading-anchor_backwardsCompatibility\"></div>Versions</div><a aria-label=\"Skip link to Versions\" class=\"heading-anchor-icon fa fa-anchor\" href=\"#versions\"></a></h1>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n<div class=\"rdmd-table\"><div class=\"rdmd-table-inner\"><table><thead><tr><th style=\"text-align:left\">Version</th><th style=\"text-align:left\">Information</th></tr></thead><tbody><tr><td style=\"text-align:left\">0.24</td><td style=\"text-align:left\">See details in the <a href=\"https://github.com/dashpay/platform/releases/tag/v0.24.0\" target=\"\" title=\"\">GitHub release</a>.</td></tr><tr><td style=\"text-align:left\">0.23</td><td style=\"text-align:left\">See details in the <a href=\"https://github.com/dashevo/platform/releases/tag/v0.23.0\" target=\"\" title=\"\">GitHub release</a>.</td></tr><tr><td style=\"text-align:left\">0.22</td><td style=\"text-align:left\">See details in the <a href=\"https://github.com/dashevo/platform/releases/tag/v0.22.0\" target=\"\" title=\"\">GitHub release</a>.</td></tr><tr><td style=\"text-align:left\">0.21</td><td style=\"text-align:left\">See details in the <a href=\"https://github.com/dashevo/js-dpp/releases/tag/v0.21.0\" target=\"\" title=\"\">GitHub release</a>.</td></tr><tr><td style=\"text-align:left\">0.20</td><td style=\"text-align:left\">This release updated to a newer version of JSON Schema (2020-12 spec) and also switched to a new regex module (<a href=\"https://github.com/google/re2\" target=\"\" title=\"\">Re2</a>) for improved security. See more details in the <a href=\"https://github.com/dashevo/js-dpp/releases/tag/v0.20.0\" target=\"\" title=\"\">GitHub release</a>.</td></tr></tbody></table></div></div>"
}