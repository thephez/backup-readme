{
 "metadata": {
  "image": [],
  "title": "",
  "description": ""
 },
 "api": {
  "method": "get",
  "url": "",
  "auth": "required",
  "results": {
   "codes": [
    {
     "status": 200,
     "language": "json",
     "code": "{}",
     "name": ""
    },
    {
     "status": 400,
     "language": "json",
     "code": "{}",
     "name": ""
    }
   ]
  },
  "params": []
 },
 "next": {
  "description": "",
  "pages": []
 },
 "algolia": {
  "recordCount": 3,
  "publishPending": false,
  "updatedAt": "2023-09-06T16:36:28.980Z"
 },
 "title": "Quickstart",
 "icon": "",
 "updates": [],
 "type": "basic",
 "slug": "introduction-quickstart",
 "excerpt": "Get up and running quickly with a Client library",
 "body": "The quickest way to get started with Dash Platform is by completing these two simple steps:\n\n1. Install the Dash SDK to interact with the Dash Platform decentralized API (DAPI)\n2. Verify a successful API response to a DAPI test request\n\n# 1. Install the Dash SDK\n\nThe quickest way to start developing on Dash Platform is to use the Dash SDK. Currently, the SDK is available in Javascript, Objective-C, and Java. After navigating to your project directory, you can install the Javascript SDK by issuing the following command in your terminal or command line:\n\n```shell\nnpm install dash\n```\n\nRequire the Dash SDK by adding the following code to your project\u2019s index:\n\n** add code to project index **\n\nSee the library source on [GitHub](https://github.com/dashevo/platform/tree/master/packages/js-dash-sdk).\n\n# 2. Verify a successful API response\n\nTo confirm proper installation, use `dash` to send a request to DAPI and check for a valid response. The example shown here requests the current height of the Dash blockchain:\n\n```javascript\nconst DAPIClient = require('@dashevo/dapi-client');\n\nvar client = new DAPIClient();\n\nvar blockHeight = client.getBestBlockHeight();\nblockHeight.then(height => {\n  console.log(`Best block height: ${height}`);\n});\n```\n\nA live example of this code can be run [here on Repl.it](https://repl.it/@thephez/DAPI-Client-Basic-Example)\n\n> \ud83d\udea7 DAPI-Client Seed node(s)\n>\n> If using DAPI-Client in a devnet or testnet setting, at least one seed node must be provided in the constructor. For example,\n> ```js\n> var client = new DAPIClient({\n>   seeds: [{\n>     service: 'example.com:20001',\n>     port: 3000\n>   }],\n> });\n> ```\n\nOnce you have verified dapi-client requests are working, you can move on to exploring the available endpoints.",
 "order": 3,
 "isReference": false,
 "deprecated": false,
 "hidden": true,
 "sync_unique": "",
 "link_url": "",
 "link_external": false,
 "previousSlug": "",
 "slugUpdatedAt": "2021-11-30T16:58:50.872Z",
 "revision": 5,
 "_id": "64f8a9df750465004742ad7a",
 "version": "64f8a9df750465004742ae1d",
 "project": "5bda01cad172e200499a20a9",
 "category": "64f8a9df750465004742ad6c",
 "user": "5b8400d7185d5e00036dcc3b",
 "createdAt": "2019-01-07T15:46:42.687Z",
 "__v": 6,
 "parentDoc": null,
 "updatedAt": "2023-01-18T18:30:41.837Z",
 "pendingAlgoliaPublish": false,
 "isApi": false,
 "id": "64f8a9df750465004742ad7a",
 "body_html": "<div class=\"magic-block-textarea\"><p>The quickest way to get started with Dash Platform is by completing these two simple steps:</p>\n<ol>\n<li  value=\"1\">Install the Dash SDK to interact with the Dash Platform decentralized API (DAPI)</li><li  value=\"2\">Verify a successful API response to a DAPI test request</li></ol>\n<h1 class=\"header-scroll\"><div class=\"anchor waypoint\" id=\"section-1-install-the-dash-sdk\"></div>1. Install the Dash SDK<a class=\"fa fa-anchor\" href=\"#section-1-install-the-dash-sdk\"></a></h1>\n<p>The quickest way to start developing on Dash Platform is to use the Dash SDK. Currently, the SDK is available in Javascript, Objective-C, and Java. After navigating to your project directory, you can install the Javascript SDK by issuing the following command in your terminal or command line:</p>\n<pre><code class=\"lang-shell\"><span class='cm-s-neo'><span class=\"cm-builtin\">npm</span> install dash</span>\n</code></pre>\n<p>Require the Dash SDK by adding the following code to your project\u2019s index:</p>\n<p><strong> add code to project index </strong></p>\n<p>See the library source on <a href=\"https://github.com/dashevo/platform/tree/master/packages/js-dash-sdk\">GitHub</a>.</p>\n<h1 class=\"header-scroll\"><div class=\"anchor waypoint\" id=\"section-2-verify-a-successful-api-response\"></div>2. Verify a successful API response<a class=\"fa fa-anchor\" href=\"#section-2-verify-a-successful-api-response\"></a></h1>\n<p>To confirm proper installation, use <code>dash</code> to send a request to DAPI and check for a valid response. The example shown here requests the current height of the Dash blockchain:</p>\n<pre><code class=\"lang-javascript\"><span class='cm-s-neo'><span class=\"cm-keyword\">const</span> <span class=\"cm-def\">DAPIClient</span> <span class=\"cm-operator\">=</span> <span class=\"cm-variable\">require</span>(<span class=\"cm-string\">'@dashevo&#47;dapi-client'</span>);\n\n<span class=\"cm-keyword\">var</span> <span class=\"cm-def\">client</span> <span class=\"cm-operator\">=</span> <span class=\"cm-keyword\">new</span> <span class=\"cm-variable\">DAPIClient</span>();\n\n<span class=\"cm-keyword\">var</span> <span class=\"cm-def\">blockHeight</span> <span class=\"cm-operator\">=</span> <span class=\"cm-variable\">client</span>.<span class=\"cm-property\">getBestBlockHeight</span>();\n<span class=\"cm-variable\">blockHeight</span>.<span class=\"cm-property\">then</span>(<span class=\"cm-def\">height</span> <span class=\"cm-operator\">=&gt;</span> {\n  <span class=\"cm-variable\">console</span>.<span class=\"cm-property\">log</span>(<span class=\"cm-string-2\">`Best block height: ${</span><span class=\"cm-variable-2\">height</span><span class=\"cm-string-2\">}`</span>);\n});</span>\n</code></pre>\n<p>A live example of this code can be run <a href=\"https://repl.it/@thephez/DAPI-Client-Basic-Example\">here on Repl.it</a></p>\n<blockquote>\n<p>\ud83d\udea7 DAPI-Client Seed node(s)</p>\n<p>If using DAPI-Client in a devnet or testnet setting, at least one seed node must be provided in the constructor. For example,</p>\n<pre><code class=\"lang-js\"><span class='cm-s-neo'><span class=\"cm-keyword\">var</span> <span class=\"cm-def\">client</span> <span class=\"cm-operator\">=</span> <span class=\"cm-keyword\">new</span> <span class=\"cm-variable\">DAPIClient</span>({\n  <span class=\"cm-property\">seeds</span>: [{\n    <span class=\"cm-property\">service</span>: <span class=\"cm-string\">'example.com:20001'</span>,\n    <span class=\"cm-property\">port</span>: <span class=\"cm-number\">3000</span>\n  }],\n});</span>\n</code></pre>\n</blockquote>\n<p>Once you have verified dapi-client requests are working, you can move on to exploring the available endpoints.</p>\n\n</div>"
}