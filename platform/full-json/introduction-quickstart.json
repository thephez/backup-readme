{
 "metadata": {
  "image": [],
  "title": "",
  "description": "",
  "keywords": "",
  "robots": "index"
 },
 "api": {
  "method": "get",
  "url": "",
  "auth": "required",
  "results": {
   "codes": [
    {
     "status": 200,
     "language": "json",
     "code": "{}",
     "name": ""
    },
    {
     "status": 400,
     "language": "json",
     "code": "{}",
     "name": ""
    }
   ]
  },
  "params": []
 },
 "next": {
  "description": "",
  "pages": []
 },
 "algolia": {
  "recordCount": 3,
  "publishPending": false,
  "translationFailure": false,
  "updatedAt": "2023-09-06T16:36:28.980Z"
 },
 "title": "Quickstart",
 "icon": "",
 "updates": [],
 "type": "basic",
 "slug": "introduction-quickstart",
 "excerpt": "Get up and running quickly with a Client library",
 "body": "The quickest way to get started with Dash Platform is by completing these two simple steps:\n\n1. Install the Dash SDK to interact with the Dash Platform decentralized API (DAPI)\n2. Verify a successful API response to a DAPI test request\n\n# 1. Install the Dash SDK\n\nThe quickest way to start developing on Dash Platform is to use the Dash SDK. Currently, the SDK is available in Javascript, Objective-C, and Java. After navigating to your project directory, you can install the Javascript SDK by issuing the following command in your terminal or command line:\n\n```shell\nnpm install dash\n```\n\nRequire the Dash SDK by adding the following code to your project\u2019s index:\n\n** add code to project index **\n\nSee the library source on [GitHub](https://github.com/dashevo/platform/tree/master/packages/js-dash-sdk).\n\n# 2. Verify a successful API response\n\nTo confirm proper installation, use `dash` to send a request to DAPI and check for a valid response. The example shown here requests the current height of the Dash blockchain:\n\n```javascript\nconst DAPIClient = require('@dashevo/dapi-client');\n\nvar client = new DAPIClient();\n\nvar blockHeight = client.getBestBlockHeight();\nblockHeight.then(height => {\n  console.log(`Best block height: ${height}`);\n});\n```\n\nA live example of this code can be run [here on Repl.it](https://repl.it/@thephez/DAPI-Client-Basic-Example)\n\n> \ud83d\udea7 DAPI-Client Seed node(s)\n>\n> If using DAPI-Client in a devnet or testnet setting, at least one seed node must be provided in the constructor. For example,\n> ```js\n> var client = new DAPIClient({\n>   seeds: [{\n>     service: 'example.com:20001',\n>     port: 3000\n>   }],\n> });\n> ```\n\nOnce you have verified dapi-client requests are working, you can move on to exploring the available endpoints.",
 "mdxAltBody": "",
 "order": 3,
 "isReference": false,
 "deprecated": false,
 "hidden": true,
 "sync_unique": "",
 "link_url": "",
 "link_external": false,
 "reusableContent": [],
 "previousSlug": "",
 "slugUpdatedAt": "2021-11-30T16:58:50.872Z",
 "revision": 5,
 "_id": "64f8a9df750465004742ad7a",
 "version": "64f8a9df750465004742ae1d",
 "project": "5bda01cad172e200499a20a9",
 "category": "64f8a9df750465004742ad6c",
 "user": "5b8400d7185d5e00036dcc3b",
 "createdAt": "2019-01-07T15:46:42.687Z",
 "__v": 6,
 "parentDoc": null,
 "updatedAt": "2023-01-18T18:30:41.837Z",
 "pendingAlgoliaPublish": false,
 "isApi": false,
 "id": "64f8a9df750465004742ad7a",
 "body_html": "<p>The quickest way to get started with Dash Platform is by completing these two simple steps:</p>\n<ol>\n<li>Install the Dash SDK to interact with the Dash Platform decentralized API (DAPI)</li>\n<li>Verify a successful API response to a DAPI test request</li>\n</ol>\n<h1 class=\"heading heading-1 header-scroll\" align=\"\"><div class=\"heading-anchor anchor waypoint\" id=\"1-install-the-dash-sdk\"></div><div class=\"heading-text\"><div id=\"section-1-install-the-dash-sdk\" class=\"heading-anchor_backwardsCompatibility\"></div>1. Install the Dash SDK</div><a aria-label=\"Skip link to 1. Install the Dash SDK\" class=\"heading-anchor-icon fa fa-anchor\" href=\"#1-install-the-dash-sdk\"></a></h1>\n<p>The quickest way to start developing on Dash Platform is to use the Dash SDK. Currently, the SDK is available in Javascript, Objective-C, and Java. After navigating to your project directory, you can install the Javascript SDK by issuing the following command in your terminal or command line:</p>\n<div class=\"CodeTabs CodeTabs_initial theme-light\"><div class=\"CodeTabs-toolbar\" role=\"tablist\"><button aria-selected=\"true\" class=\"CodeTabs_active\" role=\"tab\" type=\"button\">Shell</button></div><div class=\"CodeTabs-inner\" role=\"tabpanel\"><pre><button aria-label=\"Copy Code\" class=\"rdmd-code-copy fa\"></button><code class=\"rdmd-code lang-shell theme-light\" data-lang=\"shell\" name=\"\" tabindex=\"0\">npm install dash\n</code></pre></div></div>\n<p>Require the Dash SDK by adding the following code to your project\u2019s index:</p>\n<p><strong> add code to project index </strong></p>\n<p>See the library source on <a href=\"https://github.com/dashevo/platform/tree/master/packages/js-dash-sdk\" target=\"\" title=\"\">GitHub</a>.</p>\n<h1 class=\"heading heading-1 header-scroll\" align=\"\"><div class=\"heading-anchor anchor waypoint\" id=\"2-verify-a-successful-api-response\"></div><div class=\"heading-text\"><div id=\"section-2-verify-a-successful-api-response\" class=\"heading-anchor_backwardsCompatibility\"></div>2. Verify a successful API response</div><a aria-label=\"Skip link to 2. Verify a successful API response\" class=\"heading-anchor-icon fa fa-anchor\" href=\"#2-verify-a-successful-api-response\"></a></h1>\n<p>To confirm proper installation, use <button aria-label=\"Copy Code\" class=\"rdmd-code-copy fa\"></button><code class=\"rdmd-code lang- theme-light\" data-lang=\"\" name=\"\" tabindex=\"0\">dash</code> to send a request to DAPI and check for a valid response. The example shown here requests the current height of the Dash blockchain:</p>\n<div class=\"CodeTabs CodeTabs_initial theme-light\"><div class=\"CodeTabs-toolbar\" role=\"tablist\"><button aria-selected=\"true\" class=\"CodeTabs_active\" role=\"tab\" type=\"button\">JavaScript</button></div><div class=\"CodeTabs-inner\" role=\"tabpanel\"><pre><button aria-label=\"Copy Code\" class=\"rdmd-code-copy fa\"></button><code class=\"rdmd-code lang-javascript theme-light\" data-lang=\"javascript\" name=\"\" tabindex=\"0\">const DAPIClient = require(&#x27;@dashevo/dapi-client&#x27;);\n\nvar client = new DAPIClient();\n\nvar blockHeight = client.getBestBlockHeight();\nblockHeight.then(height =&gt; {\n  console.log(`Best block height: ${height}`);\n});\n</code></pre></div></div>\n<p>A live example of this code can be run <a href=\"https://repl.it/@thephez/DAPI-Client-Basic-Example\" target=\"\" title=\"\">here on Repl.it</a></p>\n<blockquote class=\"callout callout_warn\" theme=\"\ud83d\udea7\"><h2 class=\"callout-heading\"><span class=\"callout-icon\">\ud83d\udea7</span><p>DAPI-Client Seed node(s)</p></h2><p>If using DAPI-Client in a devnet or testnet setting, at least one seed node must be provided in the constructor. For example,</p><div class=\"CodeTabs CodeTabs_initial theme-light\"><div class=\"CodeTabs-toolbar\" role=\"tablist\"><button aria-selected=\"true\" class=\"CodeTabs_active\" role=\"tab\" type=\"button\">JavaScript</button></div><div class=\"CodeTabs-inner\" role=\"tabpanel\"><pre><button aria-label=\"Copy Code\" class=\"rdmd-code-copy fa\"></button><code class=\"rdmd-code lang-js theme-light\" data-lang=\"js\" name=\"\" tabindex=\"0\">var client = new DAPIClient({\n  seeds: [{\n    service: &#x27;example.com:20001&#x27;,\n    port: 3000\n  }],\n});\n</code></pre></div></div></blockquote>\n<p>Once you have verified dapi-client requests are working, you can move on to exploring the available endpoints.</p>"
}