{
 "metadata": {
  "image": [],
  "title": "",
  "description": "",
  "keywords": "",
  "robots": "index"
 },
 "api": {
  "method": "get",
  "url": "",
  "auth": "required",
  "results": {
   "codes": [
    {
     "name": "",
     "code": "{}",
     "language": "json",
     "status": 200
    },
    {
     "name": "",
     "code": "{}",
     "language": "json",
     "status": 400
    }
   ]
  },
  "params": []
 },
 "next": {
  "description": "",
  "pages": []
 },
 "algolia": {
  "recordCount": 20,
  "publishPending": false,
  "translationFailure": false,
  "updatedAt": "2023-09-06T16:36:42.776Z"
 },
 "title": "Identity",
 "icon": "",
 "updates": [],
 "type": "basic",
 "slug": "platform-protocol-reference-identity",
 "excerpt": "",
 "body": "# Identity Overview\n\nIdentities are a low-level construct that provide the foundation for user-facing functionality on the platform. An identity is a public key (or set of public keys) recorded on the platform chain that can be used to prove ownership of data. Please see the [Identity DIP](https://github.com/dashpay/dips/blob/master/dip-0011.md) for additional information.\n\nIdentities consist of three components that are described in further detail in the following sections:\n\n| Field           | Type           | Description                                 |\n| --------------- | -------------- | ------------------------------------------- |\n| protocolVersion | integer        | The protocol version                        |\n| id              | array of bytes | The identity id (32 bytes)                  |\n| publicKeys      | array of keys  | Public key(s) associated with the identity  |\n| balance         | integer        | Credit balance associated with the identity |\n| revision        | integer        | Identity update revision                    |\n\nEach identity must comply with this JSON-Schema definition established in [rs-dpp](https://github.com/dashpay/platform/blob/v0.24.5/packages/rs-dpp/src/schema/identity/identity.json):\n\n```json\n{\n  \"$schema\": \"https://json-schema.org/draft/2020-12/schema\",\n  \"type\": \"object\",\n  \"properties\": {\n    \"protocolVersion\": {\n      \"type\": \"integer\",\n      \"$comment\": \"Maximum is the latest protocol version\"\n    },\n    \"id\": {\n      \"type\": \"array\",\n      \"byteArray\": true,\n      \"minItems\": 32,\n      \"maxItems\": 32,\n      \"contentMediaType\": \"application/x.dash.dpp.identifier\"\n    },\n    \"publicKeys\": {\n      \"type\": \"array\",\n      \"minItems\": 1,\n      \"maxItems\": 32,\n      \"uniqueItems\": true\n    },\n    \"balance\": {\n      \"type\": \"integer\",\n      \"minimum\": 0\n    },\n    \"revision\": {\n      \"type\": \"integer\",\n      \"minimum\": 0,\n      \"description\": \"Identity update revision\"\n  }\n},\n  \"required\": [\n    \"protocolVersion\",\n    \"id\",\n    \"publicKeys\",\n    \"balance\",\n    \"revision\"\n  ]\n}\n```\n\n**Example Identity**\n\n```json\n{\n  \"protocolVersion\":1,\n  \"id\":\"6YfP6tT9AK8HPVXMK7CQrhpc8VMg7frjEnXinSPvUmZC\",\n  \"publicKeys\":[\n    {\n      \"id\":0,\n      \"type\":0,\n      \"purpose\":0,\n      \"securityLevel\":0,\n      \"data\":\"AkWRfl3DJiyyy6YPUDQnNx5KERRnR8CoTiFUvfdaYSDS\",\n      \"readOnly\":false\n    }\n  ],\n  \"balance\":0,\n  \"revision\":0\n}\n```\n\n## Identity id\n\nThe identity `id` is calculated by Base58 encoding the double sha256 hash of the [outpoint](https://docs.dash.org/projects/core/en/stable/docs/resources/glossary.html#outpoint) used to fund the identity creation.\n\n`id = base58(sha256(sha256(<identity create funding output>)))`\n\n**Note:** The identity `id` uses the Dash Platform specific `application/x.dash.dpp.identifier` content media type. For additional information, please refer to the [js-dpp PR 252](https://github.com/dashevo/js-dpp/pull/252) that introduced it and [identifier.rs](https://github.com/dashpay/platform/blob/v0.24.5/packages/rs-platform-value/src/types/identifier.rs).\n\n## Identity publicKeys\n\nThe identity `publicKeys` array stores information regarding each public key associated with the identity. Multiple identities may use the same public key.\n\n**Note:** Since v0.23, each identity must have at least two public keys: a primary key (security level `0`) that is only used when updating the identity and an additional one (security level `2`) used to sign state transitions.\n\nEach item in the `publicKeys` array consists of an object containing:\n\n| Field         | Type           | Description                                                                                                                                                                     |\n| ------------- | -------------- | ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| id            | integer        | The key id (all public keys must be unique)                                                                                                                                     |\n| type          | integer        | Type of key (default: 0 - ECDSA)                                                                                                                                                |\n| data          | array of bytes | Public key (0 - ECDSA: 33 bytes, 1 - BLS: 48 bytes, 2 - ECDSA Hash160: 20 bytes, 3 - [BIP13](https://github.com/bitcoin/bips/blob/master/bip-0013.mediawiki) Hash160: 20 bytes) |\n| purpose       | integer        | Public key purpose (0 - Authentication, 1 - Encryption, 2 - Decryption, 3 - Withdraw)                                                                                           |\n| securityLevel | integer        | Public key security level (0 - Master, 1 - Critical, 2 - High, 3 - Medium)                                                                                                      |\n| readonly      | boolean        | Identity public key can't be modified with `readOnly` set to `true`. This can\u2019t be changed after adding a key.                                                                  |\n| disabledAt    | integer        | Timestamp indicating that the key was disabled at a specified time                                                                                                              |\n\nKeys for some purposes must meet certain [security level criteria](https://github.com/dashpay/platform/blob/v0.24.5/packages/rs-dpp/src/identity/identity_public_key/security_level.rs#L62-L77) as detailed below:\n\n| Key Purpose    | Allowed Security Level(s) |\n| -------------- | ------------------------- |\n| Authentication | Any security level        |\n| Encryption     | Medium                    |\n| Decryption     | Medium                    |\n| Withdraw       | Critical                  |\n\nEach identity public key must comply with this JSON-Schema definition established in [rs-dpp](https://github.com/dashpay/platform/blob/v0.24.5/packages/rs-dpp/src/schema/identity/publicKey.json):\n\n```json\n{\n  \"$schema\": \"https://json-schema.org/draft/2020-12/schema\",\n  \"type\": \"object\",\n  \"properties\": {\n    \"id\": {\n      \"type\": \"integer\",\n      \"minimum\": 0,\n      \"description\": \"Public key ID\",\n      \"$comment\": \"Must be unique for the identity. It can\u2019t be changed after adding a key. Included when signing state transitions to indicate which identity key was used to sign.\"\n    },\n    \"type\": {\n      \"type\": \"integer\",\n      \"enum\": [\n        0,\n        1,\n        2,\n        3\n      ],\n      \"description\": \"Public key type. 0 - ECDSA Secp256k1, 1 - BLS 12-381, 2 - ECDSA Secp256k1 Hash160, 3 - BIP 13 Hash160\",\n      \"$comment\": \"It can't be changed after adding a key\"\n    },\n    \"purpose\": {\n      \"type\": \"integer\",\n      \"enum\": [\n        0,\n        1,\n        2,\n        3\n      ],\n      \"description\": \"Public key purpose. 0 - Authentication, 1 - Encryption, 2 - Decryption, 3 - Withdraw\",\n      \"$comment\": \"It can't be changed after adding a key\"\n    },\n    \"securityLevel\": {\n      \"type\": \"integer\",\n      \"enum\": [\n        0,\n        1,\n        2,\n        3\n      ],\n      \"description\": \"Public key security level. 0 - Master, 1 - Critical, 2 - High, 3 - Medium\",\n      \"$comment\": \"It can't be changed after adding a key\"\n    },\n    \"data\": true,\n    \"readOnly\": {\n      \"type\": \"boolean\",\n      \"description\": \"Read only\",\n      \"$comment\": \"Identity public key can't be modified with readOnly set to true. It can\u2019t be changed after adding a key\"\n    },\n    \"disabledAt\": {\n      \"type\": \"integer\",\n      \"description\": \"Timestamp indicating that the key was disabled at a specified time\",\n      \"minimum\": 0\n    }\n  },\n  \"allOf\": [\n    {\n      \"if\": {\n        \"properties\": {\n          \"type\": {\n            \"const\": 0\n          }\n        }\n      },\n      \"then\": {\n        \"properties\": {\n          \"data\": {\n            \"type\": \"array\",\n            \"byteArray\": true,\n            \"minItems\": 33,\n            \"maxItems\": 33,\n            \"description\": \"Raw ECDSA public key\",\n            \"$comment\": \"It must be a valid key of the specified type and unique for the identity. It can\u2019t be changed after adding a key\"\n          }\n        }\n      }\n    },\n    {\n      \"if\": {\n        \"properties\": {\n          \"type\": {\n            \"const\": 1\n          }\n        }\n      },\n      \"then\": {\n        \"properties\": {\n          \"data\": {\n            \"type\": \"array\",\n            \"byteArray\": true,\n            \"minItems\": 48,\n            \"maxItems\": 48,\n            \"description\": \"Raw BLS public key\",\n            \"$comment\": \"It must be a valid key of the specified type and unique for the identity. It can\u2019t be changed after adding a key\"\n          }\n        }\n      }\n    },\n    {\n      \"if\": {\n        \"properties\": {\n          \"type\": {\n            \"const\": 2\n          }\n        }\n      },\n      \"then\": {\n        \"properties\": {\n          \"data\": {\n            \"type\": \"array\",\n            \"byteArray\": true,\n            \"minItems\": 20,\n            \"maxItems\": 20,\n            \"description\": \"ECDSA Secp256k1 public key Hash160\",\n            \"$comment\": \"It must be a valid key hash of the specified type and unique for the identity. It can\u2019t be changed after adding a key\"\n          }\n        }\n      }\n    },\n    {\n      \"if\": {\n        \"properties\": {\n          \"type\": {\n            \"const\": 3\n          }\n        }\n      },\n      \"then\": {\n        \"properties\": {\n          \"data\": {\n            \"type\": \"array\",\n            \"byteArray\": true,\n            \"minItems\": 20,\n            \"maxItems\": 20,\n            \"description\": \"BIP13 script public key\",\n            \"$comment\": \"It must be a valid script hash of the specified type and unique for the identity\"\n          }\n        }\n      }\n    }\n  ],\n  \"required\": [\n    \"id\",\n    \"type\",\n    \"data\",\n    \"purpose\",\n    \"securityLevel\"\n  ],\n  \"additionalProperties\": false\n}\n```\n\n### Public Key `id`\n\nEach public key in an identity's `publicKeys` array must be assigned a unique index number (`id`).\n\n### Public Key `type`\n\nThe `type` field indicates the algorithm used to derive the key.\n\n| Type | Description                                                                                           |\n| :--: | ----------------------------------------------------------------------------------------------------- |\n|   0  | ECDSA Secp256k1 (default)                                                                             |\n|   1  | BLS 12-381                                                                                            |\n|   2  | ECDSA Secp256k1 Hash160                                                                               |\n|   3  | [BIP13](https://github.com/bitcoin/bips/blob/master/bip-0013.mediawiki) pay-to-script-hash public key |\n\n### Public Key `data`\n\nThe `data` field contains the compressed public key.\n\n### Public Key `purpose`\n\nThe `purpose` field describes which operations are supported by the key. Please refer to [DIP11 - Identities](https://github.com/dashpay/dips/blob/master/dip-0011.md#keys) for additional information regarding this.\n\n| Type | Description    |\n| :--: | -------------- |\n|   0  | Authentication |\n|   1  | Encryption     |\n|   2  | Decryption     |\n|   3  | Withdraw       |\n\n### Public Key `securityLevel`\n\nThe `securityLevel` field indicates how securely the key should be stored by clients. Please refer to [DIP11 - Identities](https://github.com/dashpay/dips/blob/master/dip-0011.md#keys) for additional information regarding this.\n\n| Level | Description | Security Practice                                                                                                                                                                       |\n| :---: | ----------- | --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |\n|   0   | Master      | Should always require a user to authenticate when signing a transition. Can only be used to update an identity.                                                                         |\n|   1   | Critical    | Should always require a user to authenticate when signing a transition                                                                                                                  |\n|   2   | High        | Should be available as long as the user has authenticated at least once during a session. Typically used to sign state transitions, but cannot be used for identity update transitions. |\n|   3   | Medium      | Should not require user authentication but must require access to the client device                                                                                                     |\n\n### Public Key `readOnly`\n\nThe `readOnly` field indicates that the public key can't be modified if it is set to `true`. The  \nvalue of this field cannot be changed after adding the key.\n\n### Public Key `disabledAt`\n\nThe `disabledAt` field indicates that the key has been disabled. Its value equals the timestamp when the key was disabled.\n\n## Identity balance\n\nEach identity has a balance of credits established by value locked via a layer 1 lock transaction. This credit balance is used to pay the fees associated with state transitions.\n\n# Identity State Transition Details\n\nThere are three identity-related state transitions: [identity create](#identity-creation), [identity topup](#identity-topup), and [identity update](#identity-update). Details are provided in this section including information about [asset locking](#asset-lock) and [signing](#identity-state-transition-signing) required for these state transitions.\n\n## Identity Creation\n\nIdentities are created on the platform by submitting the identity information in an identity create state transition.\n\n| Field           | Type           | Description                                                                                         |\n| --------------- | -------------- | --------------------------------------------------------------------------------------------------- |\n| protocolVersion | integer        | The protocol version (currently `1`)                                                                |\n| type            | integer        | State transition type (`2` for identity create)                                                     |\n| assetLockProof  | object         | [Asset lock proof object](#asset-lock) proving the layer 1 locking transaction exists and is locked |\n| publicKeys      | array of keys  | [Public key(s)](#identity-publickeys) associated with the identity                                  |\n| signature       | array of bytes | Signature of state transition data by the single-use key from the asset lock (65 bytes)             |\n\nEach identity must comply with this JSON-Schema definition established in [rs-dpp](https://github.com/dashpay/platform/blob/v0.24.5/packages/rs-dpp/src/schema/identity/stateTransition/identityCreate.json):\n\n```json\n{\n  \"$schema\": \"https://json-schema.org/draft/2020-12/schema\",\n  \"type\": \"object\",\n  \"properties\": {\n    \"protocolVersion\": {\n      \"type\": \"integer\",\n      \"$comment\": \"Maximum is the latest protocol version\"\n    },\n    \"type\": {\n      \"type\": \"integer\",\n      \"const\": 2\n    },\n    \"assetLockProof\": {\n      \"type\": \"object\"\n    },\n    \"publicKeys\": {\n      \"type\": \"array\",\n      \"minItems\": 1,\n      \"maxItems\": 10,\n      \"uniqueItems\": true\n    },\n    \"signature\": {\n      \"type\": \"array\",\n      \"byteArray\": true,\n      \"minItems\": 65,\n      \"maxItems\": 65,\n      \"description\": \"Signature made by AssetLock one time ECDSA key\"\n    }\n  },\n  \"additionalProperties\": false,\n  \"required\": [\n    \"protocolVersion\",\n    \"type\",\n    \"assetLockProof\",\n    \"publicKeys\",\n    \"signature\"\n  ]\n}\n```\n\n**Example State Transition**\n\n```json\n{\n  \"protocolVersion\":1,\n  \"type\":2,\n  \"signature\":\"IBTTgge+/VDa/9+n2q3pb4tAqZYI48AX8X3H/uedRLH5dN8Ekh/sxRRQQS9LaOPwZSCVED6XIYD+vravF2dhYOE=\",\n  \"assetLockProof\":{\n    \"type\":0,\n    \"instantLock\":\"AQHDHQdekbFZJOQFEe1FnRjoDemL/oPF/v9IME/qphjt5gEAAAB/OlZB9p8vPzPE55MlegR7nwhXRpZC4d5sYnOIypNgzfdDRsW01v8UtlRoORokjoDJ9hA/XFMK65iYTrQ8AAAAGI4q8GxtK9LHOT1JipnIfwiiv8zW+C/sbokbMhi/BsEl51dpoeBQEUAYWT7KRiJ4Atx49zIrqsKvmU1mJQza0Y1YbBSS/b/IPO8StX04bItPpDuTp6zlh/G7YOGzlEoe\",\n    \"transaction\":\"0300000001c31d075e91b15924e40511ed459d18e80de98bfe83c5feff48304feaa618ede6010000006b483045022100dd0e4a6c25b1c7ed9aec2c93133f6de27b4c695a062f21f0aed1a2999fccf01c0220384aaf84cd5fd1c741fd1739f5c026a492abbfc18cfde296c6d90e98304f2f76012102fb9e87840f7e0a9b01f955d8eb4d1d2a52b32c9c43c751d7a348482c514ad222ffffffff021027000000000000166a14ea15af58c614b050a3b2e6bcc131fe0e7de37b9801710815000000001976a9140ccc680f945e964f7665f57c0108cba5ca77ed1388ac00000000\",\n    \"outputIndex\":0\n  },\n  \"publicKeys\":[\n    {\n      \"id\":0,\n      \"type\":0,\n      \"purpose\":0,\n      \"securityLevel\":0,\n      \"data\":\"AkWRfl3DJiyyy6YPUDQnNx5KERRnR8CoTiFUvfdaYSDS\",\n      \"readOnly\":false\n    }\n  ]\n}\n```\n\n## Identity TopUp\n\nIdentity credit balances are increased by submitting the topup information in an identity topup state transition.\n\n| Field           | Type           | Description                                                                                          |\n| --------------- | -------------- | ---------------------------------------------------------------------------------------------------- |\n| protocolVersion | integer        | The protocol version (currently `1`)                                                                 |\n| type            | integer        | State transition type (`3` for identity topup)                                                       |\n| assetLockProof  | object         | [Asset lock proof object](#asset-lock) proving the layer 1 locking transaction exists and is locked  |\n| identityId      | array of bytes | An [Identity ID](#identity-id) for the identity receiving the topup (can be any identity) (32 bytes) |\n| signature       | array of bytes | Signature of state transition data by the single-use key from the asset lock (65 bytes)              |\n\nEach identity must comply with this JSON-Schema definition established in [rs-dpp](https://github.com/dashpay/platform/blob/v0.24.5/packages/rs-dpp/src/schema/identity/stateTransition/identityTopUp.json):\n\n```json\n{\n  \"$schema\": \"https://json-schema.org/draft/2020-12/schema\",\n  \"type\": \"object\",\n  \"properties\": {\n    \"protocolVersion\": {\n      \"type\": \"integer\",\n      \"$comment\": \"Maximum is the latest protocol version\"\n    },\n    \"type\": {\n      \"type\": \"integer\",\n      \"const\": 3\n    },\n    \"assetLockProof\": {\n      \"type\": \"object\"\n    },\n    \"identityId\": {\n      \"type\": \"array\",\n      \"byteArray\": true,\n      \"minItems\": 32,\n      \"maxItems\": 32,\n      \"contentMediaType\": \"application/x.dash.dpp.identifier\"\n    },\n    \"signature\": {\n      \"type\": \"array\",\n      \"byteArray\": true,\n      \"minItems\": 65,\n      \"maxItems\": 65,\n      \"description\": \"Signature made by AssetLock one time ECDSA key\"\n    }\n  },\n  \"additionalProperties\": false,\n  \"required\": [\n    \"protocolVersion\",\n    \"type\",\n    \"assetLockProof\",\n    \"identityId\",\n    \"signature\"\n  ]\n}\n```\n\n**Example State Transition**\n\n```json\n{\n  \"protocolVersion\":1,\n  \"type\":3,\n  \"signature\":\"IEqOV4DsbVa+nPipva0UrT0z0ZwubwgP9UdlpwBwXbFSWb7Mxkwqzv1HoEDICJ8GtmUSVjp4Hr2x0cVWe7+yUGc=\",\n  \"identityId\":\"6YfP6tT9AK8HPVXMK7CQrhpc8VMg7frjEnXinSPvUmZC\",\n  \"assetLockProof\":{\n    \"type\":0,\n    \"instantLock\":\"AQF/OlZB9p8vPzPE55MlegR7nwhXRpZC4d5sYnOIypNgzQEAAAAm8edm9p8URNEE9PBo0lEzZ2s9nf4u1SV0MaZyB0JTRasiXu8QtTmfqZWjI3qVtOpUhGPu6r/2fV+0Ffi3AAAAhA77E0aScf+5PTYzgV5WR6VJ/EnjvXyAMmAcu222JyvA7M+5OoCzVF/IQs2IWaPOFsRl1n5C+dMxdvrxhpVLT8QfZJSl19wzybWrHbGRaHDw4iWHvfYdwyXN+vP8UwDz\",\n    \"transaction\":\"03000000017f3a5641f69f2f3f33c4e793257a047b9f0857469642e1de6c627388ca9360cd010000006b483045022100d8c383b15a3738d13b029605d242f041bea874cb4d0def1303ca7cdf76092bf102201b1d401ae9e8cdc5efc061249d2a967960dadce53c66e34d249c42049b48b26701210335b684aa510a9b54a3a4f79283e64482a323190045c239fae5ecb0450c78f965ffffffff02e803000000000000166a14f5383f51784bc4a27e2040bdd6cd9aae7fe6814d31690815000000001976a9144a0511ec3362b35983d0a101f0572dd26abce2ee88ac00000000\",\n    \"outputIndex\":0\n  }\n}\n```\n\n## Identity Update\n\nIdentities are updated on the platform by submitting the identity information in an identity update state transition. This state transition requires either a set of one or more new public keys to add to the identity or a list of existing keys to disable.\n\n| Field                | Type                 | Description                                                                                                              |\n| -------------------- | -------------------- | ------------------------------------------------------------------------------------------------------------------------ |\n| protocolVersion      | integer              | The protocol version (currently `1`)                                                                                     |\n| type                 | integer              | State transition type (`5` for identity update)                                                                          |\n| identityId           | array of bytes       | The identity id (32 bytes)                                                                                               |\n| signature            | array of bytes       | Signature of state transition data (65 bytes)                                                                            |\n| revision             | integer              | Identity update revision                                                                                                 |\n| publicKeysDisabledAt | integer              | (Optional) Timestamp when keys were disabled. Required if `disablePublicKeys` is present.                                |\n| addPublicKeys        | array of public keys | (Optional) Array of up to 10 new public keys to add to the identity. Required if adding keys.                            |\n| disablePublicKeys    | array of integers    | (Optional) Array of up to 10 existing identity public key ID(s) to disable for the identity. Required if disabling keys. |\n| signaturePublicKeyId | integer              | The ID of public key used to sign the state transition                                                                   |\n\nEach identity must comply with this JSON-Schema definition established in [rs-dpp](https://github.com/dashpay/platform/blob/v0.24.5/packages/rs-dpp/src/schema/identity/stateTransition/identityUpdate.json):\n\n```json\n{\n  \"$schema\": \"https://json-schema.org/draft/2020-12/schema\",\n  \"type\": \"object\",\n  \"properties\": {\n    \"protocolVersion\": {\n      \"type\": \"integer\",\n      \"$comment\": \"Maximum is the latest protocol version\"\n    },\n    \"type\": {\n      \"type\": \"integer\",\n      \"const\": 5\n    },\n    \"identityId\": {\n      \"type\": \"array\",\n      \"byteArray\": true,\n      \"minItems\": 32,\n      \"maxItems\": 32,\n      \"contentMediaType\": \"application/x.dash.dpp.identifier\"\n    },\n    \"signature\": {\n      \"type\": \"array\",\n      \"byteArray\": true,\n      \"minItems\": 65,\n      \"maxItems\": 96\n    },\n    \"revision\": {\n      \"type\": \"integer\",\n      \"minimum\": 0,\n      \"description\": \"Identity update revision\"\n    },\n    \"publicKeysDisabledAt\": {\n      \"type\": \"integer\",\n      \"minimum\": 0\n    },\n    \"addPublicKeys\": {\n      \"type\": \"array\",\n      \"minItems\": 1,\n      \"maxItems\": 10,\n      \"uniqueItems\": true\n    },\n    \"disablePublicKeys\": {\n      \"type\": \"array\",\n      \"minItems\": 1,\n      \"maxItems\": 10,\n      \"uniqueItems\": true,\n      \"items\": {\n        \"type\": \"integer\",\n        \"minimum\": 0\n      }\n    },\n    \"signaturePublicKeyId\": {\n      \"type\": \"integer\",\n      \"minimum\": 0\n    }\n  },\n  \"dependentRequired\" : {\n    \"disablePublicKeys\": [\"publicKeysDisabledAt\"],\n    \"publicKeysDisabledAt\": [\"disablePublicKeys\"]\n  },\n  \"anyOf\": [\n    {\n      \"type\": \"object\",\n      \"required\": [\"addPublicKeys\"],\n      \"properties\": {\n        \"addPublicKeys\": true\n      }\n    },\n    {\n      \"type\": \"object\",\n      \"required\": [\"disablePublicKeys\"],\n      \"properties\": {\n        \"disablePublicKeys\": true\n      }\n    }\n  ],\n  \"additionalProperties\": false,\n  \"required\": [\n    \"protocolVersion\",\n    \"type\",\n    \"identityId\",\n    \"signature\",\n    \"revision\",\n    \"signaturePublicKeyId\"\n  ]\n}\n```\n\n## Asset Lock\n\nThe [identity create](#identity-creation) and [identity topup](#identity-topup) state transitions both include an asset lock proof object. This object references the layer 1 lock transaction and includes proof that the transaction is locked.\n\nCurrently there are two types of asset lock proofs: InstantSend and ChainLock. Transactions almost always receive InstantSend locks, so the InstantSend asset lock proof is the predominate type.\n\n### InstantSend Asset Lock Proof\n\nThe InstantSend asset lock proof is used for transactions that have received an InstantSend lock.\n\n| Field       | Type           | Description                                                                                                                                  |\n| ----------- | -------------- | -------------------------------------------------------------------------------------------------------------------------------------------- |\n| type        | integer        | The asset lock proof type (`0` for InstantSend locks)                                                                                        |\n| instantLock | array of bytes | The InstantSend lock ([`islock`](https://docs.dash.org/projects/core/en/stable/docs/reference/p2p-network-instantsend-messages.html#islock)) |\n| transaction | array of bytes | The asset lock transaction                                                                                                                   |\n| outputIndex | integer        | Index of the transaction output to be used                                                                                                   |\n\nAsset locks using an InstantSend lock as proof must comply with this JSON-Schema definition established in [rs-dpp](https://github.com/dashpay/platform/blob/v0.24.5/packages/rs-dpp/src/schema/identity/stateTransition/assetLockProof/instantAssetLockProof.json):\n\n```json\n{\n  \"$schema\": \"https://json-schema.org/draft/2020-12/schema\",\n  \"type\": \"object\",\n  \"properties\": {\n    \"type\": {\n      \"type\": \"integer\",\n      \"const\": 0\n    },\n    \"instantLock\": {\n      \"type\": \"array\",\n      \"byteArray\": true,\n      \"minItems\": 165,\n      \"maxItems\": 100000\n    },\n    \"transaction\": {\n      \"type\": \"array\",\n      \"byteArray\": true,\n      \"minItems\": 1,\n      \"maxItems\": 100000\n    },\n    \"outputIndex\": {\n      \"type\": \"integer\",\n      \"minimum\": 0\n    }\n  },\n  \"additionalProperties\": false,\n  \"required\": [\n    \"type\",\n    \"instantLock\",\n    \"transaction\",\n    \"outputIndex\"\n  ]\n}\n```\n\n### ChainLock Asset Lock Proof\n\nThe ChainLock asset lock proof is used for transactions that have note received an InstantSend lock, but have been included in a block that has received a ChainLock.\n\n| Field                 | Type           | Description                                                                                                                       |\n| --------------------- | -------------- | --------------------------------------------------------------------------------------------------------------------------------- |\n| type                  | array of bytes | The type of asset lock proof (`1` for ChainLocks)                                                                                 |\n| coreChainLockedHeight | integer        | Height of the ChainLocked Core block containing the transaction                                                                   |\n| outPoint              | object         | The  [outpoint](https://docs.dash.org/projects/core/en/stable/docs/resources/glossary.html#outpoint) being used as the asset lock |\n\nAsset locks using a ChainLock as proof must comply with this JSON-Schema definition established in [rs-dpp](https://github.com/dashpay/platform/blob/v0.24.5/packages/rs-dpp/src/schema/identity/stateTransition/assetLockProof/chainAssetLockProof.json):\n\n```json\n{\n  \"$schema\": \"https://json-schema.org/draft/2020-12/schema\",\n  \"type\": \"object\",\n  \"properties\": {\n    \"type\": {\n      \"type\": \"integer\",\n      \"const\": 1\n    },\n    \"coreChainLockedHeight\":  {\n      \"type\": \"integer\",\n      \"minimum\": 1,\n      \"maximum\": 4294967295\n    },\n    \"outPoint\": {\n      \"type\": \"array\",\n      \"byteArray\": true,\n      \"minItems\": 36,\n      \"maxItems\": 36\n    }\n  },\n  \"additionalProperties\": false,\n  \"required\": [\n    \"type\",\n    \"coreChainLockedHeight\",\n    \"outPoint\"\n  ]\n}\n```\n\n## Identity State Transition Signing\n\n**Note:** The identity create and topup state transition signatures are unique in that they must be signed by the private key used in the layer 1 locking transaction. All other state transitions will be signed by a private key of the identity submitting them.\n\nThe process to sign an identity create state transition consists of the following steps:\n\n1. Canonical CBOR encode the state transition data - this include all ST fields except the `signature`\n2. Sign the encoded data with private key associated with a lock transaction public key\n3. Set the state transition `signature` to the value of the signature created in the previous step\n\n### Code snipits related to signing\n\n```rust\n/// From rs-dpp\n/// abstract_state_transition.rs\n/// Signs data with the private key\nfn sign_by_private_key(\n    &mut self,\n    private_key: &[u8],\n    key_type: KeyType,\n    bls: &impl BlsModule,\n) -> Result<(), ProtocolError> {\n    let data = self.to_buffer(true)?;\n    match key_type {\n        KeyType::BLS12_381 => self.set_signature(bls.sign(&data, private_key)?.into()),\n\n        // https://github.com/dashevo/platform/blob/9c8e6a3b6afbc330a6ab551a689de8ccd63f9120/packages/js-dpp/lib/stateTransition/AbstractStateTransition.js#L169\n        KeyType::ECDSA_SECP256K1 | KeyType::ECDSA_HASH160 => {\n            let signature = signer::sign(&data, private_key)?;\n            self.set_signature(signature.to_vec().into());\n        }\n\n        // the default behavior from\n        // https://github.com/dashevo/platform/blob/6b02b26e5cd3a7c877c5fdfe40c4a4385a8dda15/packages/js-dpp/lib/stateTransition/AbstractStateTransition.js#L187\n        // is to return the error for the BIP13_SCRIPT_HASH\n        KeyType::BIP13_SCRIPT_HASH => {\n            return Err(ProtocolError::InvalidIdentityPublicKeyTypeError(\n                InvalidIdentityPublicKeyTypeError::new(key_type),\n            ))\n        }\n    };\n    Ok(())\n}\n\n\n/// From rust-dashcore\n/// signer.rs\n/// sign and get the ECDSA signature\npub fn sign(data: &[u8], private_key: &[u8]) -> Result<[u8; 65], anyhow::Error> {\n    let data_hash = double_sha(data);\n    sign_hash(&data_hash, private_key)\n}\n\n/// signs the hash of data and get the ECDSA signature\npub fn sign_hash(data_hash: &[u8], private_key: &[u8]) -> Result<[u8; 65], anyhow::Error> {\n    let pk = SecretKey::from_slice(private_key)\n        .map_err(|e| anyhow!(\"Invalid ECDSA private key: {}\", e))?;\n\n    let secp = Secp256k1::new();\n    let msg = Message::from_slice(data_hash).map_err(anyhow::Error::msg)?;\n\n    let signature = secp\n        .sign_ecdsa_recoverable(&msg, &pk)\n        .to_compact_signature(true);\n    Ok(signature)\n}\n```",
 "mdxAltBody": "",
 "order": 1,
 "isReference": false,
 "deprecated": false,
 "hidden": false,
 "sync_unique": "",
 "link_url": "",
 "link_external": false,
 "reusableContent": [],
 "previousSlug": "reference-identity",
 "slugUpdatedAt": "2020-11-17T18:27:09.014Z",
 "revision": 3,
 "_id": "64f8a9df750465004742adbd",
 "pendingAlgoliaPublish": false,
 "createdAt": "2020-09-02T14:23:32.748Z",
 "updatedAt": "2023-06-05T18:21:04.326Z",
 "user": "5b8400d7185d5e00036dcc3b",
 "category": "64f8a9df750465004742ad73",
 "project": "5bda01cad172e200499a20a9",
 "version": "64f8a9df750465004742ae1d",
 "__v": 0,
 "parentDoc": null,
 "isApi": false,
 "id": "64f8a9df750465004742adbd",
 "body_html": "<h1 class=\"heading heading-1 header-scroll\" align=\"\"><div class=\"heading-anchor anchor waypoint\" id=\"identity-overview\"></div><div class=\"heading-text\"><div id=\"section-identity-overview\" class=\"heading-anchor_backwardsCompatibility\"></div>Identity Overview</div><a aria-label=\"Skip link to Identity Overview\" class=\"heading-anchor-icon fa fa-anchor\" href=\"#identity-overview\"></a></h1>\n<p>Identities are a low-level construct that provide the foundation for user-facing functionality on the platform. An identity is a public key (or set of public keys) recorded on the platform chain that can be used to prove ownership of data. Please see the <a href=\"https://github.com/dashpay/dips/blob/master/dip-0011.md\" target=\"\" title=\"\">Identity DIP</a> for additional information.</p>\n<p>Identities consist of three components that are described in further detail in the following sections:</p>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n<div class=\"rdmd-table\"><div class=\"rdmd-table-inner\"><table><thead><tr><th>Field</th><th>Type</th><th>Description</th></tr></thead><tbody><tr><td>protocolVersion</td><td>integer</td><td>The protocol version</td></tr><tr><td>id</td><td>array of bytes</td><td>The identity id (32 bytes)</td></tr><tr><td>publicKeys</td><td>array of keys</td><td>Public key(s) associated with the identity</td></tr><tr><td>balance</td><td>integer</td><td>Credit balance associated with the identity</td></tr><tr><td>revision</td><td>integer</td><td>Identity update revision</td></tr></tbody></table></div></div>\n<p>Each identity must comply with this JSON-Schema definition established in <a href=\"https://github.com/dashpay/platform/blob/v0.24.5/packages/rs-dpp/src/schema/identity/identity.json\" target=\"\" title=\"\">rs-dpp</a>:</p>\n<div class=\"CodeTabs CodeTabs_initial theme-light\"><div class=\"CodeTabs-toolbar\" role=\"tablist\"><button aria-selected=\"true\" class=\"CodeTabs_active\" role=\"tab\" type=\"button\">JSON</button></div><div class=\"CodeTabs-inner\" role=\"tabpanel\"><pre><button aria-label=\"Copy Code\" class=\"rdmd-code-copy fa\"></button><code class=\"rdmd-code lang-json theme-light\" data-lang=\"json\" name=\"\" tabindex=\"0\">{\n  &quot;$schema&quot;: &quot;https://json-schema.org/draft/2020-12/schema&quot;,\n  &quot;type&quot;: &quot;object&quot;,\n  &quot;properties&quot;: {\n    &quot;protocolVersion&quot;: {\n      &quot;type&quot;: &quot;integer&quot;,\n      &quot;$comment&quot;: &quot;Maximum is the latest protocol version&quot;\n    },\n    &quot;id&quot;: {\n      &quot;type&quot;: &quot;array&quot;,\n      &quot;byteArray&quot;: true,\n      &quot;minItems&quot;: 32,\n      &quot;maxItems&quot;: 32,\n      &quot;contentMediaType&quot;: &quot;application/x.dash.dpp.identifier&quot;\n    },\n    &quot;publicKeys&quot;: {\n      &quot;type&quot;: &quot;array&quot;,\n      &quot;minItems&quot;: 1,\n      &quot;maxItems&quot;: 32,\n      &quot;uniqueItems&quot;: true\n    },\n    &quot;balance&quot;: {\n      &quot;type&quot;: &quot;integer&quot;,\n      &quot;minimum&quot;: 0\n    },\n    &quot;revision&quot;: {\n      &quot;type&quot;: &quot;integer&quot;,\n      &quot;minimum&quot;: 0,\n      &quot;description&quot;: &quot;Identity update revision&quot;\n  }\n},\n  &quot;required&quot;: [\n    &quot;protocolVersion&quot;,\n    &quot;id&quot;,\n    &quot;publicKeys&quot;,\n    &quot;balance&quot;,\n    &quot;revision&quot;\n  ]\n}\n</code></pre></div></div>\n<p><strong>Example Identity</strong></p>\n<div class=\"CodeTabs CodeTabs_initial theme-light\"><div class=\"CodeTabs-toolbar\" role=\"tablist\"><button aria-selected=\"true\" class=\"CodeTabs_active\" role=\"tab\" type=\"button\">JSON</button></div><div class=\"CodeTabs-inner\" role=\"tabpanel\"><pre><button aria-label=\"Copy Code\" class=\"rdmd-code-copy fa\"></button><code class=\"rdmd-code lang-json theme-light\" data-lang=\"json\" name=\"\" tabindex=\"0\">{\n  &quot;protocolVersion&quot;:1,\n  &quot;id&quot;:&quot;6YfP6tT9AK8HPVXMK7CQrhpc8VMg7frjEnXinSPvUmZC&quot;,\n  &quot;publicKeys&quot;:[\n    {\n      &quot;id&quot;:0,\n      &quot;type&quot;:0,\n      &quot;purpose&quot;:0,\n      &quot;securityLevel&quot;:0,\n      &quot;data&quot;:&quot;AkWRfl3DJiyyy6YPUDQnNx5KERRnR8CoTiFUvfdaYSDS&quot;,\n      &quot;readOnly&quot;:false\n    }\n  ],\n  &quot;balance&quot;:0,\n  &quot;revision&quot;:0\n}\n</code></pre></div></div>\n<h2 class=\"heading heading-2 header-scroll\" align=\"\"><div class=\"heading-anchor anchor waypoint\" id=\"identity-id\"></div><div class=\"heading-text\"><div id=\"section-identity-id\" class=\"heading-anchor_backwardsCompatibility\"></div>Identity id</div><a aria-label=\"Skip link to Identity id\" class=\"heading-anchor-icon fa fa-anchor\" href=\"#identity-id\"></a></h2>\n<p>The identity <button aria-label=\"Copy Code\" class=\"rdmd-code-copy fa\"></button><code class=\"rdmd-code lang- theme-light\" data-lang=\"\" name=\"\" tabindex=\"0\">id</code> is calculated by Base58 encoding the double sha256 hash of the <a href=\"https://docs.dash.org/projects/core/en/stable/docs/resources/glossary.html#outpoint\" target=\"\" title=\"\">outpoint</a> used to fund the identity creation.</p>\n<p><button aria-label=\"Copy Code\" class=\"rdmd-code-copy fa\"></button><code class=\"rdmd-code lang- theme-light\" data-lang=\"\" name=\"\" tabindex=\"0\">id = base58(sha256(sha256(&lt;identity create funding output&gt;)))</code></p>\n<p><strong>Note:</strong> The identity <button aria-label=\"Copy Code\" class=\"rdmd-code-copy fa\"></button><code class=\"rdmd-code lang- theme-light\" data-lang=\"\" name=\"\" tabindex=\"0\">id</code> uses the Dash Platform specific <button aria-label=\"Copy Code\" class=\"rdmd-code-copy fa\"></button><code class=\"rdmd-code lang- theme-light\" data-lang=\"\" name=\"\" tabindex=\"0\">application/x.dash.dpp.identifier</code> content media type. For additional information, please refer to the <a href=\"https://github.com/dashevo/js-dpp/pull/252\" target=\"\" title=\"\">js-dpp PR 252</a> that introduced it and <a href=\"https://github.com/dashpay/platform/blob/v0.24.5/packages/rs-platform-value/src/types/identifier.rs\" target=\"\" title=\"\">identifier.rs</a>.</p>\n<h2 class=\"heading heading-2 header-scroll\" align=\"\"><div class=\"heading-anchor anchor waypoint\" id=\"identity-publickeys\"></div><div class=\"heading-text\"><div id=\"section-identity-public-keys\" class=\"heading-anchor_backwardsCompatibility\"></div>Identity publicKeys</div><a aria-label=\"Skip link to Identity publicKeys\" class=\"heading-anchor-icon fa fa-anchor\" href=\"#identity-publickeys\"></a></h2>\n<p>The identity <button aria-label=\"Copy Code\" class=\"rdmd-code-copy fa\"></button><code class=\"rdmd-code lang- theme-light\" data-lang=\"\" name=\"\" tabindex=\"0\">publicKeys</code> array stores information regarding each public key associated with the identity. Multiple identities may use the same public key.</p>\n<p><strong>Note:</strong> Since v0.23, each identity must have at least two public keys: a primary key (security level <button aria-label=\"Copy Code\" class=\"rdmd-code-copy fa\"></button><code class=\"rdmd-code lang- theme-light\" data-lang=\"\" name=\"\" tabindex=\"0\">0</code>) that is only used when updating the identity and an additional one (security level <button aria-label=\"Copy Code\" class=\"rdmd-code-copy fa\"></button><code class=\"rdmd-code lang- theme-light\" data-lang=\"\" name=\"\" tabindex=\"0\">2</code>) used to sign state transitions.</p>\n<p>Each item in the <button aria-label=\"Copy Code\" class=\"rdmd-code-copy fa\"></button><code class=\"rdmd-code lang- theme-light\" data-lang=\"\" name=\"\" tabindex=\"0\">publicKeys</code> array consists of an object containing:</p>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n<div class=\"rdmd-table\"><div class=\"rdmd-table-inner\"><table><thead><tr><th>Field</th><th>Type</th><th>Description</th></tr></thead><tbody><tr><td>id</td><td>integer</td><td>The key id (all public keys must be unique)</td></tr><tr><td>type</td><td>integer</td><td>Type of key (default: 0 - ECDSA)</td></tr><tr><td>data</td><td>array of bytes</td><td>Public key (0 - ECDSA: 33 bytes, 1 - BLS: 48 bytes, 2 - ECDSA Hash160: 20 bytes, 3 - <a href=\"https://github.com/bitcoin/bips/blob/master/bip-0013.mediawiki\" target=\"\" title=\"\">BIP13</a> Hash160: 20 bytes)</td></tr><tr><td>purpose</td><td>integer</td><td>Public key purpose (0 - Authentication, 1 - Encryption, 2 - Decryption, 3 - Withdraw)</td></tr><tr><td>securityLevel</td><td>integer</td><td>Public key security level (0 - Master, 1 - Critical, 2 - High, 3 - Medium)</td></tr><tr><td>readonly</td><td>boolean</td><td>Identity public key can&#x27;t be modified with <button aria-label=\"Copy Code\" class=\"rdmd-code-copy fa\"></button><code class=\"rdmd-code lang- theme-light\" data-lang=\"\" name=\"\" tabindex=\"0\">readOnly</code> set to <button aria-label=\"Copy Code\" class=\"rdmd-code-copy fa\"></button><code class=\"rdmd-code lang- theme-light\" data-lang=\"\" name=\"\" tabindex=\"0\">true</code>. This can\u2019t be changed after adding a key.</td></tr><tr><td>disabledAt</td><td>integer</td><td>Timestamp indicating that the key was disabled at a specified time</td></tr></tbody></table></div></div>\n<p>Keys for some purposes must meet certain <a href=\"https://github.com/dashpay/platform/blob/v0.24.5/packages/rs-dpp/src/identity/identity_public_key/security_level.rs#L62-L77\" target=\"\" title=\"\">security level criteria</a> as detailed below:</p>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n<div class=\"rdmd-table\"><div class=\"rdmd-table-inner\"><table><thead><tr><th>Key Purpose</th><th>Allowed Security Level(s)</th></tr></thead><tbody><tr><td>Authentication</td><td>Any security level</td></tr><tr><td>Encryption</td><td>Medium</td></tr><tr><td>Decryption</td><td>Medium</td></tr><tr><td>Withdraw</td><td>Critical</td></tr></tbody></table></div></div>\n<p>Each identity public key must comply with this JSON-Schema definition established in <a href=\"https://github.com/dashpay/platform/blob/v0.24.5/packages/rs-dpp/src/schema/identity/publicKey.json\" target=\"\" title=\"\">rs-dpp</a>:</p>\n<div class=\"CodeTabs CodeTabs_initial theme-light\"><div class=\"CodeTabs-toolbar\" role=\"tablist\"><button aria-selected=\"true\" class=\"CodeTabs_active\" role=\"tab\" type=\"button\">JSON</button></div><div class=\"CodeTabs-inner\" role=\"tabpanel\"><pre><button aria-label=\"Copy Code\" class=\"rdmd-code-copy fa\"></button><code class=\"rdmd-code lang-json theme-light\" data-lang=\"json\" name=\"\" tabindex=\"0\">{\n  &quot;$schema&quot;: &quot;https://json-schema.org/draft/2020-12/schema&quot;,\n  &quot;type&quot;: &quot;object&quot;,\n  &quot;properties&quot;: {\n    &quot;id&quot;: {\n      &quot;type&quot;: &quot;integer&quot;,\n      &quot;minimum&quot;: 0,\n      &quot;description&quot;: &quot;Public key ID&quot;,\n      &quot;$comment&quot;: &quot;Must be unique for the identity. It can\u2019t be changed after adding a key. Included when signing state transitions to indicate which identity key was used to sign.&quot;\n    },\n    &quot;type&quot;: {\n      &quot;type&quot;: &quot;integer&quot;,\n      &quot;enum&quot;: [\n        0,\n        1,\n        2,\n        3\n      ],\n      &quot;description&quot;: &quot;Public key type. 0 - ECDSA Secp256k1, 1 - BLS 12-381, 2 - ECDSA Secp256k1 Hash160, 3 - BIP 13 Hash160&quot;,\n      &quot;$comment&quot;: &quot;It can&#x27;t be changed after adding a key&quot;\n    },\n    &quot;purpose&quot;: {\n      &quot;type&quot;: &quot;integer&quot;,\n      &quot;enum&quot;: [\n        0,\n        1,\n        2,\n        3\n      ],\n      &quot;description&quot;: &quot;Public key purpose. 0 - Authentication, 1 - Encryption, 2 - Decryption, 3 - Withdraw&quot;,\n      &quot;$comment&quot;: &quot;It can&#x27;t be changed after adding a key&quot;\n    },\n    &quot;securityLevel&quot;: {\n      &quot;type&quot;: &quot;integer&quot;,\n      &quot;enum&quot;: [\n        0,\n        1,\n        2,\n        3\n      ],\n      &quot;description&quot;: &quot;Public key security level. 0 - Master, 1 - Critical, 2 - High, 3 - Medium&quot;,\n      &quot;$comment&quot;: &quot;It can&#x27;t be changed after adding a key&quot;\n    },\n    &quot;data&quot;: true,\n    &quot;readOnly&quot;: {\n      &quot;type&quot;: &quot;boolean&quot;,\n      &quot;description&quot;: &quot;Read only&quot;,\n      &quot;$comment&quot;: &quot;Identity public key can&#x27;t be modified with readOnly set to true. It can\u2019t be changed after adding a key&quot;\n    },\n    &quot;disabledAt&quot;: {\n      &quot;type&quot;: &quot;integer&quot;,\n      &quot;description&quot;: &quot;Timestamp indicating that the key was disabled at a specified time&quot;,\n      &quot;minimum&quot;: 0\n    }\n  },\n  &quot;allOf&quot;: [\n    {\n      &quot;if&quot;: {\n        &quot;properties&quot;: {\n          &quot;type&quot;: {\n            &quot;const&quot;: 0\n          }\n        }\n      },\n      &quot;then&quot;: {\n        &quot;properties&quot;: {\n          &quot;data&quot;: {\n            &quot;type&quot;: &quot;array&quot;,\n            &quot;byteArray&quot;: true,\n            &quot;minItems&quot;: 33,\n            &quot;maxItems&quot;: 33,\n            &quot;description&quot;: &quot;Raw ECDSA public key&quot;,\n            &quot;$comment&quot;: &quot;It must be a valid key of the specified type and unique for the identity. It can\u2019t be changed after adding a key&quot;\n          }\n        }\n      }\n    },\n    {\n      &quot;if&quot;: {\n        &quot;properties&quot;: {\n          &quot;type&quot;: {\n            &quot;const&quot;: 1\n          }\n        }\n      },\n      &quot;then&quot;: {\n        &quot;properties&quot;: {\n          &quot;data&quot;: {\n            &quot;type&quot;: &quot;array&quot;,\n            &quot;byteArray&quot;: true,\n            &quot;minItems&quot;: 48,\n            &quot;maxItems&quot;: 48,\n            &quot;description&quot;: &quot;Raw BLS public key&quot;,\n            &quot;$comment&quot;: &quot;It must be a valid key of the specified type and unique for the identity. It can\u2019t be changed after adding a key&quot;\n          }\n        }\n      }\n    },\n    {\n      &quot;if&quot;: {\n        &quot;properties&quot;: {\n          &quot;type&quot;: {\n            &quot;const&quot;: 2\n          }\n        }\n      },\n      &quot;then&quot;: {\n        &quot;properties&quot;: {\n          &quot;data&quot;: {\n            &quot;type&quot;: &quot;array&quot;,\n            &quot;byteArray&quot;: true,\n            &quot;minItems&quot;: 20,\n            &quot;maxItems&quot;: 20,\n            &quot;description&quot;: &quot;ECDSA Secp256k1 public key Hash160&quot;,\n            &quot;$comment&quot;: &quot;It must be a valid key hash of the specified type and unique for the identity. It can\u2019t be changed after adding a key&quot;\n          }\n        }\n      }\n    },\n    {\n      &quot;if&quot;: {\n        &quot;properties&quot;: {\n          &quot;type&quot;: {\n            &quot;const&quot;: 3\n          }\n        }\n      },\n      &quot;then&quot;: {\n        &quot;properties&quot;: {\n          &quot;data&quot;: {\n            &quot;type&quot;: &quot;array&quot;,\n            &quot;byteArray&quot;: true,\n            &quot;minItems&quot;: 20,\n            &quot;maxItems&quot;: 20,\n            &quot;description&quot;: &quot;BIP13 script public key&quot;,\n            &quot;$comment&quot;: &quot;It must be a valid script hash of the specified type and unique for the identity&quot;\n          }\n        }\n      }\n    }\n  ],\n  &quot;required&quot;: [\n    &quot;id&quot;,\n    &quot;type&quot;,\n    &quot;data&quot;,\n    &quot;purpose&quot;,\n    &quot;securityLevel&quot;\n  ],\n  &quot;additionalProperties&quot;: false\n}\n</code></pre></div></div>\n<h3 class=\"heading heading-3 header-scroll\" align=\"\"><div class=\"heading-anchor anchor waypoint\" id=\"public-key-id\"></div><div class=\"heading-text\"><div id=\"section-public-key-id\" class=\"heading-anchor_backwardsCompatibility\"></div>Public Key <button aria-label=\"Copy Code\" class=\"rdmd-code-copy fa\"></button><code class=\"rdmd-code lang- theme-light\" data-lang=\"\" name=\"\" tabindex=\"0\">id</code></div><a aria-label=\"Skip link to Public Key \" class=\"heading-anchor-icon fa fa-anchor\" href=\"#public-key-id\"></a></h3>\n<p>Each public key in an identity&#x27;s <button aria-label=\"Copy Code\" class=\"rdmd-code-copy fa\"></button><code class=\"rdmd-code lang- theme-light\" data-lang=\"\" name=\"\" tabindex=\"0\">publicKeys</code> array must be assigned a unique index number (<button aria-label=\"Copy Code\" class=\"rdmd-code-copy fa\"></button><code class=\"rdmd-code lang- theme-light\" data-lang=\"\" name=\"\" tabindex=\"0\">id</code>).</p>\n<h3 class=\"heading heading-3 header-scroll\" align=\"\"><div class=\"heading-anchor anchor waypoint\" id=\"public-key-type\"></div><div class=\"heading-text\"><div id=\"section-public-key-type\" class=\"heading-anchor_backwardsCompatibility\"></div>Public Key <button aria-label=\"Copy Code\" class=\"rdmd-code-copy fa\"></button><code class=\"rdmd-code lang- theme-light\" data-lang=\"\" name=\"\" tabindex=\"0\">type</code></div><a aria-label=\"Skip link to Public Key \" class=\"heading-anchor-icon fa fa-anchor\" href=\"#public-key-type\"></a></h3>\n<p>The <button aria-label=\"Copy Code\" class=\"rdmd-code-copy fa\"></button><code class=\"rdmd-code lang- theme-light\" data-lang=\"\" name=\"\" tabindex=\"0\">type</code> field indicates the algorithm used to derive the key.</p>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n<div class=\"rdmd-table\"><div class=\"rdmd-table-inner\"><table><thead><tr><th style=\"text-align:center\">Type</th><th>Description</th></tr></thead><tbody><tr><td style=\"text-align:center\">0</td><td>ECDSA Secp256k1 (default)</td></tr><tr><td style=\"text-align:center\">1</td><td>BLS 12-381</td></tr><tr><td style=\"text-align:center\">2</td><td>ECDSA Secp256k1 Hash160</td></tr><tr><td style=\"text-align:center\">3</td><td><a href=\"https://github.com/bitcoin/bips/blob/master/bip-0013.mediawiki\" target=\"\" title=\"\">BIP13</a> pay-to-script-hash public key</td></tr></tbody></table></div></div>\n<h3 class=\"heading heading-3 header-scroll\" align=\"\"><div class=\"heading-anchor anchor waypoint\" id=\"public-key-data\"></div><div class=\"heading-text\"><div id=\"section-public-key-data\" class=\"heading-anchor_backwardsCompatibility\"></div>Public Key <button aria-label=\"Copy Code\" class=\"rdmd-code-copy fa\"></button><code class=\"rdmd-code lang- theme-light\" data-lang=\"\" name=\"\" tabindex=\"0\">data</code></div><a aria-label=\"Skip link to Public Key \" class=\"heading-anchor-icon fa fa-anchor\" href=\"#public-key-data\"></a></h3>\n<p>The <button aria-label=\"Copy Code\" class=\"rdmd-code-copy fa\"></button><code class=\"rdmd-code lang- theme-light\" data-lang=\"\" name=\"\" tabindex=\"0\">data</code> field contains the compressed public key.</p>\n<h3 class=\"heading heading-3 header-scroll\" align=\"\"><div class=\"heading-anchor anchor waypoint\" id=\"public-key-purpose\"></div><div class=\"heading-text\"><div id=\"section-public-key-purpose\" class=\"heading-anchor_backwardsCompatibility\"></div>Public Key <button aria-label=\"Copy Code\" class=\"rdmd-code-copy fa\"></button><code class=\"rdmd-code lang- theme-light\" data-lang=\"\" name=\"\" tabindex=\"0\">purpose</code></div><a aria-label=\"Skip link to Public Key \" class=\"heading-anchor-icon fa fa-anchor\" href=\"#public-key-purpose\"></a></h3>\n<p>The <button aria-label=\"Copy Code\" class=\"rdmd-code-copy fa\"></button><code class=\"rdmd-code lang- theme-light\" data-lang=\"\" name=\"\" tabindex=\"0\">purpose</code> field describes which operations are supported by the key. Please refer to <a href=\"https://github.com/dashpay/dips/blob/master/dip-0011.md#keys\" target=\"\" title=\"\">DIP11 - Identities</a> for additional information regarding this.</p>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n<div class=\"rdmd-table\"><div class=\"rdmd-table-inner\"><table><thead><tr><th style=\"text-align:center\">Type</th><th>Description</th></tr></thead><tbody><tr><td style=\"text-align:center\">0</td><td>Authentication</td></tr><tr><td style=\"text-align:center\">1</td><td>Encryption</td></tr><tr><td style=\"text-align:center\">2</td><td>Decryption</td></tr><tr><td style=\"text-align:center\">3</td><td>Withdraw</td></tr></tbody></table></div></div>\n<h3 class=\"heading heading-3 header-scroll\" align=\"\"><div class=\"heading-anchor anchor waypoint\" id=\"public-key-securitylevel\"></div><div class=\"heading-text\"><div id=\"section-public-key-security-level\" class=\"heading-anchor_backwardsCompatibility\"></div>Public Key <button aria-label=\"Copy Code\" class=\"rdmd-code-copy fa\"></button><code class=\"rdmd-code lang- theme-light\" data-lang=\"\" name=\"\" tabindex=\"0\">securityLevel</code></div><a aria-label=\"Skip link to Public Key \" class=\"heading-anchor-icon fa fa-anchor\" href=\"#public-key-securitylevel\"></a></h3>\n<p>The <button aria-label=\"Copy Code\" class=\"rdmd-code-copy fa\"></button><code class=\"rdmd-code lang- theme-light\" data-lang=\"\" name=\"\" tabindex=\"0\">securityLevel</code> field indicates how securely the key should be stored by clients. Please refer to <a href=\"https://github.com/dashpay/dips/blob/master/dip-0011.md#keys\" target=\"\" title=\"\">DIP11 - Identities</a> for additional information regarding this.</p>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n<div class=\"rdmd-table\"><div class=\"rdmd-table-inner\"><table><thead><tr><th style=\"text-align:center\">Level</th><th>Description</th><th>Security Practice</th></tr></thead><tbody><tr><td style=\"text-align:center\">0</td><td>Master</td><td>Should always require a user to authenticate when signing a transition. Can only be used to update an identity.</td></tr><tr><td style=\"text-align:center\">1</td><td>Critical</td><td>Should always require a user to authenticate when signing a transition</td></tr><tr><td style=\"text-align:center\">2</td><td>High</td><td>Should be available as long as the user has authenticated at least once during a session. Typically used to sign state transitions, but cannot be used for identity update transitions.</td></tr><tr><td style=\"text-align:center\">3</td><td>Medium</td><td>Should not require user authentication but must require access to the client device</td></tr></tbody></table></div></div>\n<h3 class=\"heading heading-3 header-scroll\" align=\"\"><div class=\"heading-anchor anchor waypoint\" id=\"public-key-readonly\"></div><div class=\"heading-text\"><div id=\"section-public-key-read-only\" class=\"heading-anchor_backwardsCompatibility\"></div>Public Key <button aria-label=\"Copy Code\" class=\"rdmd-code-copy fa\"></button><code class=\"rdmd-code lang- theme-light\" data-lang=\"\" name=\"\" tabindex=\"0\">readOnly</code></div><a aria-label=\"Skip link to Public Key \" class=\"heading-anchor-icon fa fa-anchor\" href=\"#public-key-readonly\"></a></h3>\n<p>The <button aria-label=\"Copy Code\" class=\"rdmd-code-copy fa\"></button><code class=\"rdmd-code lang- theme-light\" data-lang=\"\" name=\"\" tabindex=\"0\">readOnly</code> field indicates that the public key can&#x27;t be modified if it is set to <button aria-label=\"Copy Code\" class=\"rdmd-code-copy fa\"></button><code class=\"rdmd-code lang- theme-light\" data-lang=\"\" name=\"\" tabindex=\"0\">true</code>. The<br/>\nvalue of this field cannot be changed after adding the key.</p>\n<h3 class=\"heading heading-3 header-scroll\" align=\"\"><div class=\"heading-anchor anchor waypoint\" id=\"public-key-disabledat\"></div><div class=\"heading-text\"><div id=\"section-public-key-disabled-at\" class=\"heading-anchor_backwardsCompatibility\"></div>Public Key <button aria-label=\"Copy Code\" class=\"rdmd-code-copy fa\"></button><code class=\"rdmd-code lang- theme-light\" data-lang=\"\" name=\"\" tabindex=\"0\">disabledAt</code></div><a aria-label=\"Skip link to Public Key \" class=\"heading-anchor-icon fa fa-anchor\" href=\"#public-key-disabledat\"></a></h3>\n<p>The <button aria-label=\"Copy Code\" class=\"rdmd-code-copy fa\"></button><code class=\"rdmd-code lang- theme-light\" data-lang=\"\" name=\"\" tabindex=\"0\">disabledAt</code> field indicates that the key has been disabled. Its value equals the timestamp when the key was disabled.</p>\n<h2 class=\"heading heading-2 header-scroll\" align=\"\"><div class=\"heading-anchor anchor waypoint\" id=\"identity-balance\"></div><div class=\"heading-text\"><div id=\"section-identity-balance\" class=\"heading-anchor_backwardsCompatibility\"></div>Identity balance</div><a aria-label=\"Skip link to Identity balance\" class=\"heading-anchor-icon fa fa-anchor\" href=\"#identity-balance\"></a></h2>\n<p>Each identity has a balance of credits established by value locked via a layer 1 lock transaction. This credit balance is used to pay the fees associated with state transitions.</p>\n<h1 class=\"heading heading-1 header-scroll\" align=\"\"><div class=\"heading-anchor anchor waypoint\" id=\"identity-state-transition-details\"></div><div class=\"heading-text\"><div id=\"section-identity-state-transition-details\" class=\"heading-anchor_backwardsCompatibility\"></div>Identity State Transition Details</div><a aria-label=\"Skip link to Identity State Transition Details\" class=\"heading-anchor-icon fa fa-anchor\" href=\"#identity-state-transition-details\"></a></h1>\n<p>There are three identity-related state transitions: <a href=\"#identity-creation\" target=\"\" title=\"\">identity create</a>, <a href=\"#identity-topup\" target=\"\" title=\"\">identity topup</a>, and <a href=\"#identity-update\" target=\"\" title=\"\">identity update</a>. Details are provided in this section including information about <a href=\"#asset-lock\" target=\"\" title=\"\">asset locking</a> and <a href=\"#identity-state-transition-signing\" target=\"\" title=\"\">signing</a> required for these state transitions.</p>\n<h2 class=\"heading heading-2 header-scroll\" align=\"\"><div class=\"heading-anchor anchor waypoint\" id=\"identity-creation\"></div><div class=\"heading-text\"><div id=\"section-identity-creation\" class=\"heading-anchor_backwardsCompatibility\"></div>Identity Creation</div><a aria-label=\"Skip link to Identity Creation\" class=\"heading-anchor-icon fa fa-anchor\" href=\"#identity-creation\"></a></h2>\n<p>Identities are created on the platform by submitting the identity information in an identity create state transition.</p>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n<div class=\"rdmd-table\"><div class=\"rdmd-table-inner\"><table><thead><tr><th>Field</th><th>Type</th><th>Description</th></tr></thead><tbody><tr><td>protocolVersion</td><td>integer</td><td>The protocol version (currently <button aria-label=\"Copy Code\" class=\"rdmd-code-copy fa\"></button><code class=\"rdmd-code lang- theme-light\" data-lang=\"\" name=\"\" tabindex=\"0\">1</code>)</td></tr><tr><td>type</td><td>integer</td><td>State transition type (<button aria-label=\"Copy Code\" class=\"rdmd-code-copy fa\"></button><code class=\"rdmd-code lang- theme-light\" data-lang=\"\" name=\"\" tabindex=\"0\">2</code> for identity create)</td></tr><tr><td>assetLockProof</td><td>object</td><td><a href=\"#asset-lock\" target=\"\" title=\"\">Asset lock proof object</a> proving the layer 1 locking transaction exists and is locked</td></tr><tr><td>publicKeys</td><td>array of keys</td><td><a href=\"#identity-publickeys\" target=\"\" title=\"\">Public key(s)</a> associated with the identity</td></tr><tr><td>signature</td><td>array of bytes</td><td>Signature of state transition data by the single-use key from the asset lock (65 bytes)</td></tr></tbody></table></div></div>\n<p>Each identity must comply with this JSON-Schema definition established in <a href=\"https://github.com/dashpay/platform/blob/v0.24.5/packages/rs-dpp/src/schema/identity/stateTransition/identityCreate.json\" target=\"\" title=\"\">rs-dpp</a>:</p>\n<div class=\"CodeTabs CodeTabs_initial theme-light\"><div class=\"CodeTabs-toolbar\" role=\"tablist\"><button aria-selected=\"true\" class=\"CodeTabs_active\" role=\"tab\" type=\"button\">JSON</button></div><div class=\"CodeTabs-inner\" role=\"tabpanel\"><pre><button aria-label=\"Copy Code\" class=\"rdmd-code-copy fa\"></button><code class=\"rdmd-code lang-json theme-light\" data-lang=\"json\" name=\"\" tabindex=\"0\">{\n  &quot;$schema&quot;: &quot;https://json-schema.org/draft/2020-12/schema&quot;,\n  &quot;type&quot;: &quot;object&quot;,\n  &quot;properties&quot;: {\n    &quot;protocolVersion&quot;: {\n      &quot;type&quot;: &quot;integer&quot;,\n      &quot;$comment&quot;: &quot;Maximum is the latest protocol version&quot;\n    },\n    &quot;type&quot;: {\n      &quot;type&quot;: &quot;integer&quot;,\n      &quot;const&quot;: 2\n    },\n    &quot;assetLockProof&quot;: {\n      &quot;type&quot;: &quot;object&quot;\n    },\n    &quot;publicKeys&quot;: {\n      &quot;type&quot;: &quot;array&quot;,\n      &quot;minItems&quot;: 1,\n      &quot;maxItems&quot;: 10,\n      &quot;uniqueItems&quot;: true\n    },\n    &quot;signature&quot;: {\n      &quot;type&quot;: &quot;array&quot;,\n      &quot;byteArray&quot;: true,\n      &quot;minItems&quot;: 65,\n      &quot;maxItems&quot;: 65,\n      &quot;description&quot;: &quot;Signature made by AssetLock one time ECDSA key&quot;\n    }\n  },\n  &quot;additionalProperties&quot;: false,\n  &quot;required&quot;: [\n    &quot;protocolVersion&quot;,\n    &quot;type&quot;,\n    &quot;assetLockProof&quot;,\n    &quot;publicKeys&quot;,\n    &quot;signature&quot;\n  ]\n}\n</code></pre></div></div>\n<p><strong>Example State Transition</strong></p>\n<div class=\"CodeTabs CodeTabs_initial theme-light\"><div class=\"CodeTabs-toolbar\" role=\"tablist\"><button aria-selected=\"true\" class=\"CodeTabs_active\" role=\"tab\" type=\"button\">JSON</button></div><div class=\"CodeTabs-inner\" role=\"tabpanel\"><pre><button aria-label=\"Copy Code\" class=\"rdmd-code-copy fa\"></button><code class=\"rdmd-code lang-json theme-light\" data-lang=\"json\" name=\"\" tabindex=\"0\">{\n  &quot;protocolVersion&quot;:1,\n  &quot;type&quot;:2,\n  &quot;signature&quot;:&quot;IBTTgge+/VDa/9+n2q3pb4tAqZYI48AX8X3H/uedRLH5dN8Ekh/sxRRQQS9LaOPwZSCVED6XIYD+vravF2dhYOE=&quot;,\n  &quot;assetLockProof&quot;:{\n    &quot;type&quot;:0,\n    &quot;instantLock&quot;:&quot;AQHDHQdekbFZJOQFEe1FnRjoDemL/oPF/v9IME/qphjt5gEAAAB/OlZB9p8vPzPE55MlegR7nwhXRpZC4d5sYnOIypNgzfdDRsW01v8UtlRoORokjoDJ9hA/XFMK65iYTrQ8AAAAGI4q8GxtK9LHOT1JipnIfwiiv8zW+C/sbokbMhi/BsEl51dpoeBQEUAYWT7KRiJ4Atx49zIrqsKvmU1mJQza0Y1YbBSS/b/IPO8StX04bItPpDuTp6zlh/G7YOGzlEoe&quot;,\n    &quot;transaction&quot;:&quot;0300000001c31d075e91b15924e40511ed459d18e80de98bfe83c5feff48304feaa618ede6010000006b483045022100dd0e4a6c25b1c7ed9aec2c93133f6de27b4c695a062f21f0aed1a2999fccf01c0220384aaf84cd5fd1c741fd1739f5c026a492abbfc18cfde296c6d90e98304f2f76012102fb9e87840f7e0a9b01f955d8eb4d1d2a52b32c9c43c751d7a348482c514ad222ffffffff021027000000000000166a14ea15af58c614b050a3b2e6bcc131fe0e7de37b9801710815000000001976a9140ccc680f945e964f7665f57c0108cba5ca77ed1388ac00000000&quot;,\n    &quot;outputIndex&quot;:0\n  },\n  &quot;publicKeys&quot;:[\n    {\n      &quot;id&quot;:0,\n      &quot;type&quot;:0,\n      &quot;purpose&quot;:0,\n      &quot;securityLevel&quot;:0,\n      &quot;data&quot;:&quot;AkWRfl3DJiyyy6YPUDQnNx5KERRnR8CoTiFUvfdaYSDS&quot;,\n      &quot;readOnly&quot;:false\n    }\n  ]\n}\n</code></pre></div></div>\n<h2 class=\"heading heading-2 header-scroll\" align=\"\"><div class=\"heading-anchor anchor waypoint\" id=\"identity-topup\"></div><div class=\"heading-text\"><div id=\"section-identity-top-up\" class=\"heading-anchor_backwardsCompatibility\"></div>Identity TopUp</div><a aria-label=\"Skip link to Identity TopUp\" class=\"heading-anchor-icon fa fa-anchor\" href=\"#identity-topup\"></a></h2>\n<p>Identity credit balances are increased by submitting the topup information in an identity topup state transition.</p>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n<div class=\"rdmd-table\"><div class=\"rdmd-table-inner\"><table><thead><tr><th>Field</th><th>Type</th><th>Description</th></tr></thead><tbody><tr><td>protocolVersion</td><td>integer</td><td>The protocol version (currently <button aria-label=\"Copy Code\" class=\"rdmd-code-copy fa\"></button><code class=\"rdmd-code lang- theme-light\" data-lang=\"\" name=\"\" tabindex=\"0\">1</code>)</td></tr><tr><td>type</td><td>integer</td><td>State transition type (<button aria-label=\"Copy Code\" class=\"rdmd-code-copy fa\"></button><code class=\"rdmd-code lang- theme-light\" data-lang=\"\" name=\"\" tabindex=\"0\">3</code> for identity topup)</td></tr><tr><td>assetLockProof</td><td>object</td><td><a href=\"#asset-lock\" target=\"\" title=\"\">Asset lock proof object</a> proving the layer 1 locking transaction exists and is locked</td></tr><tr><td>identityId</td><td>array of bytes</td><td>An <a href=\"#identity-id\" target=\"\" title=\"\">Identity ID</a> for the identity receiving the topup (can be any identity) (32 bytes)</td></tr><tr><td>signature</td><td>array of bytes</td><td>Signature of state transition data by the single-use key from the asset lock (65 bytes)</td></tr></tbody></table></div></div>\n<p>Each identity must comply with this JSON-Schema definition established in <a href=\"https://github.com/dashpay/platform/blob/v0.24.5/packages/rs-dpp/src/schema/identity/stateTransition/identityTopUp.json\" target=\"\" title=\"\">rs-dpp</a>:</p>\n<div class=\"CodeTabs CodeTabs_initial theme-light\"><div class=\"CodeTabs-toolbar\" role=\"tablist\"><button aria-selected=\"true\" class=\"CodeTabs_active\" role=\"tab\" type=\"button\">JSON</button></div><div class=\"CodeTabs-inner\" role=\"tabpanel\"><pre><button aria-label=\"Copy Code\" class=\"rdmd-code-copy fa\"></button><code class=\"rdmd-code lang-json theme-light\" data-lang=\"json\" name=\"\" tabindex=\"0\">{\n  &quot;$schema&quot;: &quot;https://json-schema.org/draft/2020-12/schema&quot;,\n  &quot;type&quot;: &quot;object&quot;,\n  &quot;properties&quot;: {\n    &quot;protocolVersion&quot;: {\n      &quot;type&quot;: &quot;integer&quot;,\n      &quot;$comment&quot;: &quot;Maximum is the latest protocol version&quot;\n    },\n    &quot;type&quot;: {\n      &quot;type&quot;: &quot;integer&quot;,\n      &quot;const&quot;: 3\n    },\n    &quot;assetLockProof&quot;: {\n      &quot;type&quot;: &quot;object&quot;\n    },\n    &quot;identityId&quot;: {\n      &quot;type&quot;: &quot;array&quot;,\n      &quot;byteArray&quot;: true,\n      &quot;minItems&quot;: 32,\n      &quot;maxItems&quot;: 32,\n      &quot;contentMediaType&quot;: &quot;application/x.dash.dpp.identifier&quot;\n    },\n    &quot;signature&quot;: {\n      &quot;type&quot;: &quot;array&quot;,\n      &quot;byteArray&quot;: true,\n      &quot;minItems&quot;: 65,\n      &quot;maxItems&quot;: 65,\n      &quot;description&quot;: &quot;Signature made by AssetLock one time ECDSA key&quot;\n    }\n  },\n  &quot;additionalProperties&quot;: false,\n  &quot;required&quot;: [\n    &quot;protocolVersion&quot;,\n    &quot;type&quot;,\n    &quot;assetLockProof&quot;,\n    &quot;identityId&quot;,\n    &quot;signature&quot;\n  ]\n}\n</code></pre></div></div>\n<p><strong>Example State Transition</strong></p>\n<div class=\"CodeTabs CodeTabs_initial theme-light\"><div class=\"CodeTabs-toolbar\" role=\"tablist\"><button aria-selected=\"true\" class=\"CodeTabs_active\" role=\"tab\" type=\"button\">JSON</button></div><div class=\"CodeTabs-inner\" role=\"tabpanel\"><pre><button aria-label=\"Copy Code\" class=\"rdmd-code-copy fa\"></button><code class=\"rdmd-code lang-json theme-light\" data-lang=\"json\" name=\"\" tabindex=\"0\">{\n  &quot;protocolVersion&quot;:1,\n  &quot;type&quot;:3,\n  &quot;signature&quot;:&quot;IEqOV4DsbVa+nPipva0UrT0z0ZwubwgP9UdlpwBwXbFSWb7Mxkwqzv1HoEDICJ8GtmUSVjp4Hr2x0cVWe7+yUGc=&quot;,\n  &quot;identityId&quot;:&quot;6YfP6tT9AK8HPVXMK7CQrhpc8VMg7frjEnXinSPvUmZC&quot;,\n  &quot;assetLockProof&quot;:{\n    &quot;type&quot;:0,\n    &quot;instantLock&quot;:&quot;AQF/OlZB9p8vPzPE55MlegR7nwhXRpZC4d5sYnOIypNgzQEAAAAm8edm9p8URNEE9PBo0lEzZ2s9nf4u1SV0MaZyB0JTRasiXu8QtTmfqZWjI3qVtOpUhGPu6r/2fV+0Ffi3AAAAhA77E0aScf+5PTYzgV5WR6VJ/EnjvXyAMmAcu222JyvA7M+5OoCzVF/IQs2IWaPOFsRl1n5C+dMxdvrxhpVLT8QfZJSl19wzybWrHbGRaHDw4iWHvfYdwyXN+vP8UwDz&quot;,\n    &quot;transaction&quot;:&quot;03000000017f3a5641f69f2f3f33c4e793257a047b9f0857469642e1de6c627388ca9360cd010000006b483045022100d8c383b15a3738d13b029605d242f041bea874cb4d0def1303ca7cdf76092bf102201b1d401ae9e8cdc5efc061249d2a967960dadce53c66e34d249c42049b48b26701210335b684aa510a9b54a3a4f79283e64482a323190045c239fae5ecb0450c78f965ffffffff02e803000000000000166a14f5383f51784bc4a27e2040bdd6cd9aae7fe6814d31690815000000001976a9144a0511ec3362b35983d0a101f0572dd26abce2ee88ac00000000&quot;,\n    &quot;outputIndex&quot;:0\n  }\n}\n</code></pre></div></div>\n<h2 class=\"heading heading-2 header-scroll\" align=\"\"><div class=\"heading-anchor anchor waypoint\" id=\"identity-update\"></div><div class=\"heading-text\"><div id=\"section-identity-update\" class=\"heading-anchor_backwardsCompatibility\"></div>Identity Update</div><a aria-label=\"Skip link to Identity Update\" class=\"heading-anchor-icon fa fa-anchor\" href=\"#identity-update\"></a></h2>\n<p>Identities are updated on the platform by submitting the identity information in an identity update state transition. This state transition requires either a set of one or more new public keys to add to the identity or a list of existing keys to disable.</p>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n<div class=\"rdmd-table\"><div class=\"rdmd-table-inner\"><table><thead><tr><th>Field</th><th>Type</th><th>Description</th></tr></thead><tbody><tr><td>protocolVersion</td><td>integer</td><td>The protocol version (currently <button aria-label=\"Copy Code\" class=\"rdmd-code-copy fa\"></button><code class=\"rdmd-code lang- theme-light\" data-lang=\"\" name=\"\" tabindex=\"0\">1</code>)</td></tr><tr><td>type</td><td>integer</td><td>State transition type (<button aria-label=\"Copy Code\" class=\"rdmd-code-copy fa\"></button><code class=\"rdmd-code lang- theme-light\" data-lang=\"\" name=\"\" tabindex=\"0\">5</code> for identity update)</td></tr><tr><td>identityId</td><td>array of bytes</td><td>The identity id (32 bytes)</td></tr><tr><td>signature</td><td>array of bytes</td><td>Signature of state transition data (65 bytes)</td></tr><tr><td>revision</td><td>integer</td><td>Identity update revision</td></tr><tr><td>publicKeysDisabledAt</td><td>integer</td><td>(Optional) Timestamp when keys were disabled. Required if <button aria-label=\"Copy Code\" class=\"rdmd-code-copy fa\"></button><code class=\"rdmd-code lang- theme-light\" data-lang=\"\" name=\"\" tabindex=\"0\">disablePublicKeys</code> is present.</td></tr><tr><td>addPublicKeys</td><td>array of public keys</td><td>(Optional) Array of up to 10 new public keys to add to the identity. Required if adding keys.</td></tr><tr><td>disablePublicKeys</td><td>array of integers</td><td>(Optional) Array of up to 10 existing identity public key ID(s) to disable for the identity. Required if disabling keys.</td></tr><tr><td>signaturePublicKeyId</td><td>integer</td><td>The ID of public key used to sign the state transition</td></tr></tbody></table></div></div>\n<p>Each identity must comply with this JSON-Schema definition established in <a href=\"https://github.com/dashpay/platform/blob/v0.24.5/packages/rs-dpp/src/schema/identity/stateTransition/identityUpdate.json\" target=\"\" title=\"\">rs-dpp</a>:</p>\n<div class=\"CodeTabs CodeTabs_initial theme-light\"><div class=\"CodeTabs-toolbar\" role=\"tablist\"><button aria-selected=\"true\" class=\"CodeTabs_active\" role=\"tab\" type=\"button\">JSON</button></div><div class=\"CodeTabs-inner\" role=\"tabpanel\"><pre><button aria-label=\"Copy Code\" class=\"rdmd-code-copy fa\"></button><code class=\"rdmd-code lang-json theme-light\" data-lang=\"json\" name=\"\" tabindex=\"0\">{\n  &quot;$schema&quot;: &quot;https://json-schema.org/draft/2020-12/schema&quot;,\n  &quot;type&quot;: &quot;object&quot;,\n  &quot;properties&quot;: {\n    &quot;protocolVersion&quot;: {\n      &quot;type&quot;: &quot;integer&quot;,\n      &quot;$comment&quot;: &quot;Maximum is the latest protocol version&quot;\n    },\n    &quot;type&quot;: {\n      &quot;type&quot;: &quot;integer&quot;,\n      &quot;const&quot;: 5\n    },\n    &quot;identityId&quot;: {\n      &quot;type&quot;: &quot;array&quot;,\n      &quot;byteArray&quot;: true,\n      &quot;minItems&quot;: 32,\n      &quot;maxItems&quot;: 32,\n      &quot;contentMediaType&quot;: &quot;application/x.dash.dpp.identifier&quot;\n    },\n    &quot;signature&quot;: {\n      &quot;type&quot;: &quot;array&quot;,\n      &quot;byteArray&quot;: true,\n      &quot;minItems&quot;: 65,\n      &quot;maxItems&quot;: 96\n    },\n    &quot;revision&quot;: {\n      &quot;type&quot;: &quot;integer&quot;,\n      &quot;minimum&quot;: 0,\n      &quot;description&quot;: &quot;Identity update revision&quot;\n    },\n    &quot;publicKeysDisabledAt&quot;: {\n      &quot;type&quot;: &quot;integer&quot;,\n      &quot;minimum&quot;: 0\n    },\n    &quot;addPublicKeys&quot;: {\n      &quot;type&quot;: &quot;array&quot;,\n      &quot;minItems&quot;: 1,\n      &quot;maxItems&quot;: 10,\n      &quot;uniqueItems&quot;: true\n    },\n    &quot;disablePublicKeys&quot;: {\n      &quot;type&quot;: &quot;array&quot;,\n      &quot;minItems&quot;: 1,\n      &quot;maxItems&quot;: 10,\n      &quot;uniqueItems&quot;: true,\n      &quot;items&quot;: {\n        &quot;type&quot;: &quot;integer&quot;,\n        &quot;minimum&quot;: 0\n      }\n    },\n    &quot;signaturePublicKeyId&quot;: {\n      &quot;type&quot;: &quot;integer&quot;,\n      &quot;minimum&quot;: 0\n    }\n  },\n  &quot;dependentRequired&quot; : {\n    &quot;disablePublicKeys&quot;: [&quot;publicKeysDisabledAt&quot;],\n    &quot;publicKeysDisabledAt&quot;: [&quot;disablePublicKeys&quot;]\n  },\n  &quot;anyOf&quot;: [\n    {\n      &quot;type&quot;: &quot;object&quot;,\n      &quot;required&quot;: [&quot;addPublicKeys&quot;],\n      &quot;properties&quot;: {\n        &quot;addPublicKeys&quot;: true\n      }\n    },\n    {\n      &quot;type&quot;: &quot;object&quot;,\n      &quot;required&quot;: [&quot;disablePublicKeys&quot;],\n      &quot;properties&quot;: {\n        &quot;disablePublicKeys&quot;: true\n      }\n    }\n  ],\n  &quot;additionalProperties&quot;: false,\n  &quot;required&quot;: [\n    &quot;protocolVersion&quot;,\n    &quot;type&quot;,\n    &quot;identityId&quot;,\n    &quot;signature&quot;,\n    &quot;revision&quot;,\n    &quot;signaturePublicKeyId&quot;\n  ]\n}\n</code></pre></div></div>\n<h2 class=\"heading heading-2 header-scroll\" align=\"\"><div class=\"heading-anchor anchor waypoint\" id=\"asset-lock\"></div><div class=\"heading-text\"><div id=\"section-asset-lock\" class=\"heading-anchor_backwardsCompatibility\"></div>Asset Lock</div><a aria-label=\"Skip link to Asset Lock\" class=\"heading-anchor-icon fa fa-anchor\" href=\"#asset-lock\"></a></h2>\n<p>The <a href=\"#identity-creation\" target=\"\" title=\"\">identity create</a> and <a href=\"#identity-topup\" target=\"\" title=\"\">identity topup</a> state transitions both include an asset lock proof object. This object references the layer 1 lock transaction and includes proof that the transaction is locked.</p>\n<p>Currently there are two types of asset lock proofs: InstantSend and ChainLock. Transactions almost always receive InstantSend locks, so the InstantSend asset lock proof is the predominate type.</p>\n<h3 class=\"heading heading-3 header-scroll\" align=\"\"><div class=\"heading-anchor anchor waypoint\" id=\"instantsend-asset-lock-proof\"></div><div class=\"heading-text\"><div id=\"section-instant-send-asset-lock-proof\" class=\"heading-anchor_backwardsCompatibility\"></div>InstantSend Asset Lock Proof</div><a aria-label=\"Skip link to InstantSend Asset Lock Proof\" class=\"heading-anchor-icon fa fa-anchor\" href=\"#instantsend-asset-lock-proof\"></a></h3>\n<p>The InstantSend asset lock proof is used for transactions that have received an InstantSend lock.</p>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n<div class=\"rdmd-table\"><div class=\"rdmd-table-inner\"><table><thead><tr><th>Field</th><th>Type</th><th>Description</th></tr></thead><tbody><tr><td>type</td><td>integer</td><td>The asset lock proof type (<button aria-label=\"Copy Code\" class=\"rdmd-code-copy fa\"></button><code class=\"rdmd-code lang- theme-light\" data-lang=\"\" name=\"\" tabindex=\"0\">0</code> for InstantSend locks)</td></tr><tr><td>instantLock</td><td>array of bytes</td><td>The InstantSend lock (<a href=\"https://docs.dash.org/projects/core/en/stable/docs/reference/p2p-network-instantsend-messages.html#islock\" target=\"\" title=\"\"><button aria-label=\"Copy Code\" class=\"rdmd-code-copy fa\"></button><code class=\"rdmd-code lang- theme-light\" data-lang=\"\" name=\"\" tabindex=\"0\">islock</code></a>)</td></tr><tr><td>transaction</td><td>array of bytes</td><td>The asset lock transaction</td></tr><tr><td>outputIndex</td><td>integer</td><td>Index of the transaction output to be used</td></tr></tbody></table></div></div>\n<p>Asset locks using an InstantSend lock as proof must comply with this JSON-Schema definition established in <a href=\"https://github.com/dashpay/platform/blob/v0.24.5/packages/rs-dpp/src/schema/identity/stateTransition/assetLockProof/instantAssetLockProof.json\" target=\"\" title=\"\">rs-dpp</a>:</p>\n<div class=\"CodeTabs CodeTabs_initial theme-light\"><div class=\"CodeTabs-toolbar\" role=\"tablist\"><button aria-selected=\"true\" class=\"CodeTabs_active\" role=\"tab\" type=\"button\">JSON</button></div><div class=\"CodeTabs-inner\" role=\"tabpanel\"><pre><button aria-label=\"Copy Code\" class=\"rdmd-code-copy fa\"></button><code class=\"rdmd-code lang-json theme-light\" data-lang=\"json\" name=\"\" tabindex=\"0\">{\n  &quot;$schema&quot;: &quot;https://json-schema.org/draft/2020-12/schema&quot;,\n  &quot;type&quot;: &quot;object&quot;,\n  &quot;properties&quot;: {\n    &quot;type&quot;: {\n      &quot;type&quot;: &quot;integer&quot;,\n      &quot;const&quot;: 0\n    },\n    &quot;instantLock&quot;: {\n      &quot;type&quot;: &quot;array&quot;,\n      &quot;byteArray&quot;: true,\n      &quot;minItems&quot;: 165,\n      &quot;maxItems&quot;: 100000\n    },\n    &quot;transaction&quot;: {\n      &quot;type&quot;: &quot;array&quot;,\n      &quot;byteArray&quot;: true,\n      &quot;minItems&quot;: 1,\n      &quot;maxItems&quot;: 100000\n    },\n    &quot;outputIndex&quot;: {\n      &quot;type&quot;: &quot;integer&quot;,\n      &quot;minimum&quot;: 0\n    }\n  },\n  &quot;additionalProperties&quot;: false,\n  &quot;required&quot;: [\n    &quot;type&quot;,\n    &quot;instantLock&quot;,\n    &quot;transaction&quot;,\n    &quot;outputIndex&quot;\n  ]\n}\n</code></pre></div></div>\n<h3 class=\"heading heading-3 header-scroll\" align=\"\"><div class=\"heading-anchor anchor waypoint\" id=\"chainlock-asset-lock-proof\"></div><div class=\"heading-text\"><div id=\"section-chain-lock-asset-lock-proof\" class=\"heading-anchor_backwardsCompatibility\"></div>ChainLock Asset Lock Proof</div><a aria-label=\"Skip link to ChainLock Asset Lock Proof\" class=\"heading-anchor-icon fa fa-anchor\" href=\"#chainlock-asset-lock-proof\"></a></h3>\n<p>The ChainLock asset lock proof is used for transactions that have note received an InstantSend lock, but have been included in a block that has received a ChainLock.</p>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n<div class=\"rdmd-table\"><div class=\"rdmd-table-inner\"><table><thead><tr><th>Field</th><th>Type</th><th>Description</th></tr></thead><tbody><tr><td>type</td><td>array of bytes</td><td>The type of asset lock proof (<button aria-label=\"Copy Code\" class=\"rdmd-code-copy fa\"></button><code class=\"rdmd-code lang- theme-light\" data-lang=\"\" name=\"\" tabindex=\"0\">1</code> for ChainLocks)</td></tr><tr><td>coreChainLockedHeight</td><td>integer</td><td>Height of the ChainLocked Core block containing the transaction</td></tr><tr><td>outPoint</td><td>object</td><td>The  <a href=\"https://docs.dash.org/projects/core/en/stable/docs/resources/glossary.html#outpoint\" target=\"\" title=\"\">outpoint</a> being used as the asset lock</td></tr></tbody></table></div></div>\n<p>Asset locks using a ChainLock as proof must comply with this JSON-Schema definition established in <a href=\"https://github.com/dashpay/platform/blob/v0.24.5/packages/rs-dpp/src/schema/identity/stateTransition/assetLockProof/chainAssetLockProof.json\" target=\"\" title=\"\">rs-dpp</a>:</p>\n<div class=\"CodeTabs CodeTabs_initial theme-light\"><div class=\"CodeTabs-toolbar\" role=\"tablist\"><button aria-selected=\"true\" class=\"CodeTabs_active\" role=\"tab\" type=\"button\">JSON</button></div><div class=\"CodeTabs-inner\" role=\"tabpanel\"><pre><button aria-label=\"Copy Code\" class=\"rdmd-code-copy fa\"></button><code class=\"rdmd-code lang-json theme-light\" data-lang=\"json\" name=\"\" tabindex=\"0\">{\n  &quot;$schema&quot;: &quot;https://json-schema.org/draft/2020-12/schema&quot;,\n  &quot;type&quot;: &quot;object&quot;,\n  &quot;properties&quot;: {\n    &quot;type&quot;: {\n      &quot;type&quot;: &quot;integer&quot;,\n      &quot;const&quot;: 1\n    },\n    &quot;coreChainLockedHeight&quot;:  {\n      &quot;type&quot;: &quot;integer&quot;,\n      &quot;minimum&quot;: 1,\n      &quot;maximum&quot;: 4294967295\n    },\n    &quot;outPoint&quot;: {\n      &quot;type&quot;: &quot;array&quot;,\n      &quot;byteArray&quot;: true,\n      &quot;minItems&quot;: 36,\n      &quot;maxItems&quot;: 36\n    }\n  },\n  &quot;additionalProperties&quot;: false,\n  &quot;required&quot;: [\n    &quot;type&quot;,\n    &quot;coreChainLockedHeight&quot;,\n    &quot;outPoint&quot;\n  ]\n}\n</code></pre></div></div>\n<h2 class=\"heading heading-2 header-scroll\" align=\"\"><div class=\"heading-anchor anchor waypoint\" id=\"identity-state-transition-signing\"></div><div class=\"heading-text\"><div id=\"section-identity-state-transition-signing\" class=\"heading-anchor_backwardsCompatibility\"></div>Identity State Transition Signing</div><a aria-label=\"Skip link to Identity State Transition Signing\" class=\"heading-anchor-icon fa fa-anchor\" href=\"#identity-state-transition-signing\"></a></h2>\n<p><strong>Note:</strong> The identity create and topup state transition signatures are unique in that they must be signed by the private key used in the layer 1 locking transaction. All other state transitions will be signed by a private key of the identity submitting them.</p>\n<p>The process to sign an identity create state transition consists of the following steps:</p>\n<ol>\n<li>Canonical CBOR encode the state transition data - this include all ST fields except the <button aria-label=\"Copy Code\" class=\"rdmd-code-copy fa\"></button><code class=\"rdmd-code lang- theme-light\" data-lang=\"\" name=\"\" tabindex=\"0\">signature</code></li>\n<li>Sign the encoded data with private key associated with a lock transaction public key</li>\n<li>Set the state transition <button aria-label=\"Copy Code\" class=\"rdmd-code-copy fa\"></button><code class=\"rdmd-code lang- theme-light\" data-lang=\"\" name=\"\" tabindex=\"0\">signature</code> to the value of the signature created in the previous step</li>\n</ol>\n<h3 class=\"heading heading-3 header-scroll\" align=\"\"><div class=\"heading-anchor anchor waypoint\" id=\"code-snipits-related-to-signing\"></div><div class=\"heading-text\"><div id=\"section-code-snipits-related-to-signing\" class=\"heading-anchor_backwardsCompatibility\"></div>Code snipits related to signing</div><a aria-label=\"Skip link to Code snipits related to signing\" class=\"heading-anchor-icon fa fa-anchor\" href=\"#code-snipits-related-to-signing\"></a></h3>\n<div class=\"CodeTabs CodeTabs_initial theme-light\"><div class=\"CodeTabs-toolbar\" role=\"tablist\"><button aria-selected=\"true\" class=\"CodeTabs_active\" role=\"tab\" type=\"button\">Rust</button></div><div class=\"CodeTabs-inner\" role=\"tabpanel\"><pre><button aria-label=\"Copy Code\" class=\"rdmd-code-copy fa\"></button><code class=\"rdmd-code lang-rust theme-light\" data-lang=\"rust\" name=\"\" tabindex=\"0\">/// From rs-dpp\n/// abstract_state_transition.rs\n/// Signs data with the private key\nfn sign_by_private_key(\n    &amp;mut self,\n    private_key: &amp;[u8],\n    key_type: KeyType,\n    bls: &amp;impl BlsModule,\n) -&gt; Result&lt;(), ProtocolError&gt; {\n    let data = self.to_buffer(true)?;\n    match key_type {\n        KeyType::BLS12_381 =&gt; self.set_signature(bls.sign(&amp;data, private_key)?.into()),\n\n        // https://github.com/dashevo/platform/blob/9c8e6a3b6afbc330a6ab551a689de8ccd63f9120/packages/js-dpp/lib/stateTransition/AbstractStateTransition.js#L169\n        KeyType::ECDSA_SECP256K1 | KeyType::ECDSA_HASH160 =&gt; {\n            let signature = signer::sign(&amp;data, private_key)?;\n            self.set_signature(signature.to_vec().into());\n        }\n\n        // the default behavior from\n        // https://github.com/dashevo/platform/blob/6b02b26e5cd3a7c877c5fdfe40c4a4385a8dda15/packages/js-dpp/lib/stateTransition/AbstractStateTransition.js#L187\n        // is to return the error for the BIP13_SCRIPT_HASH\n        KeyType::BIP13_SCRIPT_HASH =&gt; {\n            return Err(ProtocolError::InvalidIdentityPublicKeyTypeError(\n                InvalidIdentityPublicKeyTypeError::new(key_type),\n            ))\n        }\n    };\n    Ok(())\n}\n\n\n/// From rust-dashcore\n/// signer.rs\n/// sign and get the ECDSA signature\npub fn sign(data: &amp;[u8], private_key: &amp;[u8]) -&gt; Result&lt;[u8; 65], anyhow::Error&gt; {\n    let data_hash = double_sha(data);\n    sign_hash(&amp;data_hash, private_key)\n}\n\n/// signs the hash of data and get the ECDSA signature\npub fn sign_hash(data_hash: &amp;[u8], private_key: &amp;[u8]) -&gt; Result&lt;[u8; 65], anyhow::Error&gt; {\n    let pk = SecretKey::from_slice(private_key)\n        .map_err(|e| anyhow!(&quot;Invalid ECDSA private key: {}&quot;, e))?;\n\n    let secp = Secp256k1::new();\n    let msg = Message::from_slice(data_hash).map_err(anyhow::Error::msg)?;\n\n    let signature = secp\n        .sign_ecdsa_recoverable(&amp;msg, &amp;pk)\n        .to_compact_signature(true);\n    Ok(signature)\n}\n</code></pre></div></div>"
}