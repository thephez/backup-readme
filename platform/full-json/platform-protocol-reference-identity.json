{
 "metadata": {
  "image": [],
  "title": "",
  "description": "",
  "keywords": ""
 },
 "api": {
  "method": "get",
  "url": "",
  "auth": "required",
  "results": {
   "codes": [
    {
     "name": "",
     "code": "{}",
     "language": "json",
     "status": 200
    },
    {
     "name": "",
     "code": "{}",
     "language": "json",
     "status": 400
    }
   ]
  },
  "params": []
 },
 "next": {
  "description": "",
  "pages": []
 },
 "algolia": {
  "recordCount": 20,
  "publishPending": false,
  "updatedAt": "2023-09-06T16:36:42.776Z"
 },
 "title": "Identity",
 "icon": "",
 "updates": [],
 "type": "basic",
 "slug": "platform-protocol-reference-identity",
 "excerpt": "",
 "body": "# Identity Overview\n\nIdentities are a low-level construct that provide the foundation for user-facing functionality on the platform. An identity is a public key (or set of public keys) recorded on the platform chain that can be used to prove ownership of data. Please see the [Identity DIP](https://github.com/dashpay/dips/blob/master/dip-0011.md) for additional information.\n\nIdentities consist of three components that are described in further detail in the following sections:\n\n| Field           | Type           | Description                                 |\n| --------------- | -------------- | ------------------------------------------- |\n| protocolVersion | integer        | The protocol version                        |\n| id              | array of bytes | The identity id (32 bytes)                  |\n| publicKeys      | array of keys  | Public key(s) associated with the identity  |\n| balance         | integer        | Credit balance associated with the identity |\n| revision        | integer        | Identity update revision                    |\n\nEach identity must comply with this JSON-Schema definition established in [rs-dpp](https://github.com/dashpay/platform/blob/v0.24.5/packages/rs-dpp/src/schema/identity/identity.json):\n\n```json\n{\n  \"$schema\": \"https://json-schema.org/draft/2020-12/schema\",\n  \"type\": \"object\",\n  \"properties\": {\n    \"protocolVersion\": {\n      \"type\": \"integer\",\n      \"$comment\": \"Maximum is the latest protocol version\"\n    },\n    \"id\": {\n      \"type\": \"array\",\n      \"byteArray\": true,\n      \"minItems\": 32,\n      \"maxItems\": 32,\n      \"contentMediaType\": \"application/x.dash.dpp.identifier\"\n    },\n    \"publicKeys\": {\n      \"type\": \"array\",\n      \"minItems\": 1,\n      \"maxItems\": 32,\n      \"uniqueItems\": true\n    },\n    \"balance\": {\n      \"type\": \"integer\",\n      \"minimum\": 0\n    },\n    \"revision\": {\n      \"type\": \"integer\",\n      \"minimum\": 0,\n      \"description\": \"Identity update revision\"\n  }\n},\n  \"required\": [\n    \"protocolVersion\",\n    \"id\",\n    \"publicKeys\",\n    \"balance\",\n    \"revision\"\n  ]\n}\n```\n\n**Example Identity**\n\n```json\n{\n  \"protocolVersion\":1,\n  \"id\":\"6YfP6tT9AK8HPVXMK7CQrhpc8VMg7frjEnXinSPvUmZC\",\n  \"publicKeys\":[\n    {\n      \"id\":0,\n      \"type\":0,\n      \"purpose\":0,\n      \"securityLevel\":0,\n      \"data\":\"AkWRfl3DJiyyy6YPUDQnNx5KERRnR8CoTiFUvfdaYSDS\",\n      \"readOnly\":false\n    }\n  ],\n  \"balance\":0,\n  \"revision\":0\n}\n```\n\n## Identity id\n\nThe identity `id` is calculated by Base58 encoding the double sha256 hash of the [outpoint](https://docs.dash.org/projects/core/en/stable/docs/resources/glossary.html#outpoint) used to fund the identity creation.\n\n`id = base58(sha256(sha256(<identity create funding output>)))`\n\n**Note:** The identity `id` uses the Dash Platform specific `application/x.dash.dpp.identifier` content media type. For additional information, please refer to the [js-dpp PR 252](https://github.com/dashevo/js-dpp/pull/252) that introduced it and [identifier.rs](https://github.com/dashpay/platform/blob/v0.24.5/packages/rs-platform-value/src/types/identifier.rs).\n\n## Identity publicKeys\n\nThe identity `publicKeys` array stores information regarding each public key associated with the identity. Multiple identities may use the same public key.\n\n**Note:** Since v0.23, each identity must have at least two public keys: a primary key (security level `0`) that is only used when updating the identity and an additional one (security level `2`) used to sign state transitions.\n\nEach item in the `publicKeys` array consists of an object containing:\n\n| Field         | Type           | Description                                                                                                                                                                     |\n| ------------- | -------------- | ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| id            | integer        | The key id (all public keys must be unique)                                                                                                                                     |\n| type          | integer        | Type of key (default: 0 - ECDSA)                                                                                                                                                |\n| data          | array of bytes | Public key (0 - ECDSA: 33 bytes, 1 - BLS: 48 bytes, 2 - ECDSA Hash160: 20 bytes, 3 - [BIP13](https://github.com/bitcoin/bips/blob/master/bip-0013.mediawiki) Hash160: 20 bytes) |\n| purpose       | integer        | Public key purpose (0 - Authentication, 1 - Encryption, 2 - Decryption, 3 - Withdraw)                                                                                           |\n| securityLevel | integer        | Public key security level (0 - Master, 1 - Critical, 2 - High, 3 - Medium)                                                                                                      |\n| readonly      | boolean        | Identity public key can't be modified with `readOnly` set to `true`. This can\u2019t be changed after adding a key.                                                                  |\n| disabledAt    | integer        | Timestamp indicating that the key was disabled at a specified time                                                                                                              |\n\nKeys for some purposes must meet certain [security level criteria](https://github.com/dashpay/platform/blob/v0.24.5/packages/rs-dpp/src/identity/identity_public_key/security_level.rs#L62-L77) as detailed below:\n\n| Key Purpose    | Allowed Security Level(s) |\n| -------------- | ------------------------- |\n| Authentication | Any security level        |\n| Encryption     | Medium                    |\n| Decryption     | Medium                    |\n| Withdraw       | Critical                  |\n\nEach identity public key must comply with this JSON-Schema definition established in [rs-dpp](https://github.com/dashpay/platform/blob/v0.24.5/packages/rs-dpp/src/schema/identity/publicKey.json):\n\n```json\n{\n  \"$schema\": \"https://json-schema.org/draft/2020-12/schema\",\n  \"type\": \"object\",\n  \"properties\": {\n    \"id\": {\n      \"type\": \"integer\",\n      \"minimum\": 0,\n      \"description\": \"Public key ID\",\n      \"$comment\": \"Must be unique for the identity. It can\u2019t be changed after adding a key. Included when signing state transitions to indicate which identity key was used to sign.\"\n    },\n    \"type\": {\n      \"type\": \"integer\",\n      \"enum\": [\n        0,\n        1,\n        2,\n        3\n      ],\n      \"description\": \"Public key type. 0 - ECDSA Secp256k1, 1 - BLS 12-381, 2 - ECDSA Secp256k1 Hash160, 3 - BIP 13 Hash160\",\n      \"$comment\": \"It can't be changed after adding a key\"\n    },\n    \"purpose\": {\n      \"type\": \"integer\",\n      \"enum\": [\n        0,\n        1,\n        2,\n        3\n      ],\n      \"description\": \"Public key purpose. 0 - Authentication, 1 - Encryption, 2 - Decryption, 3 - Withdraw\",\n      \"$comment\": \"It can't be changed after adding a key\"\n    },\n    \"securityLevel\": {\n      \"type\": \"integer\",\n      \"enum\": [\n        0,\n        1,\n        2,\n        3\n      ],\n      \"description\": \"Public key security level. 0 - Master, 1 - Critical, 2 - High, 3 - Medium\",\n      \"$comment\": \"It can't be changed after adding a key\"\n    },\n    \"data\": true,\n    \"readOnly\": {\n      \"type\": \"boolean\",\n      \"description\": \"Read only\",\n      \"$comment\": \"Identity public key can't be modified with readOnly set to true. It can\u2019t be changed after adding a key\"\n    },\n    \"disabledAt\": {\n      \"type\": \"integer\",\n      \"description\": \"Timestamp indicating that the key was disabled at a specified time\",\n      \"minimum\": 0\n    }\n  },\n  \"allOf\": [\n    {\n      \"if\": {\n        \"properties\": {\n          \"type\": {\n            \"const\": 0\n          }\n        }\n      },\n      \"then\": {\n        \"properties\": {\n          \"data\": {\n            \"type\": \"array\",\n            \"byteArray\": true,\n            \"minItems\": 33,\n            \"maxItems\": 33,\n            \"description\": \"Raw ECDSA public key\",\n            \"$comment\": \"It must be a valid key of the specified type and unique for the identity. It can\u2019t be changed after adding a key\"\n          }\n        }\n      }\n    },\n    {\n      \"if\": {\n        \"properties\": {\n          \"type\": {\n            \"const\": 1\n          }\n        }\n      },\n      \"then\": {\n        \"properties\": {\n          \"data\": {\n            \"type\": \"array\",\n            \"byteArray\": true,\n            \"minItems\": 48,\n            \"maxItems\": 48,\n            \"description\": \"Raw BLS public key\",\n            \"$comment\": \"It must be a valid key of the specified type and unique for the identity. It can\u2019t be changed after adding a key\"\n          }\n        }\n      }\n    },\n    {\n      \"if\": {\n        \"properties\": {\n          \"type\": {\n            \"const\": 2\n          }\n        }\n      },\n      \"then\": {\n        \"properties\": {\n          \"data\": {\n            \"type\": \"array\",\n            \"byteArray\": true,\n            \"minItems\": 20,\n            \"maxItems\": 20,\n            \"description\": \"ECDSA Secp256k1 public key Hash160\",\n            \"$comment\": \"It must be a valid key hash of the specified type and unique for the identity. It can\u2019t be changed after adding a key\"\n          }\n        }\n      }\n    },\n    {\n      \"if\": {\n        \"properties\": {\n          \"type\": {\n            \"const\": 3\n          }\n        }\n      },\n      \"then\": {\n        \"properties\": {\n          \"data\": {\n            \"type\": \"array\",\n            \"byteArray\": true,\n            \"minItems\": 20,\n            \"maxItems\": 20,\n            \"description\": \"BIP13 script public key\",\n            \"$comment\": \"It must be a valid script hash of the specified type and unique for the identity\"\n          }\n        }\n      }\n    }\n  ],\n  \"required\": [\n    \"id\",\n    \"type\",\n    \"data\",\n    \"purpose\",\n    \"securityLevel\"\n  ],\n  \"additionalProperties\": false\n}\n```\n\n### Public Key `id`\n\nEach public key in an identity's `publicKeys` array must be assigned a unique index number (`id`).\n\n### Public Key `type`\n\nThe `type` field indicates the algorithm used to derive the key.\n\n| Type | Description                                                                                           |\n| :--: | ----------------------------------------------------------------------------------------------------- |\n|   0  | ECDSA Secp256k1 (default)                                                                             |\n|   1  | BLS 12-381                                                                                            |\n|   2  | ECDSA Secp256k1 Hash160                                                                               |\n|   3  | [BIP13](https://github.com/bitcoin/bips/blob/master/bip-0013.mediawiki) pay-to-script-hash public key |\n\n### Public Key `data`\n\nThe `data` field contains the compressed public key.\n\n### Public Key `purpose`\n\nThe `purpose` field describes which operations are supported by the key. Please refer to [DIP11 - Identities](https://github.com/dashpay/dips/blob/master/dip-0011.md#keys) for additional information regarding this.\n\n| Type | Description    |\n| :--: | -------------- |\n|   0  | Authentication |\n|   1  | Encryption     |\n|   2  | Decryption     |\n|   3  | Withdraw       |\n\n### Public Key `securityLevel`\n\nThe `securityLevel` field indicates how securely the key should be stored by clients. Please refer to [DIP11 - Identities](https://github.com/dashpay/dips/blob/master/dip-0011.md#keys) for additional information regarding this.\n\n| Level | Description | Security Practice                                                                                                                                                                       |\n| :---: | ----------- | --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |\n|   0   | Master      | Should always require a user to authenticate when signing a transition. Can only be used to update an identity.                                                                         |\n|   1   | Critical    | Should always require a user to authenticate when signing a transition                                                                                                                  |\n|   2   | High        | Should be available as long as the user has authenticated at least once during a session. Typically used to sign state transitions, but cannot be used for identity update transitions. |\n|   3   | Medium      | Should not require user authentication but must require access to the client device                                                                                                     |\n\n### Public Key `readOnly`\n\nThe `readOnly` field indicates that the public key can't be modified if it is set to `true`. The  \nvalue of this field cannot be changed after adding the key.\n\n### Public Key `disabledAt`\n\nThe `disabledAt` field indicates that the key has been disabled. Its value equals the timestamp when the key was disabled.\n\n## Identity balance\n\nEach identity has a balance of credits established by value locked via a layer 1 lock transaction. This credit balance is used to pay the fees associated with state transitions.\n\n# Identity State Transition Details\n\nThere are three identity-related state transitions: [identity create](#identity-creation), [identity topup](#identity-topup), and [identity update](#identity-update). Details are provided in this section including information about [asset locking](#asset-lock) and [signing](#identity-state-transition-signing) required for these state transitions.\n\n## Identity Creation\n\nIdentities are created on the platform by submitting the identity information in an identity create state transition.\n\n| Field           | Type           | Description                                                                                         |\n| --------------- | -------------- | --------------------------------------------------------------------------------------------------- |\n| protocolVersion | integer        | The protocol version (currently `1`)                                                                |\n| type            | integer        | State transition type (`2` for identity create)                                                     |\n| assetLockProof  | object         | [Asset lock proof object](#asset-lock) proving the layer 1 locking transaction exists and is locked |\n| publicKeys      | array of keys  | [Public key(s)](#identity-publickeys) associated with the identity                                  |\n| signature       | array of bytes | Signature of state transition data by the single-use key from the asset lock (65 bytes)             |\n\nEach identity must comply with this JSON-Schema definition established in [rs-dpp](https://github.com/dashpay/platform/blob/v0.24.5/packages/rs-dpp/src/schema/identity/stateTransition/identityCreate.json):\n\n```json\n{\n  \"$schema\": \"https://json-schema.org/draft/2020-12/schema\",\n  \"type\": \"object\",\n  \"properties\": {\n    \"protocolVersion\": {\n      \"type\": \"integer\",\n      \"$comment\": \"Maximum is the latest protocol version\"\n    },\n    \"type\": {\n      \"type\": \"integer\",\n      \"const\": 2\n    },\n    \"assetLockProof\": {\n      \"type\": \"object\"\n    },\n    \"publicKeys\": {\n      \"type\": \"array\",\n      \"minItems\": 1,\n      \"maxItems\": 10,\n      \"uniqueItems\": true\n    },\n    \"signature\": {\n      \"type\": \"array\",\n      \"byteArray\": true,\n      \"minItems\": 65,\n      \"maxItems\": 65,\n      \"description\": \"Signature made by AssetLock one time ECDSA key\"\n    }\n  },\n  \"additionalProperties\": false,\n  \"required\": [\n    \"protocolVersion\",\n    \"type\",\n    \"assetLockProof\",\n    \"publicKeys\",\n    \"signature\"\n  ]\n}\n```\n\n**Example State Transition**\n\n```json\n{\n  \"protocolVersion\":1,\n  \"type\":2,\n  \"signature\":\"IBTTgge+/VDa/9+n2q3pb4tAqZYI48AX8X3H/uedRLH5dN8Ekh/sxRRQQS9LaOPwZSCVED6XIYD+vravF2dhYOE=\",\n  \"assetLockProof\":{\n    \"type\":0,\n    \"instantLock\":\"AQHDHQdekbFZJOQFEe1FnRjoDemL/oPF/v9IME/qphjt5gEAAAB/OlZB9p8vPzPE55MlegR7nwhXRpZC4d5sYnOIypNgzfdDRsW01v8UtlRoORokjoDJ9hA/XFMK65iYTrQ8AAAAGI4q8GxtK9LHOT1JipnIfwiiv8zW+C/sbokbMhi/BsEl51dpoeBQEUAYWT7KRiJ4Atx49zIrqsKvmU1mJQza0Y1YbBSS/b/IPO8StX04bItPpDuTp6zlh/G7YOGzlEoe\",\n    \"transaction\":\"0300000001c31d075e91b15924e40511ed459d18e80de98bfe83c5feff48304feaa618ede6010000006b483045022100dd0e4a6c25b1c7ed9aec2c93133f6de27b4c695a062f21f0aed1a2999fccf01c0220384aaf84cd5fd1c741fd1739f5c026a492abbfc18cfde296c6d90e98304f2f76012102fb9e87840f7e0a9b01f955d8eb4d1d2a52b32c9c43c751d7a348482c514ad222ffffffff021027000000000000166a14ea15af58c614b050a3b2e6bcc131fe0e7de37b9801710815000000001976a9140ccc680f945e964f7665f57c0108cba5ca77ed1388ac00000000\",\n    \"outputIndex\":0\n  },\n  \"publicKeys\":[\n    {\n      \"id\":0,\n      \"type\":0,\n      \"purpose\":0,\n      \"securityLevel\":0,\n      \"data\":\"AkWRfl3DJiyyy6YPUDQnNx5KERRnR8CoTiFUvfdaYSDS\",\n      \"readOnly\":false\n    }\n  ]\n}\n```\n\n## Identity TopUp\n\nIdentity credit balances are increased by submitting the topup information in an identity topup state transition.\n\n| Field           | Type           | Description                                                                                          |\n| --------------- | -------------- | ---------------------------------------------------------------------------------------------------- |\n| protocolVersion | integer        | The protocol version (currently `1`)                                                                 |\n| type            | integer        | State transition type (`3` for identity topup)                                                       |\n| assetLockProof  | object         | [Asset lock proof object](#asset-lock) proving the layer 1 locking transaction exists and is locked  |\n| identityId      | array of bytes | An [Identity ID](#identity-id) for the identity receiving the topup (can be any identity) (32 bytes) |\n| signature       | array of bytes | Signature of state transition data by the single-use key from the asset lock (65 bytes)              |\n\nEach identity must comply with this JSON-Schema definition established in [rs-dpp](https://github.com/dashpay/platform/blob/v0.24.5/packages/rs-dpp/src/schema/identity/stateTransition/identityTopUp.json):\n\n```json\n{\n  \"$schema\": \"https://json-schema.org/draft/2020-12/schema\",\n  \"type\": \"object\",\n  \"properties\": {\n    \"protocolVersion\": {\n      \"type\": \"integer\",\n      \"$comment\": \"Maximum is the latest protocol version\"\n    },\n    \"type\": {\n      \"type\": \"integer\",\n      \"const\": 3\n    },\n    \"assetLockProof\": {\n      \"type\": \"object\"\n    },\n    \"identityId\": {\n      \"type\": \"array\",\n      \"byteArray\": true,\n      \"minItems\": 32,\n      \"maxItems\": 32,\n      \"contentMediaType\": \"application/x.dash.dpp.identifier\"\n    },\n    \"signature\": {\n      \"type\": \"array\",\n      \"byteArray\": true,\n      \"minItems\": 65,\n      \"maxItems\": 65,\n      \"description\": \"Signature made by AssetLock one time ECDSA key\"\n    }\n  },\n  \"additionalProperties\": false,\n  \"required\": [\n    \"protocolVersion\",\n    \"type\",\n    \"assetLockProof\",\n    \"identityId\",\n    \"signature\"\n  ]\n}\n```\n\n**Example State Transition**\n\n```json\n{\n  \"protocolVersion\":1,\n  \"type\":3,\n  \"signature\":\"IEqOV4DsbVa+nPipva0UrT0z0ZwubwgP9UdlpwBwXbFSWb7Mxkwqzv1HoEDICJ8GtmUSVjp4Hr2x0cVWe7+yUGc=\",\n  \"identityId\":\"6YfP6tT9AK8HPVXMK7CQrhpc8VMg7frjEnXinSPvUmZC\",\n  \"assetLockProof\":{\n    \"type\":0,\n    \"instantLock\":\"AQF/OlZB9p8vPzPE55MlegR7nwhXRpZC4d5sYnOIypNgzQEAAAAm8edm9p8URNEE9PBo0lEzZ2s9nf4u1SV0MaZyB0JTRasiXu8QtTmfqZWjI3qVtOpUhGPu6r/2fV+0Ffi3AAAAhA77E0aScf+5PTYzgV5WR6VJ/EnjvXyAMmAcu222JyvA7M+5OoCzVF/IQs2IWaPOFsRl1n5C+dMxdvrxhpVLT8QfZJSl19wzybWrHbGRaHDw4iWHvfYdwyXN+vP8UwDz\",\n    \"transaction\":\"03000000017f3a5641f69f2f3f33c4e793257a047b9f0857469642e1de6c627388ca9360cd010000006b483045022100d8c383b15a3738d13b029605d242f041bea874cb4d0def1303ca7cdf76092bf102201b1d401ae9e8cdc5efc061249d2a967960dadce53c66e34d249c42049b48b26701210335b684aa510a9b54a3a4f79283e64482a323190045c239fae5ecb0450c78f965ffffffff02e803000000000000166a14f5383f51784bc4a27e2040bdd6cd9aae7fe6814d31690815000000001976a9144a0511ec3362b35983d0a101f0572dd26abce2ee88ac00000000\",\n    \"outputIndex\":0\n  }\n}\n```\n\n## Identity Update\n\nIdentities are updated on the platform by submitting the identity information in an identity update state transition. This state transition requires either a set of one or more new public keys to add to the identity or a list of existing keys to disable.\n\n| Field                | Type                 | Description                                                                                                              |\n| -------------------- | -------------------- | ------------------------------------------------------------------------------------------------------------------------ |\n| protocolVersion      | integer              | The protocol version (currently `1`)                                                                                     |\n| type                 | integer              | State transition type (`5` for identity update)                                                                          |\n| identityId           | array of bytes       | The identity id (32 bytes)                                                                                               |\n| signature            | array of bytes       | Signature of state transition data (65 bytes)                                                                            |\n| revision             | integer              | Identity update revision                                                                                                 |\n| publicKeysDisabledAt | integer              | (Optional) Timestamp when keys were disabled. Required if `disablePublicKeys` is present.                                |\n| addPublicKeys        | array of public keys | (Optional) Array of up to 10 new public keys to add to the identity. Required if adding keys.                            |\n| disablePublicKeys    | array of integers    | (Optional) Array of up to 10 existing identity public key ID(s) to disable for the identity. Required if disabling keys. |\n| signaturePublicKeyId | integer              | The ID of public key used to sign the state transition                                                                   |\n\nEach identity must comply with this JSON-Schema definition established in [rs-dpp](https://github.com/dashpay/platform/blob/v0.24.5/packages/rs-dpp/src/schema/identity/stateTransition/identityUpdate.json):\n\n```json\n{\n  \"$schema\": \"https://json-schema.org/draft/2020-12/schema\",\n  \"type\": \"object\",\n  \"properties\": {\n    \"protocolVersion\": {\n      \"type\": \"integer\",\n      \"$comment\": \"Maximum is the latest protocol version\"\n    },\n    \"type\": {\n      \"type\": \"integer\",\n      \"const\": 5\n    },\n    \"identityId\": {\n      \"type\": \"array\",\n      \"byteArray\": true,\n      \"minItems\": 32,\n      \"maxItems\": 32,\n      \"contentMediaType\": \"application/x.dash.dpp.identifier\"\n    },\n    \"signature\": {\n      \"type\": \"array\",\n      \"byteArray\": true,\n      \"minItems\": 65,\n      \"maxItems\": 96\n    },\n    \"revision\": {\n      \"type\": \"integer\",\n      \"minimum\": 0,\n      \"description\": \"Identity update revision\"\n    },\n    \"publicKeysDisabledAt\": {\n      \"type\": \"integer\",\n      \"minimum\": 0\n    },\n    \"addPublicKeys\": {\n      \"type\": \"array\",\n      \"minItems\": 1,\n      \"maxItems\": 10,\n      \"uniqueItems\": true\n    },\n    \"disablePublicKeys\": {\n      \"type\": \"array\",\n      \"minItems\": 1,\n      \"maxItems\": 10,\n      \"uniqueItems\": true,\n      \"items\": {\n        \"type\": \"integer\",\n        \"minimum\": 0\n      }\n    },\n    \"signaturePublicKeyId\": {\n      \"type\": \"integer\",\n      \"minimum\": 0\n    }\n  },\n  \"dependentRequired\" : {\n    \"disablePublicKeys\": [\"publicKeysDisabledAt\"],\n    \"publicKeysDisabledAt\": [\"disablePublicKeys\"]\n  },\n  \"anyOf\": [\n    {\n      \"type\": \"object\",\n      \"required\": [\"addPublicKeys\"],\n      \"properties\": {\n        \"addPublicKeys\": true\n      }\n    },\n    {\n      \"type\": \"object\",\n      \"required\": [\"disablePublicKeys\"],\n      \"properties\": {\n        \"disablePublicKeys\": true\n      }\n    }\n  ],\n  \"additionalProperties\": false,\n  \"required\": [\n    \"protocolVersion\",\n    \"type\",\n    \"identityId\",\n    \"signature\",\n    \"revision\",\n    \"signaturePublicKeyId\"\n  ]\n}\n```\n\n## Asset Lock\n\nThe [identity create](#identity-creation) and [identity topup](#identity-topup) state transitions both include an asset lock proof object. This object references the layer 1 lock transaction and includes proof that the transaction is locked.\n\nCurrently there are two types of asset lock proofs: InstantSend and ChainLock. Transactions almost always receive InstantSend locks, so the InstantSend asset lock proof is the predominate type.\n\n### InstantSend Asset Lock Proof\n\nThe InstantSend asset lock proof is used for transactions that have received an InstantSend lock.\n\n| Field       | Type           | Description                                                                                                                                  |\n| ----------- | -------------- | -------------------------------------------------------------------------------------------------------------------------------------------- |\n| type        | integer        | The asset lock proof type (`0` for InstantSend locks)                                                                                        |\n| instantLock | array of bytes | The InstantSend lock ([`islock`](https://docs.dash.org/projects/core/en/stable/docs/reference/p2p-network-instantsend-messages.html#islock)) |\n| transaction | array of bytes | The asset lock transaction                                                                                                                   |\n| outputIndex | integer        | Index of the transaction output to be used                                                                                                   |\n\nAsset locks using an InstantSend lock as proof must comply with this JSON-Schema definition established in [rs-dpp](https://github.com/dashpay/platform/blob/v0.24.5/packages/rs-dpp/src/schema/identity/stateTransition/assetLockProof/instantAssetLockProof.json):\n\n```json\n{\n  \"$schema\": \"https://json-schema.org/draft/2020-12/schema\",\n  \"type\": \"object\",\n  \"properties\": {\n    \"type\": {\n      \"type\": \"integer\",\n      \"const\": 0\n    },\n    \"instantLock\": {\n      \"type\": \"array\",\n      \"byteArray\": true,\n      \"minItems\": 165,\n      \"maxItems\": 100000\n    },\n    \"transaction\": {\n      \"type\": \"array\",\n      \"byteArray\": true,\n      \"minItems\": 1,\n      \"maxItems\": 100000\n    },\n    \"outputIndex\": {\n      \"type\": \"integer\",\n      \"minimum\": 0\n    }\n  },\n  \"additionalProperties\": false,\n  \"required\": [\n    \"type\",\n    \"instantLock\",\n    \"transaction\",\n    \"outputIndex\"\n  ]\n}\n```\n\n### ChainLock Asset Lock Proof\n\nThe ChainLock asset lock proof is used for transactions that have note received an InstantSend lock, but have been included in a block that has received a ChainLock.\n\n| Field                 | Type           | Description                                                                                                                       |\n| --------------------- | -------------- | --------------------------------------------------------------------------------------------------------------------------------- |\n| type                  | array of bytes | The type of asset lock proof (`1` for ChainLocks)                                                                                 |\n| coreChainLockedHeight | integer        | Height of the ChainLocked Core block containing the transaction                                                                   |\n| outPoint              | object         | The  [outpoint](https://docs.dash.org/projects/core/en/stable/docs/resources/glossary.html#outpoint) being used as the asset lock |\n\nAsset locks using a ChainLock as proof must comply with this JSON-Schema definition established in [rs-dpp](https://github.com/dashpay/platform/blob/v0.24.5/packages/rs-dpp/src/schema/identity/stateTransition/assetLockProof/chainAssetLockProof.json):\n\n```json\n{\n  \"$schema\": \"https://json-schema.org/draft/2020-12/schema\",\n  \"type\": \"object\",\n  \"properties\": {\n    \"type\": {\n      \"type\": \"integer\",\n      \"const\": 1\n    },\n    \"coreChainLockedHeight\":  {\n      \"type\": \"integer\",\n      \"minimum\": 1,\n      \"maximum\": 4294967295\n    },\n    \"outPoint\": {\n      \"type\": \"array\",\n      \"byteArray\": true,\n      \"minItems\": 36,\n      \"maxItems\": 36\n    }\n  },\n  \"additionalProperties\": false,\n  \"required\": [\n    \"type\",\n    \"coreChainLockedHeight\",\n    \"outPoint\"\n  ]\n}\n```\n\n## Identity State Transition Signing\n\n**Note:** The identity create and topup state transition signatures are unique in that they must be signed by the private key used in the layer 1 locking transaction. All other state transitions will be signed by a private key of the identity submitting them.\n\nThe process to sign an identity create state transition consists of the following steps:\n\n1. Canonical CBOR encode the state transition data - this include all ST fields except the `signature`\n2. Sign the encoded data with private key associated with a lock transaction public key\n3. Set the state transition `signature` to the value of the signature created in the previous step\n\n### Code snipits related to signing\n\n```rust\n/// From rs-dpp\n/// abstract_state_transition.rs\n/// Signs data with the private key\nfn sign_by_private_key(\n    &mut self,\n    private_key: &[u8],\n    key_type: KeyType,\n    bls: &impl BlsModule,\n) -> Result<(), ProtocolError> {\n    let data = self.to_buffer(true)?;\n    match key_type {\n        KeyType::BLS12_381 => self.set_signature(bls.sign(&data, private_key)?.into()),\n\n        // https://github.com/dashevo/platform/blob/9c8e6a3b6afbc330a6ab551a689de8ccd63f9120/packages/js-dpp/lib/stateTransition/AbstractStateTransition.js#L169\n        KeyType::ECDSA_SECP256K1 | KeyType::ECDSA_HASH160 => {\n            let signature = signer::sign(&data, private_key)?;\n            self.set_signature(signature.to_vec().into());\n        }\n\n        // the default behavior from\n        // https://github.com/dashevo/platform/blob/6b02b26e5cd3a7c877c5fdfe40c4a4385a8dda15/packages/js-dpp/lib/stateTransition/AbstractStateTransition.js#L187\n        // is to return the error for the BIP13_SCRIPT_HASH\n        KeyType::BIP13_SCRIPT_HASH => {\n            return Err(ProtocolError::InvalidIdentityPublicKeyTypeError(\n                InvalidIdentityPublicKeyTypeError::new(key_type),\n            ))\n        }\n    };\n    Ok(())\n}\n\n\n/// From rust-dashcore\n/// signer.rs\n/// sign and get the ECDSA signature\npub fn sign(data: &[u8], private_key: &[u8]) -> Result<[u8; 65], anyhow::Error> {\n    let data_hash = double_sha(data);\n    sign_hash(&data_hash, private_key)\n}\n\n/// signs the hash of data and get the ECDSA signature\npub fn sign_hash(data_hash: &[u8], private_key: &[u8]) -> Result<[u8; 65], anyhow::Error> {\n    let pk = SecretKey::from_slice(private_key)\n        .map_err(|e| anyhow!(\"Invalid ECDSA private key: {}\", e))?;\n\n    let secp = Secp256k1::new();\n    let msg = Message::from_slice(data_hash).map_err(anyhow::Error::msg)?;\n\n    let signature = secp\n        .sign_ecdsa_recoverable(&msg, &pk)\n        .to_compact_signature(true);\n    Ok(signature)\n}\n```",
 "order": 1,
 "isReference": false,
 "deprecated": false,
 "hidden": false,
 "sync_unique": "",
 "link_url": "",
 "link_external": false,
 "reusableContent": [],
 "previousSlug": "reference-identity",
 "slugUpdatedAt": "2020-11-17T18:27:09.014Z",
 "revision": 3,
 "_id": "64f8a9df750465004742adbd",
 "pendingAlgoliaPublish": false,
 "createdAt": "2020-09-02T14:23:32.748Z",
 "updatedAt": "2023-06-05T18:21:04.326Z",
 "user": "5b8400d7185d5e00036dcc3b",
 "category": "64f8a9df750465004742ad73",
 "project": "5bda01cad172e200499a20a9",
 "version": "64f8a9df750465004742ae1d",
 "__v": 0,
 "parentDoc": null,
 "isApi": false,
 "id": "64f8a9df750465004742adbd",
 "body_html": "<div class=\"magic-block-textarea\"><h1 class=\"header-scroll\"><div class=\"anchor waypoint\" id=\"section-identity-overview\"></div>Identity Overview<a class=\"fa fa-anchor\" href=\"#section-identity-overview\"></a></h1>\n<p>Identities are a low-level construct that provide the foundation for user-facing functionality on the platform. An identity is a public key (or set of public keys) recorded on the platform chain that can be used to prove ownership of data. Please see the <a href=\"https://github.com/dashpay/dips/blob/master/dip-0011.md\">Identity DIP</a> for additional information.</p>\n<p>Identities consist of three components that are described in further detail in the following sections:</p>\n<div class=\"marked-table\"><table>\n<thead>\n<tr>\n<th>Field</th>\n<th>Type</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>protocolVersion</td>\n<td>integer</td>\n<td>The protocol version</td>\n</tr>\n<tr>\n<td>id</td>\n<td>array of bytes</td>\n<td>The identity id (32 bytes)</td>\n</tr>\n<tr>\n<td>publicKeys</td>\n<td>array of keys</td>\n<td>Public key(s) associated with the identity</td>\n</tr>\n<tr>\n<td>balance</td>\n<td>integer</td>\n<td>Credit balance associated with the identity</td>\n</tr>\n<tr>\n<td>revision</td>\n<td>integer</td>\n<td>Identity update revision</td>\n</tr>\n</tbody>\n</table></div>\n<p>Each identity must comply with this JSON-Schema definition established in <a href=\"https://github.com/dashpay/platform/blob/v0.24.5/packages/rs-dpp/src/schema/identity/identity.json\">rs-dpp</a>:</p>\n<pre><code class=\"lang-json\"><span class='cm-s-neo'>{\n  <span class=\"cm-property\">\"$schema\"</span>: <span class=\"cm-string\">\"https:&#47;&#47;json-schema.org&#47;draft&#47;2020-12&#47;schema\"</span>,\n  <span class=\"cm-property\">\"type\"</span>: <span class=\"cm-string\">\"object\"</span>,\n  <span class=\"cm-property\">\"properties\"</span>: {\n    <span class=\"cm-property\">\"protocolVersion\"</span>: {\n      <span class=\"cm-property\">\"type\"</span>: <span class=\"cm-string\">\"integer\"</span>,\n      <span class=\"cm-property\">\"$comment\"</span>: <span class=\"cm-string\">\"Maximum is the latest protocol version\"</span>\n    },\n    <span class=\"cm-property\">\"id\"</span>: {\n      <span class=\"cm-property\">\"type\"</span>: <span class=\"cm-string\">\"array\"</span>,\n      <span class=\"cm-property\">\"byteArray\"</span>: <span class=\"cm-atom\">true</span>,\n      <span class=\"cm-property\">\"minItems\"</span>: <span class=\"cm-number\">32</span>,\n      <span class=\"cm-property\">\"maxItems\"</span>: <span class=\"cm-number\">32</span>,\n      <span class=\"cm-property\">\"contentMediaType\"</span>: <span class=\"cm-string\">\"application&#47;x.dash.dpp.identifier\"</span>\n    },\n    <span class=\"cm-property\">\"publicKeys\"</span>: {\n      <span class=\"cm-property\">\"type\"</span>: <span class=\"cm-string\">\"array\"</span>,\n      <span class=\"cm-property\">\"minItems\"</span>: <span class=\"cm-number\">1</span>,\n      <span class=\"cm-property\">\"maxItems\"</span>: <span class=\"cm-number\">32</span>,\n      <span class=\"cm-property\">\"uniqueItems\"</span>: <span class=\"cm-atom\">true</span>\n    },\n    <span class=\"cm-property\">\"balance\"</span>: {\n      <span class=\"cm-property\">\"type\"</span>: <span class=\"cm-string\">\"integer\"</span>,\n      <span class=\"cm-property\">\"minimum\"</span>: <span class=\"cm-number\">0</span>\n    },\n    <span class=\"cm-property\">\"revision\"</span>: {\n      <span class=\"cm-property\">\"type\"</span>: <span class=\"cm-string\">\"integer\"</span>,\n      <span class=\"cm-property\">\"minimum\"</span>: <span class=\"cm-number\">0</span>,\n      <span class=\"cm-property\">\"description\"</span>: <span class=\"cm-string\">\"Identity update revision\"</span>\n  }\n},\n  <span class=\"cm-property\">\"required\"</span>: [\n    <span class=\"cm-string\">\"protocolVersion\"</span>,\n    <span class=\"cm-string\">\"id\"</span>,\n    <span class=\"cm-string\">\"publicKeys\"</span>,\n    <span class=\"cm-string\">\"balance\"</span>,\n    <span class=\"cm-string\">\"revision\"</span>\n  ]\n}</span>\n</code></pre>\n<p><strong>Example Identity</strong></p>\n<pre><code class=\"lang-json\"><span class='cm-s-neo'>{\n  <span class=\"cm-property\">\"protocolVersion\"</span>:<span class=\"cm-number\">1</span>,\n  <span class=\"cm-property\">\"id\"</span>:<span class=\"cm-string\">\"6YfP6tT9AK8HPVXMK7CQrhpc8VMg7frjEnXinSPvUmZC\"</span>,\n  <span class=\"cm-property\">\"publicKeys\"</span>:[\n    {\n      <span class=\"cm-property\">\"id\"</span>:<span class=\"cm-number\">0</span>,\n      <span class=\"cm-property\">\"type\"</span>:<span class=\"cm-number\">0</span>,\n      <span class=\"cm-property\">\"purpose\"</span>:<span class=\"cm-number\">0</span>,\n      <span class=\"cm-property\">\"securityLevel\"</span>:<span class=\"cm-number\">0</span>,\n      <span class=\"cm-property\">\"data\"</span>:<span class=\"cm-string\">\"AkWRfl3DJiyyy6YPUDQnNx5KERRnR8CoTiFUvfdaYSDS\"</span>,\n      <span class=\"cm-property\">\"readOnly\"</span>:<span class=\"cm-atom\">false</span>\n    }\n  ],\n  <span class=\"cm-property\">\"balance\"</span>:<span class=\"cm-number\">0</span>,\n  <span class=\"cm-property\">\"revision\"</span>:<span class=\"cm-number\">0</span>\n}</span>\n</code></pre>\n<h2 class=\"header-scroll\"><div class=\"anchor waypoint\" id=\"section-identity-id\"></div>Identity id<a class=\"fa fa-anchor\" href=\"#section-identity-id\"></a></h2>\n<p>The identity <code>id</code> is calculated by Base58 encoding the double sha256 hash of the <a href=\"https://docs.dash.org/projects/core/en/stable/docs/resources/glossary.html#outpoint\">outpoint</a> used to fund the identity creation.</p>\n<p><code>id = base58(sha256(sha256(&lt;identity create funding output&gt;)))</code></p>\n<p><strong>Note:</strong> The identity <code>id</code> uses the Dash Platform specific <code>application/x.dash.dpp.identifier</code> content media type. For additional information, please refer to the <a href=\"https://github.com/dashevo/js-dpp/pull/252\">js-dpp PR 252</a> that introduced it and <a href=\"https://github.com/dashpay/platform/blob/v0.24.5/packages/rs-platform-value/src/types/identifier.rs\">identifier.rs</a>.</p>\n<h2 class=\"header-scroll\"><div class=\"anchor waypoint\" id=\"section-identity-public-keys\"></div>Identity publicKeys<a class=\"fa fa-anchor\" href=\"#section-identity-public-keys\"></a></h2>\n<p>The identity <code>publicKeys</code> array stores information regarding each public key associated with the identity. Multiple identities may use the same public key.</p>\n<p><strong>Note:</strong> Since v0.23, each identity must have at least two public keys: a primary key (security level <code>0</code>) that is only used when updating the identity and an additional one (security level <code>2</code>) used to sign state transitions.</p>\n<p>Each item in the <code>publicKeys</code> array consists of an object containing:</p>\n<div class=\"marked-table\"><table>\n<thead>\n<tr>\n<th>Field</th>\n<th>Type</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>id</td>\n<td>integer</td>\n<td>The key id (all public keys must be unique)</td>\n</tr>\n<tr>\n<td>type</td>\n<td>integer</td>\n<td>Type of key (default: 0 - ECDSA)</td>\n</tr>\n<tr>\n<td>data</td>\n<td>array of bytes</td>\n<td>Public key (0 - ECDSA: 33 bytes, 1 - BLS: 48 bytes, 2 - ECDSA Hash160: 20 bytes, 3 - <a href=\"https://github.com/bitcoin/bips/blob/master/bip-0013.mediawiki\">BIP13</a> Hash160: 20 bytes)</td>\n</tr>\n<tr>\n<td>purpose</td>\n<td>integer</td>\n<td>Public key purpose (0 - Authentication, 1 - Encryption, 2 - Decryption, 3 - Withdraw)</td>\n</tr>\n<tr>\n<td>securityLevel</td>\n<td>integer</td>\n<td>Public key security level (0 - Master, 1 - Critical, 2 - High, 3 - Medium)</td>\n</tr>\n<tr>\n<td>readonly</td>\n<td>boolean</td>\n<td>Identity public key can&#39;t be modified with <code>readOnly</code> set to <code>true</code>. This can\u2019t be changed after adding a key.</td>\n</tr>\n<tr>\n<td>disabledAt</td>\n<td>integer</td>\n<td>Timestamp indicating that the key was disabled at a specified time</td>\n</tr>\n</tbody>\n</table></div>\n<p>Keys for some purposes must meet certain <a href=\"https://github.com/dashpay/platform/blob/v0.24.5/packages/rs-dpp/src/identity/identity_public_key/security_level.rs#L62-L77\">security level criteria</a> as detailed below:</p>\n<div class=\"marked-table\"><table>\n<thead>\n<tr>\n<th>Key Purpose</th>\n<th>Allowed Security Level(s)</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Authentication</td>\n<td>Any security level</td>\n</tr>\n<tr>\n<td>Encryption</td>\n<td>Medium</td>\n</tr>\n<tr>\n<td>Decryption</td>\n<td>Medium</td>\n</tr>\n<tr>\n<td>Withdraw</td>\n<td>Critical</td>\n</tr>\n</tbody>\n</table></div>\n<p>Each identity public key must comply with this JSON-Schema definition established in <a href=\"https://github.com/dashpay/platform/blob/v0.24.5/packages/rs-dpp/src/schema/identity/publicKey.json\">rs-dpp</a>:</p>\n<pre><code class=\"lang-json\"><span class='cm-s-neo'>{\n  <span class=\"cm-property\">\"$schema\"</span>: <span class=\"cm-string\">\"https:&#47;&#47;json-schema.org&#47;draft&#47;2020-12&#47;schema\"</span>,\n  <span class=\"cm-property\">\"type\"</span>: <span class=\"cm-string\">\"object\"</span>,\n  <span class=\"cm-property\">\"properties\"</span>: {\n    <span class=\"cm-property\">\"id\"</span>: {\n      <span class=\"cm-property\">\"type\"</span>: <span class=\"cm-string\">\"integer\"</span>,\n      <span class=\"cm-property\">\"minimum\"</span>: <span class=\"cm-number\">0</span>,\n      <span class=\"cm-property\">\"description\"</span>: <span class=\"cm-string\">\"Public key ID\"</span>,\n      <span class=\"cm-property\">\"$comment\"</span>: <span class=\"cm-string\">\"Must be unique for the identity. It can\u2019t be changed after adding a key. Included when signing state transitions to indicate which identity key was used to sign.\"</span>\n    },\n    <span class=\"cm-property\">\"type\"</span>: {\n      <span class=\"cm-property\">\"type\"</span>: <span class=\"cm-string\">\"integer\"</span>,\n      <span class=\"cm-property\">\"enum\"</span>: [\n        <span class=\"cm-number\">0</span>,\n        <span class=\"cm-number\">1</span>,\n        <span class=\"cm-number\">2</span>,\n        <span class=\"cm-number\">3</span>\n      ],\n      <span class=\"cm-property\">\"description\"</span>: <span class=\"cm-string\">\"Public key type. 0 - ECDSA Secp256k1, 1 - BLS 12-381, 2 - ECDSA Secp256k1 Hash160, 3 - BIP 13 Hash160\"</span>,\n      <span class=\"cm-property\">\"$comment\"</span>: <span class=\"cm-string\">\"It can't be changed after adding a key\"</span>\n    },\n    <span class=\"cm-property\">\"purpose\"</span>: {\n      <span class=\"cm-property\">\"type\"</span>: <span class=\"cm-string\">\"integer\"</span>,\n      <span class=\"cm-property\">\"enum\"</span>: [\n        <span class=\"cm-number\">0</span>,\n        <span class=\"cm-number\">1</span>,\n        <span class=\"cm-number\">2</span>,\n        <span class=\"cm-number\">3</span>\n      ],\n      <span class=\"cm-property\">\"description\"</span>: <span class=\"cm-string\">\"Public key purpose. 0 - Authentication, 1 - Encryption, 2 - Decryption, 3 - Withdraw\"</span>,\n      <span class=\"cm-property\">\"$comment\"</span>: <span class=\"cm-string\">\"It can't be changed after adding a key\"</span>\n    },\n    <span class=\"cm-property\">\"securityLevel\"</span>: {\n      <span class=\"cm-property\">\"type\"</span>: <span class=\"cm-string\">\"integer\"</span>,\n      <span class=\"cm-property\">\"enum\"</span>: [\n        <span class=\"cm-number\">0</span>,\n        <span class=\"cm-number\">1</span>,\n        <span class=\"cm-number\">2</span>,\n        <span class=\"cm-number\">3</span>\n      ],\n      <span class=\"cm-property\">\"description\"</span>: <span class=\"cm-string\">\"Public key security level. 0 - Master, 1 - Critical, 2 - High, 3 - Medium\"</span>,\n      <span class=\"cm-property\">\"$comment\"</span>: <span class=\"cm-string\">\"It can't be changed after adding a key\"</span>\n    },\n    <span class=\"cm-property\">\"data\"</span>: <span class=\"cm-atom\">true</span>,\n    <span class=\"cm-property\">\"readOnly\"</span>: {\n      <span class=\"cm-property\">\"type\"</span>: <span class=\"cm-string\">\"boolean\"</span>,\n      <span class=\"cm-property\">\"description\"</span>: <span class=\"cm-string\">\"Read only\"</span>,\n      <span class=\"cm-property\">\"$comment\"</span>: <span class=\"cm-string\">\"Identity public key can't be modified with readOnly set to true. It can\u2019t be changed after adding a key\"</span>\n    },\n    <span class=\"cm-property\">\"disabledAt\"</span>: {\n      <span class=\"cm-property\">\"type\"</span>: <span class=\"cm-string\">\"integer\"</span>,\n      <span class=\"cm-property\">\"description\"</span>: <span class=\"cm-string\">\"Timestamp indicating that the key was disabled at a specified time\"</span>,\n      <span class=\"cm-property\">\"minimum\"</span>: <span class=\"cm-number\">0</span>\n    }\n  },\n  <span class=\"cm-property\">\"allOf\"</span>: [\n    {\n      <span class=\"cm-property\">\"if\"</span>: {\n        <span class=\"cm-property\">\"properties\"</span>: {\n          <span class=\"cm-property\">\"type\"</span>: {\n            <span class=\"cm-property\">\"const\"</span>: <span class=\"cm-number\">0</span>\n          }\n        }\n      },\n      <span class=\"cm-property\">\"then\"</span>: {\n        <span class=\"cm-property\">\"properties\"</span>: {\n          <span class=\"cm-property\">\"data\"</span>: {\n            <span class=\"cm-property\">\"type\"</span>: <span class=\"cm-string\">\"array\"</span>,\n            <span class=\"cm-property\">\"byteArray\"</span>: <span class=\"cm-atom\">true</span>,\n            <span class=\"cm-property\">\"minItems\"</span>: <span class=\"cm-number\">33</span>,\n            <span class=\"cm-property\">\"maxItems\"</span>: <span class=\"cm-number\">33</span>,\n            <span class=\"cm-property\">\"description\"</span>: <span class=\"cm-string\">\"Raw ECDSA public key\"</span>,\n            <span class=\"cm-property\">\"$comment\"</span>: <span class=\"cm-string\">\"It must be a valid key of the specified type and unique for the identity. It can\u2019t be changed after adding a key\"</span>\n          }\n        }\n      }\n    },\n    {\n      <span class=\"cm-property\">\"if\"</span>: {\n        <span class=\"cm-property\">\"properties\"</span>: {\n          <span class=\"cm-property\">\"type\"</span>: {\n            <span class=\"cm-property\">\"const\"</span>: <span class=\"cm-number\">1</span>\n          }\n        }\n      },\n      <span class=\"cm-property\">\"then\"</span>: {\n        <span class=\"cm-property\">\"properties\"</span>: {\n          <span class=\"cm-property\">\"data\"</span>: {\n            <span class=\"cm-property\">\"type\"</span>: <span class=\"cm-string\">\"array\"</span>,\n            <span class=\"cm-property\">\"byteArray\"</span>: <span class=\"cm-atom\">true</span>,\n            <span class=\"cm-property\">\"minItems\"</span>: <span class=\"cm-number\">48</span>,\n            <span class=\"cm-property\">\"maxItems\"</span>: <span class=\"cm-number\">48</span>,\n            <span class=\"cm-property\">\"description\"</span>: <span class=\"cm-string\">\"Raw BLS public key\"</span>,\n            <span class=\"cm-property\">\"$comment\"</span>: <span class=\"cm-string\">\"It must be a valid key of the specified type and unique for the identity. It can\u2019t be changed after adding a key\"</span>\n          }\n        }\n      }\n    },\n    {\n      <span class=\"cm-property\">\"if\"</span>: {\n        <span class=\"cm-property\">\"properties\"</span>: {\n          <span class=\"cm-property\">\"type\"</span>: {\n            <span class=\"cm-property\">\"const\"</span>: <span class=\"cm-number\">2</span>\n          }\n        }\n      },\n      <span class=\"cm-property\">\"then\"</span>: {\n        <span class=\"cm-property\">\"properties\"</span>: {\n          <span class=\"cm-property\">\"data\"</span>: {\n            <span class=\"cm-property\">\"type\"</span>: <span class=\"cm-string\">\"array\"</span>,\n            <span class=\"cm-property\">\"byteArray\"</span>: <span class=\"cm-atom\">true</span>,\n            <span class=\"cm-property\">\"minItems\"</span>: <span class=\"cm-number\">20</span>,\n            <span class=\"cm-property\">\"maxItems\"</span>: <span class=\"cm-number\">20</span>,\n            <span class=\"cm-property\">\"description\"</span>: <span class=\"cm-string\">\"ECDSA Secp256k1 public key Hash160\"</span>,\n            <span class=\"cm-property\">\"$comment\"</span>: <span class=\"cm-string\">\"It must be a valid key hash of the specified type and unique for the identity. It can\u2019t be changed after adding a key\"</span>\n          }\n        }\n      }\n    },\n    {\n      <span class=\"cm-property\">\"if\"</span>: {\n        <span class=\"cm-property\">\"properties\"</span>: {\n          <span class=\"cm-property\">\"type\"</span>: {\n            <span class=\"cm-property\">\"const\"</span>: <span class=\"cm-number\">3</span>\n          }\n        }\n      },\n      <span class=\"cm-property\">\"then\"</span>: {\n        <span class=\"cm-property\">\"properties\"</span>: {\n          <span class=\"cm-property\">\"data\"</span>: {\n            <span class=\"cm-property\">\"type\"</span>: <span class=\"cm-string\">\"array\"</span>,\n            <span class=\"cm-property\">\"byteArray\"</span>: <span class=\"cm-atom\">true</span>,\n            <span class=\"cm-property\">\"minItems\"</span>: <span class=\"cm-number\">20</span>,\n            <span class=\"cm-property\">\"maxItems\"</span>: <span class=\"cm-number\">20</span>,\n            <span class=\"cm-property\">\"description\"</span>: <span class=\"cm-string\">\"BIP13 script public key\"</span>,\n            <span class=\"cm-property\">\"$comment\"</span>: <span class=\"cm-string\">\"It must be a valid script hash of the specified type and unique for the identity\"</span>\n          }\n        }\n      }\n    }\n  ],\n  <span class=\"cm-property\">\"required\"</span>: [\n    <span class=\"cm-string\">\"id\"</span>,\n    <span class=\"cm-string\">\"type\"</span>,\n    <span class=\"cm-string\">\"data\"</span>,\n    <span class=\"cm-string\">\"purpose\"</span>,\n    <span class=\"cm-string\">\"securityLevel\"</span>\n  ],\n  <span class=\"cm-property\">\"additionalProperties\"</span>: <span class=\"cm-atom\">false</span>\n}</span>\n</code></pre>\n<h3 class=\"header-scroll\"><div class=\"anchor waypoint\" id=\"section-public-key-id\"></div>Public Key <code>id</code><a class=\"fa fa-anchor\" href=\"#section-public-key-id\"></a></h3>\n<p>Each public key in an identity&#39;s <code>publicKeys</code> array must be assigned a unique index number (<code>id</code>).</p>\n<h3 class=\"header-scroll\"><div class=\"anchor waypoint\" id=\"section-public-key-type\"></div>Public Key <code>type</code><a class=\"fa fa-anchor\" href=\"#section-public-key-type\"></a></h3>\n<p>The <code>type</code> field indicates the algorithm used to derive the key.</p>\n<div class=\"marked-table\"><table>\n<thead>\n<tr>\n<th style=\"text-align:center\">Type</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">0</td>\n<td>ECDSA Secp256k1 (default)</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">1</td>\n<td>BLS 12-381</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">2</td>\n<td>ECDSA Secp256k1 Hash160</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">3</td>\n<td><a href=\"https://github.com/bitcoin/bips/blob/master/bip-0013.mediawiki\">BIP13</a> pay-to-script-hash public key</td>\n</tr>\n</tbody>\n</table></div>\n<h3 class=\"header-scroll\"><div class=\"anchor waypoint\" id=\"section-public-key-data\"></div>Public Key <code>data</code><a class=\"fa fa-anchor\" href=\"#section-public-key-data\"></a></h3>\n<p>The <code>data</code> field contains the compressed public key.</p>\n<h3 class=\"header-scroll\"><div class=\"anchor waypoint\" id=\"section-public-key-purpose\"></div>Public Key <code>purpose</code><a class=\"fa fa-anchor\" href=\"#section-public-key-purpose\"></a></h3>\n<p>The <code>purpose</code> field describes which operations are supported by the key. Please refer to <a href=\"https://github.com/dashpay/dips/blob/master/dip-0011.md#keys\">DIP11 - Identities</a> for additional information regarding this.</p>\n<div class=\"marked-table\"><table>\n<thead>\n<tr>\n<th style=\"text-align:center\">Type</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">0</td>\n<td>Authentication</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">1</td>\n<td>Encryption</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">2</td>\n<td>Decryption</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">3</td>\n<td>Withdraw</td>\n</tr>\n</tbody>\n</table></div>\n<h3 class=\"header-scroll\"><div class=\"anchor waypoint\" id=\"section-public-key-security-level\"></div>Public Key <code>securityLevel</code><a class=\"fa fa-anchor\" href=\"#section-public-key-security-level\"></a></h3>\n<p>The <code>securityLevel</code> field indicates how securely the key should be stored by clients. Please refer to <a href=\"https://github.com/dashpay/dips/blob/master/dip-0011.md#keys\">DIP11 - Identities</a> for additional information regarding this.</p>\n<div class=\"marked-table\"><table>\n<thead>\n<tr>\n<th style=\"text-align:center\">Level</th>\n<th>Description</th>\n<th>Security Practice</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">0</td>\n<td>Master</td>\n<td>Should always require a user to authenticate when signing a transition. Can only be used to update an identity.</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">1</td>\n<td>Critical</td>\n<td>Should always require a user to authenticate when signing a transition</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">2</td>\n<td>High</td>\n<td>Should be available as long as the user has authenticated at least once during a session. Typically used to sign state transitions, but cannot be used for identity update transitions.</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">3</td>\n<td>Medium</td>\n<td>Should not require user authentication but must require access to the client device</td>\n</tr>\n</tbody>\n</table></div>\n<h3 class=\"header-scroll\"><div class=\"anchor waypoint\" id=\"section-public-key-read-only\"></div>Public Key <code>readOnly</code><a class=\"fa fa-anchor\" href=\"#section-public-key-read-only\"></a></h3>\n<p>The <code>readOnly</code> field indicates that the public key can&#39;t be modified if it is set to <code>true</code>. The<br>value of this field cannot be changed after adding the key.</p>\n<h3 class=\"header-scroll\"><div class=\"anchor waypoint\" id=\"section-public-key-disabled-at\"></div>Public Key <code>disabledAt</code><a class=\"fa fa-anchor\" href=\"#section-public-key-disabled-at\"></a></h3>\n<p>The <code>disabledAt</code> field indicates that the key has been disabled. Its value equals the timestamp when the key was disabled.</p>\n<h2 class=\"header-scroll\"><div class=\"anchor waypoint\" id=\"section-identity-balance\"></div>Identity balance<a class=\"fa fa-anchor\" href=\"#section-identity-balance\"></a></h2>\n<p>Each identity has a balance of credits established by value locked via a layer 1 lock transaction. This credit balance is used to pay the fees associated with state transitions.</p>\n<h1 class=\"header-scroll\"><div class=\"anchor waypoint\" id=\"section-identity-state-transition-details\"></div>Identity State Transition Details<a class=\"fa fa-anchor\" href=\"#section-identity-state-transition-details\"></a></h1>\n<p>There are three identity-related state transitions: <a href=\"#identity-creation\">identity create</a>, <a href=\"#identity-topup\">identity topup</a>, and <a href=\"#identity-update\">identity update</a>. Details are provided in this section including information about <a href=\"#asset-lock\">asset locking</a> and <a href=\"#identity-state-transition-signing\">signing</a> required for these state transitions.</p>\n<h2 class=\"header-scroll\"><div class=\"anchor waypoint\" id=\"section-identity-creation\"></div>Identity Creation<a class=\"fa fa-anchor\" href=\"#section-identity-creation\"></a></h2>\n<p>Identities are created on the platform by submitting the identity information in an identity create state transition.</p>\n<div class=\"marked-table\"><table>\n<thead>\n<tr>\n<th>Field</th>\n<th>Type</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>protocolVersion</td>\n<td>integer</td>\n<td>The protocol version (currently <code>1</code>)</td>\n</tr>\n<tr>\n<td>type</td>\n<td>integer</td>\n<td>State transition type (<code>2</code> for identity create)</td>\n</tr>\n<tr>\n<td>assetLockProof</td>\n<td>object</td>\n<td><a href=\"#asset-lock\">Asset lock proof object</a> proving the layer 1 locking transaction exists and is locked</td>\n</tr>\n<tr>\n<td>publicKeys</td>\n<td>array of keys</td>\n<td><a href=\"#identity-publickeys\">Public key(s)</a> associated with the identity</td>\n</tr>\n<tr>\n<td>signature</td>\n<td>array of bytes</td>\n<td>Signature of state transition data by the single-use key from the asset lock (65 bytes)</td>\n</tr>\n</tbody>\n</table></div>\n<p>Each identity must comply with this JSON-Schema definition established in <a href=\"https://github.com/dashpay/platform/blob/v0.24.5/packages/rs-dpp/src/schema/identity/stateTransition/identityCreate.json\">rs-dpp</a>:</p>\n<pre><code class=\"lang-json\"><span class='cm-s-neo'>{\n  <span class=\"cm-property\">\"$schema\"</span>: <span class=\"cm-string\">\"https:&#47;&#47;json-schema.org&#47;draft&#47;2020-12&#47;schema\"</span>,\n  <span class=\"cm-property\">\"type\"</span>: <span class=\"cm-string\">\"object\"</span>,\n  <span class=\"cm-property\">\"properties\"</span>: {\n    <span class=\"cm-property\">\"protocolVersion\"</span>: {\n      <span class=\"cm-property\">\"type\"</span>: <span class=\"cm-string\">\"integer\"</span>,\n      <span class=\"cm-property\">\"$comment\"</span>: <span class=\"cm-string\">\"Maximum is the latest protocol version\"</span>\n    },\n    <span class=\"cm-property\">\"type\"</span>: {\n      <span class=\"cm-property\">\"type\"</span>: <span class=\"cm-string\">\"integer\"</span>,\n      <span class=\"cm-property\">\"const\"</span>: <span class=\"cm-number\">2</span>\n    },\n    <span class=\"cm-property\">\"assetLockProof\"</span>: {\n      <span class=\"cm-property\">\"type\"</span>: <span class=\"cm-string\">\"object\"</span>\n    },\n    <span class=\"cm-property\">\"publicKeys\"</span>: {\n      <span class=\"cm-property\">\"type\"</span>: <span class=\"cm-string\">\"array\"</span>,\n      <span class=\"cm-property\">\"minItems\"</span>: <span class=\"cm-number\">1</span>,\n      <span class=\"cm-property\">\"maxItems\"</span>: <span class=\"cm-number\">10</span>,\n      <span class=\"cm-property\">\"uniqueItems\"</span>: <span class=\"cm-atom\">true</span>\n    },\n    <span class=\"cm-property\">\"signature\"</span>: {\n      <span class=\"cm-property\">\"type\"</span>: <span class=\"cm-string\">\"array\"</span>,\n      <span class=\"cm-property\">\"byteArray\"</span>: <span class=\"cm-atom\">true</span>,\n      <span class=\"cm-property\">\"minItems\"</span>: <span class=\"cm-number\">65</span>,\n      <span class=\"cm-property\">\"maxItems\"</span>: <span class=\"cm-number\">65</span>,\n      <span class=\"cm-property\">\"description\"</span>: <span class=\"cm-string\">\"Signature made by AssetLock one time ECDSA key\"</span>\n    }\n  },\n  <span class=\"cm-property\">\"additionalProperties\"</span>: <span class=\"cm-atom\">false</span>,\n  <span class=\"cm-property\">\"required\"</span>: [\n    <span class=\"cm-string\">\"protocolVersion\"</span>,\n    <span class=\"cm-string\">\"type\"</span>,\n    <span class=\"cm-string\">\"assetLockProof\"</span>,\n    <span class=\"cm-string\">\"publicKeys\"</span>,\n    <span class=\"cm-string\">\"signature\"</span>\n  ]\n}</span>\n</code></pre>\n<p><strong>Example State Transition</strong></p>\n<pre><code class=\"lang-json\"><span class='cm-s-neo'>{\n  <span class=\"cm-property\">\"protocolVersion\"</span>:<span class=\"cm-number\">1</span>,\n  <span class=\"cm-property\">\"type\"</span>:<span class=\"cm-number\">2</span>,\n  <span class=\"cm-property\">\"signature\"</span>:<span class=\"cm-string\">\"IBTTgge+&#47;VDa&#47;9+n2q3pb4tAqZYI48AX8X3H&#47;uedRLH5dN8Ekh&#47;sxRRQQS9LaOPwZSCVED6XIYD+vravF2dhYOE=\"</span>,\n  <span class=\"cm-property\">\"assetLockProof\"</span>:{\n    <span class=\"cm-property\">\"type\"</span>:<span class=\"cm-number\">0</span>,\n    <span class=\"cm-property\">\"instantLock\"</span>:<span class=\"cm-string\">\"AQHDHQdekbFZJOQFEe1FnRjoDemL&#47;oPF&#47;v9IME&#47;qphjt5gEAAAB&#47;OlZB9p8vPzPE55MlegR7nwhXRpZC4d5sYnOIypNgzfdDRsW01v8UtlRoORokjoDJ9hA&#47;XFMK65iYTrQ8AAAAGI4q8GxtK9LHOT1JipnIfwiiv8zW+C&#47;sbokbMhi&#47;BsEl51dpoeBQEUAYWT7KRiJ4Atx49zIrqsKvmU1mJQza0Y1YbBSS&#47;b&#47;IPO8StX04bItPpDuTp6zlh&#47;G7YOGzlEoe\"</span>,\n    <span class=\"cm-property\">\"transaction\"</span>:<span class=\"cm-string\">\"0300000001c31d075e91b15924e40511ed459d18e80de98bfe83c5feff48304feaa618ede6010000006b483045022100dd0e4a6c25b1c7ed9aec2c93133f6de27b4c695a062f21f0aed1a2999fccf01c0220384aaf84cd5fd1c741fd1739f5c026a492abbfc18cfde296c6d90e98304f2f76012102fb9e87840f7e0a9b01f955d8eb4d1d2a52b32c9c43c751d7a348482c514ad222ffffffff021027000000000000166a14ea15af58c614b050a3b2e6bcc131fe0e7de37b9801710815000000001976a9140ccc680f945e964f7665f57c0108cba5ca77ed1388ac00000000\"</span>,\n    <span class=\"cm-property\">\"outputIndex\"</span>:<span class=\"cm-number\">0</span>\n  },\n  <span class=\"cm-property\">\"publicKeys\"</span>:[\n    {\n      <span class=\"cm-property\">\"id\"</span>:<span class=\"cm-number\">0</span>,\n      <span class=\"cm-property\">\"type\"</span>:<span class=\"cm-number\">0</span>,\n      <span class=\"cm-property\">\"purpose\"</span>:<span class=\"cm-number\">0</span>,\n      <span class=\"cm-property\">\"securityLevel\"</span>:<span class=\"cm-number\">0</span>,\n      <span class=\"cm-property\">\"data\"</span>:<span class=\"cm-string\">\"AkWRfl3DJiyyy6YPUDQnNx5KERRnR8CoTiFUvfdaYSDS\"</span>,\n      <span class=\"cm-property\">\"readOnly\"</span>:<span class=\"cm-atom\">false</span>\n    }\n  ]\n}</span>\n</code></pre>\n<h2 class=\"header-scroll\"><div class=\"anchor waypoint\" id=\"section-identity-top-up\"></div>Identity TopUp<a class=\"fa fa-anchor\" href=\"#section-identity-top-up\"></a></h2>\n<p>Identity credit balances are increased by submitting the topup information in an identity topup state transition.</p>\n<div class=\"marked-table\"><table>\n<thead>\n<tr>\n<th>Field</th>\n<th>Type</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>protocolVersion</td>\n<td>integer</td>\n<td>The protocol version (currently <code>1</code>)</td>\n</tr>\n<tr>\n<td>type</td>\n<td>integer</td>\n<td>State transition type (<code>3</code> for identity topup)</td>\n</tr>\n<tr>\n<td>assetLockProof</td>\n<td>object</td>\n<td><a href=\"#asset-lock\">Asset lock proof object</a> proving the layer 1 locking transaction exists and is locked</td>\n</tr>\n<tr>\n<td>identityId</td>\n<td>array of bytes</td>\n<td>An <a href=\"#identity-id\">Identity ID</a> for the identity receiving the topup (can be any identity) (32 bytes)</td>\n</tr>\n<tr>\n<td>signature</td>\n<td>array of bytes</td>\n<td>Signature of state transition data by the single-use key from the asset lock (65 bytes)</td>\n</tr>\n</tbody>\n</table></div>\n<p>Each identity must comply with this JSON-Schema definition established in <a href=\"https://github.com/dashpay/platform/blob/v0.24.5/packages/rs-dpp/src/schema/identity/stateTransition/identityTopUp.json\">rs-dpp</a>:</p>\n<pre><code class=\"lang-json\"><span class='cm-s-neo'>{\n  <span class=\"cm-property\">\"$schema\"</span>: <span class=\"cm-string\">\"https:&#47;&#47;json-schema.org&#47;draft&#47;2020-12&#47;schema\"</span>,\n  <span class=\"cm-property\">\"type\"</span>: <span class=\"cm-string\">\"object\"</span>,\n  <span class=\"cm-property\">\"properties\"</span>: {\n    <span class=\"cm-property\">\"protocolVersion\"</span>: {\n      <span class=\"cm-property\">\"type\"</span>: <span class=\"cm-string\">\"integer\"</span>,\n      <span class=\"cm-property\">\"$comment\"</span>: <span class=\"cm-string\">\"Maximum is the latest protocol version\"</span>\n    },\n    <span class=\"cm-property\">\"type\"</span>: {\n      <span class=\"cm-property\">\"type\"</span>: <span class=\"cm-string\">\"integer\"</span>,\n      <span class=\"cm-property\">\"const\"</span>: <span class=\"cm-number\">3</span>\n    },\n    <span class=\"cm-property\">\"assetLockProof\"</span>: {\n      <span class=\"cm-property\">\"type\"</span>: <span class=\"cm-string\">\"object\"</span>\n    },\n    <span class=\"cm-property\">\"identityId\"</span>: {\n      <span class=\"cm-property\">\"type\"</span>: <span class=\"cm-string\">\"array\"</span>,\n      <span class=\"cm-property\">\"byteArray\"</span>: <span class=\"cm-atom\">true</span>,\n      <span class=\"cm-property\">\"minItems\"</span>: <span class=\"cm-number\">32</span>,\n      <span class=\"cm-property\">\"maxItems\"</span>: <span class=\"cm-number\">32</span>,\n      <span class=\"cm-property\">\"contentMediaType\"</span>: <span class=\"cm-string\">\"application&#47;x.dash.dpp.identifier\"</span>\n    },\n    <span class=\"cm-property\">\"signature\"</span>: {\n      <span class=\"cm-property\">\"type\"</span>: <span class=\"cm-string\">\"array\"</span>,\n      <span class=\"cm-property\">\"byteArray\"</span>: <span class=\"cm-atom\">true</span>,\n      <span class=\"cm-property\">\"minItems\"</span>: <span class=\"cm-number\">65</span>,\n      <span class=\"cm-property\">\"maxItems\"</span>: <span class=\"cm-number\">65</span>,\n      <span class=\"cm-property\">\"description\"</span>: <span class=\"cm-string\">\"Signature made by AssetLock one time ECDSA key\"</span>\n    }\n  },\n  <span class=\"cm-property\">\"additionalProperties\"</span>: <span class=\"cm-atom\">false</span>,\n  <span class=\"cm-property\">\"required\"</span>: [\n    <span class=\"cm-string\">\"protocolVersion\"</span>,\n    <span class=\"cm-string\">\"type\"</span>,\n    <span class=\"cm-string\">\"assetLockProof\"</span>,\n    <span class=\"cm-string\">\"identityId\"</span>,\n    <span class=\"cm-string\">\"signature\"</span>\n  ]\n}</span>\n</code></pre>\n<p><strong>Example State Transition</strong></p>\n<pre><code class=\"lang-json\"><span class='cm-s-neo'>{\n  <span class=\"cm-property\">\"protocolVersion\"</span>:<span class=\"cm-number\">1</span>,\n  <span class=\"cm-property\">\"type\"</span>:<span class=\"cm-number\">3</span>,\n  <span class=\"cm-property\">\"signature\"</span>:<span class=\"cm-string\">\"IEqOV4DsbVa+nPipva0UrT0z0ZwubwgP9UdlpwBwXbFSWb7Mxkwqzv1HoEDICJ8GtmUSVjp4Hr2x0cVWe7+yUGc=\"</span>,\n  <span class=\"cm-property\">\"identityId\"</span>:<span class=\"cm-string\">\"6YfP6tT9AK8HPVXMK7CQrhpc8VMg7frjEnXinSPvUmZC\"</span>,\n  <span class=\"cm-property\">\"assetLockProof\"</span>:{\n    <span class=\"cm-property\">\"type\"</span>:<span class=\"cm-number\">0</span>,\n    <span class=\"cm-property\">\"instantLock\"</span>:<span class=\"cm-string\">\"AQF&#47;OlZB9p8vPzPE55MlegR7nwhXRpZC4d5sYnOIypNgzQEAAAAm8edm9p8URNEE9PBo0lEzZ2s9nf4u1SV0MaZyB0JTRasiXu8QtTmfqZWjI3qVtOpUhGPu6r&#47;2fV+0Ffi3AAAAhA77E0aScf+5PTYzgV5WR6VJ&#47;EnjvXyAMmAcu222JyvA7M+5OoCzVF&#47;IQs2IWaPOFsRl1n5C+dMxdvrxhpVLT8QfZJSl19wzybWrHbGRaHDw4iWHvfYdwyXN+vP8UwDz\"</span>,\n    <span class=\"cm-property\">\"transaction\"</span>:<span class=\"cm-string\">\"03000000017f3a5641f69f2f3f33c4e793257a047b9f0857469642e1de6c627388ca9360cd010000006b483045022100d8c383b15a3738d13b029605d242f041bea874cb4d0def1303ca7cdf76092bf102201b1d401ae9e8cdc5efc061249d2a967960dadce53c66e34d249c42049b48b26701210335b684aa510a9b54a3a4f79283e64482a323190045c239fae5ecb0450c78f965ffffffff02e803000000000000166a14f5383f51784bc4a27e2040bdd6cd9aae7fe6814d31690815000000001976a9144a0511ec3362b35983d0a101f0572dd26abce2ee88ac00000000\"</span>,\n    <span class=\"cm-property\">\"outputIndex\"</span>:<span class=\"cm-number\">0</span>\n  }\n}</span>\n</code></pre>\n<h2 class=\"header-scroll\"><div class=\"anchor waypoint\" id=\"section-identity-update\"></div>Identity Update<a class=\"fa fa-anchor\" href=\"#section-identity-update\"></a></h2>\n<p>Identities are updated on the platform by submitting the identity information in an identity update state transition. This state transition requires either a set of one or more new public keys to add to the identity or a list of existing keys to disable.</p>\n<div class=\"marked-table\"><table>\n<thead>\n<tr>\n<th>Field</th>\n<th>Type</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>protocolVersion</td>\n<td>integer</td>\n<td>The protocol version (currently <code>1</code>)</td>\n</tr>\n<tr>\n<td>type</td>\n<td>integer</td>\n<td>State transition type (<code>5</code> for identity update)</td>\n</tr>\n<tr>\n<td>identityId</td>\n<td>array of bytes</td>\n<td>The identity id (32 bytes)</td>\n</tr>\n<tr>\n<td>signature</td>\n<td>array of bytes</td>\n<td>Signature of state transition data (65 bytes)</td>\n</tr>\n<tr>\n<td>revision</td>\n<td>integer</td>\n<td>Identity update revision</td>\n</tr>\n<tr>\n<td>publicKeysDisabledAt</td>\n<td>integer</td>\n<td>(Optional) Timestamp when keys were disabled. Required if <code>disablePublicKeys</code> is present.</td>\n</tr>\n<tr>\n<td>addPublicKeys</td>\n<td>array of public keys</td>\n<td>(Optional) Array of up to 10 new public keys to add to the identity. Required if adding keys.</td>\n</tr>\n<tr>\n<td>disablePublicKeys</td>\n<td>array of integers</td>\n<td>(Optional) Array of up to 10 existing identity public key ID(s) to disable for the identity. Required if disabling keys.</td>\n</tr>\n<tr>\n<td>signaturePublicKeyId</td>\n<td>integer</td>\n<td>The ID of public key used to sign the state transition</td>\n</tr>\n</tbody>\n</table></div>\n<p>Each identity must comply with this JSON-Schema definition established in <a href=\"https://github.com/dashpay/platform/blob/v0.24.5/packages/rs-dpp/src/schema/identity/stateTransition/identityUpdate.json\">rs-dpp</a>:</p>\n<pre><code class=\"lang-json\"><span class='cm-s-neo'>{\n  <span class=\"cm-property\">\"$schema\"</span>: <span class=\"cm-string\">\"https:&#47;&#47;json-schema.org&#47;draft&#47;2020-12&#47;schema\"</span>,\n  <span class=\"cm-property\">\"type\"</span>: <span class=\"cm-string\">\"object\"</span>,\n  <span class=\"cm-property\">\"properties\"</span>: {\n    <span class=\"cm-property\">\"protocolVersion\"</span>: {\n      <span class=\"cm-property\">\"type\"</span>: <span class=\"cm-string\">\"integer\"</span>,\n      <span class=\"cm-property\">\"$comment\"</span>: <span class=\"cm-string\">\"Maximum is the latest protocol version\"</span>\n    },\n    <span class=\"cm-property\">\"type\"</span>: {\n      <span class=\"cm-property\">\"type\"</span>: <span class=\"cm-string\">\"integer\"</span>,\n      <span class=\"cm-property\">\"const\"</span>: <span class=\"cm-number\">5</span>\n    },\n    <span class=\"cm-property\">\"identityId\"</span>: {\n      <span class=\"cm-property\">\"type\"</span>: <span class=\"cm-string\">\"array\"</span>,\n      <span class=\"cm-property\">\"byteArray\"</span>: <span class=\"cm-atom\">true</span>,\n      <span class=\"cm-property\">\"minItems\"</span>: <span class=\"cm-number\">32</span>,\n      <span class=\"cm-property\">\"maxItems\"</span>: <span class=\"cm-number\">32</span>,\n      <span class=\"cm-property\">\"contentMediaType\"</span>: <span class=\"cm-string\">\"application&#47;x.dash.dpp.identifier\"</span>\n    },\n    <span class=\"cm-property\">\"signature\"</span>: {\n      <span class=\"cm-property\">\"type\"</span>: <span class=\"cm-string\">\"array\"</span>,\n      <span class=\"cm-property\">\"byteArray\"</span>: <span class=\"cm-atom\">true</span>,\n      <span class=\"cm-property\">\"minItems\"</span>: <span class=\"cm-number\">65</span>,\n      <span class=\"cm-property\">\"maxItems\"</span>: <span class=\"cm-number\">96</span>\n    },\n    <span class=\"cm-property\">\"revision\"</span>: {\n      <span class=\"cm-property\">\"type\"</span>: <span class=\"cm-string\">\"integer\"</span>,\n      <span class=\"cm-property\">\"minimum\"</span>: <span class=\"cm-number\">0</span>,\n      <span class=\"cm-property\">\"description\"</span>: <span class=\"cm-string\">\"Identity update revision\"</span>\n    },\n    <span class=\"cm-property\">\"publicKeysDisabledAt\"</span>: {\n      <span class=\"cm-property\">\"type\"</span>: <span class=\"cm-string\">\"integer\"</span>,\n      <span class=\"cm-property\">\"minimum\"</span>: <span class=\"cm-number\">0</span>\n    },\n    <span class=\"cm-property\">\"addPublicKeys\"</span>: {\n      <span class=\"cm-property\">\"type\"</span>: <span class=\"cm-string\">\"array\"</span>,\n      <span class=\"cm-property\">\"minItems\"</span>: <span class=\"cm-number\">1</span>,\n      <span class=\"cm-property\">\"maxItems\"</span>: <span class=\"cm-number\">10</span>,\n      <span class=\"cm-property\">\"uniqueItems\"</span>: <span class=\"cm-atom\">true</span>\n    },\n    <span class=\"cm-property\">\"disablePublicKeys\"</span>: {\n      <span class=\"cm-property\">\"type\"</span>: <span class=\"cm-string\">\"array\"</span>,\n      <span class=\"cm-property\">\"minItems\"</span>: <span class=\"cm-number\">1</span>,\n      <span class=\"cm-property\">\"maxItems\"</span>: <span class=\"cm-number\">10</span>,\n      <span class=\"cm-property\">\"uniqueItems\"</span>: <span class=\"cm-atom\">true</span>,\n      <span class=\"cm-property\">\"items\"</span>: {\n        <span class=\"cm-property\">\"type\"</span>: <span class=\"cm-string\">\"integer\"</span>,\n        <span class=\"cm-property\">\"minimum\"</span>: <span class=\"cm-number\">0</span>\n      }\n    },\n    <span class=\"cm-property\">\"signaturePublicKeyId\"</span>: {\n      <span class=\"cm-property\">\"type\"</span>: <span class=\"cm-string\">\"integer\"</span>,\n      <span class=\"cm-property\">\"minimum\"</span>: <span class=\"cm-number\">0</span>\n    }\n  },\n  <span class=\"cm-property\">\"dependentRequired\"</span> : {\n    <span class=\"cm-property\">\"disablePublicKeys\"</span>: [<span class=\"cm-string\">\"publicKeysDisabledAt\"</span>],\n    <span class=\"cm-property\">\"publicKeysDisabledAt\"</span>: [<span class=\"cm-string\">\"disablePublicKeys\"</span>]\n  },\n  <span class=\"cm-property\">\"anyOf\"</span>: [\n    {\n      <span class=\"cm-property\">\"type\"</span>: <span class=\"cm-string\">\"object\"</span>,\n      <span class=\"cm-property\">\"required\"</span>: [<span class=\"cm-string\">\"addPublicKeys\"</span>],\n      <span class=\"cm-property\">\"properties\"</span>: {\n        <span class=\"cm-property\">\"addPublicKeys\"</span>: <span class=\"cm-atom\">true</span>\n      }\n    },\n    {\n      <span class=\"cm-property\">\"type\"</span>: <span class=\"cm-string\">\"object\"</span>,\n      <span class=\"cm-property\">\"required\"</span>: [<span class=\"cm-string\">\"disablePublicKeys\"</span>],\n      <span class=\"cm-property\">\"properties\"</span>: {\n        <span class=\"cm-property\">\"disablePublicKeys\"</span>: <span class=\"cm-atom\">true</span>\n      }\n    }\n  ],\n  <span class=\"cm-property\">\"additionalProperties\"</span>: <span class=\"cm-atom\">false</span>,\n  <span class=\"cm-property\">\"required\"</span>: [\n    <span class=\"cm-string\">\"protocolVersion\"</span>,\n    <span class=\"cm-string\">\"type\"</span>,\n    <span class=\"cm-string\">\"identityId\"</span>,\n    <span class=\"cm-string\">\"signature\"</span>,\n    <span class=\"cm-string\">\"revision\"</span>,\n    <span class=\"cm-string\">\"signaturePublicKeyId\"</span>\n  ]\n}</span>\n</code></pre>\n<h2 class=\"header-scroll\"><div class=\"anchor waypoint\" id=\"section-asset-lock\"></div>Asset Lock<a class=\"fa fa-anchor\" href=\"#section-asset-lock\"></a></h2>\n<p>The <a href=\"#identity-creation\">identity create</a> and <a href=\"#identity-topup\">identity topup</a> state transitions both include an asset lock proof object. This object references the layer 1 lock transaction and includes proof that the transaction is locked.</p>\n<p>Currently there are two types of asset lock proofs: InstantSend and ChainLock. Transactions almost always receive InstantSend locks, so the InstantSend asset lock proof is the predominate type.</p>\n<h3 class=\"header-scroll\"><div class=\"anchor waypoint\" id=\"section-instant-send-asset-lock-proof\"></div>InstantSend Asset Lock Proof<a class=\"fa fa-anchor\" href=\"#section-instant-send-asset-lock-proof\"></a></h3>\n<p>The InstantSend asset lock proof is used for transactions that have received an InstantSend lock.</p>\n<div class=\"marked-table\"><table>\n<thead>\n<tr>\n<th>Field</th>\n<th>Type</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>type</td>\n<td>integer</td>\n<td>The asset lock proof type (<code>0</code> for InstantSend locks)</td>\n</tr>\n<tr>\n<td>instantLock</td>\n<td>array of bytes</td>\n<td>The InstantSend lock (<a href=\"https://docs.dash.org/projects/core/en/stable/docs/reference/p2p-network-instantsend-messages.html#islock\"><code>islock</code></a>)</td>\n</tr>\n<tr>\n<td>transaction</td>\n<td>array of bytes</td>\n<td>The asset lock transaction</td>\n</tr>\n<tr>\n<td>outputIndex</td>\n<td>integer</td>\n<td>Index of the transaction output to be used</td>\n</tr>\n</tbody>\n</table></div>\n<p>Asset locks using an InstantSend lock as proof must comply with this JSON-Schema definition established in <a href=\"https://github.com/dashpay/platform/blob/v0.24.5/packages/rs-dpp/src/schema/identity/stateTransition/assetLockProof/instantAssetLockProof.json\">rs-dpp</a>:</p>\n<pre><code class=\"lang-json\"><span class='cm-s-neo'>{\n  <span class=\"cm-property\">\"$schema\"</span>: <span class=\"cm-string\">\"https:&#47;&#47;json-schema.org&#47;draft&#47;2020-12&#47;schema\"</span>,\n  <span class=\"cm-property\">\"type\"</span>: <span class=\"cm-string\">\"object\"</span>,\n  <span class=\"cm-property\">\"properties\"</span>: {\n    <span class=\"cm-property\">\"type\"</span>: {\n      <span class=\"cm-property\">\"type\"</span>: <span class=\"cm-string\">\"integer\"</span>,\n      <span class=\"cm-property\">\"const\"</span>: <span class=\"cm-number\">0</span>\n    },\n    <span class=\"cm-property\">\"instantLock\"</span>: {\n      <span class=\"cm-property\">\"type\"</span>: <span class=\"cm-string\">\"array\"</span>,\n      <span class=\"cm-property\">\"byteArray\"</span>: <span class=\"cm-atom\">true</span>,\n      <span class=\"cm-property\">\"minItems\"</span>: <span class=\"cm-number\">165</span>,\n      <span class=\"cm-property\">\"maxItems\"</span>: <span class=\"cm-number\">100000</span>\n    },\n    <span class=\"cm-property\">\"transaction\"</span>: {\n      <span class=\"cm-property\">\"type\"</span>: <span class=\"cm-string\">\"array\"</span>,\n      <span class=\"cm-property\">\"byteArray\"</span>: <span class=\"cm-atom\">true</span>,\n      <span class=\"cm-property\">\"minItems\"</span>: <span class=\"cm-number\">1</span>,\n      <span class=\"cm-property\">\"maxItems\"</span>: <span class=\"cm-number\">100000</span>\n    },\n    <span class=\"cm-property\">\"outputIndex\"</span>: {\n      <span class=\"cm-property\">\"type\"</span>: <span class=\"cm-string\">\"integer\"</span>,\n      <span class=\"cm-property\">\"minimum\"</span>: <span class=\"cm-number\">0</span>\n    }\n  },\n  <span class=\"cm-property\">\"additionalProperties\"</span>: <span class=\"cm-atom\">false</span>,\n  <span class=\"cm-property\">\"required\"</span>: [\n    <span class=\"cm-string\">\"type\"</span>,\n    <span class=\"cm-string\">\"instantLock\"</span>,\n    <span class=\"cm-string\">\"transaction\"</span>,\n    <span class=\"cm-string\">\"outputIndex\"</span>\n  ]\n}</span>\n</code></pre>\n<h3 class=\"header-scroll\"><div class=\"anchor waypoint\" id=\"section-chain-lock-asset-lock-proof\"></div>ChainLock Asset Lock Proof<a class=\"fa fa-anchor\" href=\"#section-chain-lock-asset-lock-proof\"></a></h3>\n<p>The ChainLock asset lock proof is used for transactions that have note received an InstantSend lock, but have been included in a block that has received a ChainLock.</p>\n<div class=\"marked-table\"><table>\n<thead>\n<tr>\n<th>Field</th>\n<th>Type</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>type</td>\n<td>array of bytes</td>\n<td>The type of asset lock proof (<code>1</code> for ChainLocks)</td>\n</tr>\n<tr>\n<td>coreChainLockedHeight</td>\n<td>integer</td>\n<td>Height of the ChainLocked Core block containing the transaction</td>\n</tr>\n<tr>\n<td>outPoint</td>\n<td>object</td>\n<td>The  <a href=\"https://docs.dash.org/projects/core/en/stable/docs/resources/glossary.html#outpoint\">outpoint</a> being used as the asset lock</td>\n</tr>\n</tbody>\n</table></div>\n<p>Asset locks using a ChainLock as proof must comply with this JSON-Schema definition established in <a href=\"https://github.com/dashpay/platform/blob/v0.24.5/packages/rs-dpp/src/schema/identity/stateTransition/assetLockProof/chainAssetLockProof.json\">rs-dpp</a>:</p>\n<pre><code class=\"lang-json\"><span class='cm-s-neo'>{\n  <span class=\"cm-property\">\"$schema\"</span>: <span class=\"cm-string\">\"https:&#47;&#47;json-schema.org&#47;draft&#47;2020-12&#47;schema\"</span>,\n  <span class=\"cm-property\">\"type\"</span>: <span class=\"cm-string\">\"object\"</span>,\n  <span class=\"cm-property\">\"properties\"</span>: {\n    <span class=\"cm-property\">\"type\"</span>: {\n      <span class=\"cm-property\">\"type\"</span>: <span class=\"cm-string\">\"integer\"</span>,\n      <span class=\"cm-property\">\"const\"</span>: <span class=\"cm-number\">1</span>\n    },\n    <span class=\"cm-property\">\"coreChainLockedHeight\"</span>:  {\n      <span class=\"cm-property\">\"type\"</span>: <span class=\"cm-string\">\"integer\"</span>,\n      <span class=\"cm-property\">\"minimum\"</span>: <span class=\"cm-number\">1</span>,\n      <span class=\"cm-property\">\"maximum\"</span>: <span class=\"cm-number\">4294967295</span>\n    },\n    <span class=\"cm-property\">\"outPoint\"</span>: {\n      <span class=\"cm-property\">\"type\"</span>: <span class=\"cm-string\">\"array\"</span>,\n      <span class=\"cm-property\">\"byteArray\"</span>: <span class=\"cm-atom\">true</span>,\n      <span class=\"cm-property\">\"minItems\"</span>: <span class=\"cm-number\">36</span>,\n      <span class=\"cm-property\">\"maxItems\"</span>: <span class=\"cm-number\">36</span>\n    }\n  },\n  <span class=\"cm-property\">\"additionalProperties\"</span>: <span class=\"cm-atom\">false</span>,\n  <span class=\"cm-property\">\"required\"</span>: [\n    <span class=\"cm-string\">\"type\"</span>,\n    <span class=\"cm-string\">\"coreChainLockedHeight\"</span>,\n    <span class=\"cm-string\">\"outPoint\"</span>\n  ]\n}</span>\n</code></pre>\n<h2 class=\"header-scroll\"><div class=\"anchor waypoint\" id=\"section-identity-state-transition-signing\"></div>Identity State Transition Signing<a class=\"fa fa-anchor\" href=\"#section-identity-state-transition-signing\"></a></h2>\n<p><strong>Note:</strong> The identity create and topup state transition signatures are unique in that they must be signed by the private key used in the layer 1 locking transaction. All other state transitions will be signed by a private key of the identity submitting them.</p>\n<p>The process to sign an identity create state transition consists of the following steps:</p>\n<ol>\n<li  value=\"1\">Canonical CBOR encode the state transition data - this include all ST fields except the <code>signature</code></li><li  value=\"2\">Sign the encoded data with private key associated with a lock transaction public key</li><li  value=\"3\">Set the state transition <code>signature</code> to the value of the signature created in the previous step</li></ol>\n<h3 class=\"header-scroll\"><div class=\"anchor waypoint\" id=\"section-code-snipits-related-to-signing\"></div>Code snipits related to signing<a class=\"fa fa-anchor\" href=\"#section-code-snipits-related-to-signing\"></a></h3>\n<pre><code class=\"lang-rust\"><span class='cm-s-neo'><span class=\"cm-comment\">&#47;&#47;&#47; From rs-dpp</span>\n<span class=\"cm-comment\">&#47;&#47;&#47; abstract_state_transition.rs</span>\n<span class=\"cm-comment\">&#47;&#47;&#47; Signs data with the private key</span>\n<span class=\"cm-keyword\">fn</span> <span class=\"cm-def\">sign_by_private_key</span>(\n    &amp;<span class=\"cm-variable\">mut</span> <span class=\"cm-keyword\">self</span>,\n    <span class=\"cm-variable\">private_key</span>: &amp;[<span class=\"cm-atom\">u8</span>],\n    <span class=\"cm-variable\">key_type</span>: <span class=\"cm-variable\">KeyType</span>,\n    <span class=\"cm-variable\">bls</span>: &amp;<span class=\"cm-keyword\">impl</span> <span class=\"cm-variable\">BlsModule</span>,\n) <span class=\"cm-operator\">-&gt;</span> <span class=\"cm-variable\">Result</span><span class=\"cm-operator\">&lt;</span>(), <span class=\"cm-variable\">ProtocolError</span><span class=\"cm-operator\">&gt;</span> {\n    <span class=\"cm-keyword\">let</span> <span class=\"cm-def\">data</span> <span class=\"cm-operator\">=</span> <span class=\"cm-keyword\">self</span>.<span class=\"cm-variable\">to_buffer</span>(<span class=\"cm-builtin\">true</span>)?;\n    <span class=\"cm-keyword\">match</span> <span class=\"cm-variable\">key_type</span> {\n        <span class=\"cm-variable\">KeyType</span>::<span class=\"cm-variable\">BLS12_381</span> <span class=\"cm-operator\">=&gt;</span> <span class=\"cm-keyword\">self</span>.<span class=\"cm-variable\">set_signature</span>(<span class=\"cm-variable\">bls</span>.<span class=\"cm-variable\">sign</span>(&amp;<span class=\"cm-variable\">data</span>, <span class=\"cm-variable\">private_key</span>)?.<span class=\"cm-variable\">into</span>()),\n\n        <span class=\"cm-comment\">&#47;&#47; https:&#47;&#47;github.com&#47;dashevo&#47;platform&#47;blob&#47;9c8e6a3b6afbc330a6ab551a689de8ccd63f9120&#47;packages&#47;js-dpp&#47;lib&#47;stateTransition&#47;AbstractStateTransition.js#L169</span>\n        <span class=\"cm-variable\">KeyType</span>::<span class=\"cm-variable\">ECDSA_SECP256K1</span> | <span class=\"cm-variable\">KeyType</span>::<span class=\"cm-variable\">ECDSA_HASH160</span> <span class=\"cm-operator\">=&gt;</span> {\n            <span class=\"cm-keyword\">let</span> <span class=\"cm-def\">signature</span> <span class=\"cm-operator\">=</span> <span class=\"cm-variable\">signer</span>::<span class=\"cm-variable\">sign</span>(&amp;<span class=\"cm-variable\">data</span>, <span class=\"cm-variable\">private_key</span>)?;\n            <span class=\"cm-keyword\">self</span>.<span class=\"cm-variable\">set_signature</span>(<span class=\"cm-variable\">signature</span>.<span class=\"cm-variable\">to_vec</span>().<span class=\"cm-variable\">into</span>());\n        }\n\n        <span class=\"cm-comment\">&#47;&#47; the default behavior from</span>\n        <span class=\"cm-comment\">&#47;&#47; https:&#47;&#47;github.com&#47;dashevo&#47;platform&#47;blob&#47;6b02b26e5cd3a7c877c5fdfe40c4a4385a8dda15&#47;packages&#47;js-dpp&#47;lib&#47;stateTransition&#47;AbstractStateTransition.js#L187</span>\n        <span class=\"cm-comment\">&#47;&#47; is to return the error for the BIP13_SCRIPT_HASH</span>\n        <span class=\"cm-variable\">KeyType</span>::<span class=\"cm-variable\">BIP13_SCRIPT_HASH</span> <span class=\"cm-operator\">=&gt;</span> {\n            <span class=\"cm-keyword\">return</span> <span class=\"cm-builtin\">Err</span>(<span class=\"cm-variable\">ProtocolError</span>::<span class=\"cm-variable\">InvalidIdentityPublicKeyTypeError</span>(\n                <span class=\"cm-variable\">InvalidIdentityPublicKeyTypeError</span>::<span class=\"cm-variable\">new</span>(<span class=\"cm-variable\">key_type</span>),\n            ))\n        }\n    };\n    <span class=\"cm-builtin\">Ok</span>(())\n}\n\n\n<span class=\"cm-comment\">&#47;&#47;&#47; From rust-dashcore</span>\n<span class=\"cm-comment\">&#47;&#47;&#47; signer.rs</span>\n<span class=\"cm-comment\">&#47;&#47;&#47; sign and get the ECDSA signature</span>\n<span class=\"cm-keyword\">pub</span> <span class=\"cm-keyword\">fn</span> <span class=\"cm-def\">sign</span>(<span class=\"cm-variable\">data</span>: &amp;[<span class=\"cm-atom\">u8</span>], <span class=\"cm-variable\">private_key</span>: &amp;[<span class=\"cm-atom\">u8</span>]) <span class=\"cm-operator\">-&gt;</span> <span class=\"cm-variable\">Result</span><span class=\"cm-operator\">&lt;</span>[<span class=\"cm-atom\">u8</span>; <span class=\"cm-number\">65</span>], <span class=\"cm-variable\">anyhow</span>::<span class=\"cm-variable\">Error</span><span class=\"cm-operator\">&gt;</span> {\n    <span class=\"cm-keyword\">let</span> <span class=\"cm-def\">data_hash</span> <span class=\"cm-operator\">=</span> <span class=\"cm-variable\">double_sha</span>(<span class=\"cm-variable\">data</span>);\n    <span class=\"cm-variable\">sign_hash</span>(&amp;<span class=\"cm-variable\">data_hash</span>, <span class=\"cm-variable\">private_key</span>)\n}\n\n<span class=\"cm-comment\">&#47;&#47;&#47; signs the hash of data and get the ECDSA signature</span>\n<span class=\"cm-keyword\">pub</span> <span class=\"cm-keyword\">fn</span> <span class=\"cm-def\">sign_hash</span>(<span class=\"cm-variable\">data_hash</span>: &amp;[<span class=\"cm-atom\">u8</span>], <span class=\"cm-variable\">private_key</span>: &amp;[<span class=\"cm-atom\">u8</span>]) <span class=\"cm-operator\">-&gt;</span> <span class=\"cm-variable\">Result</span><span class=\"cm-operator\">&lt;</span>[<span class=\"cm-atom\">u8</span>; <span class=\"cm-number\">65</span>], <span class=\"cm-variable\">anyhow</span>::<span class=\"cm-variable\">Error</span><span class=\"cm-operator\">&gt;</span> {\n    <span class=\"cm-keyword\">let</span> <span class=\"cm-def\">pk</span> <span class=\"cm-operator\">=</span> <span class=\"cm-variable\">SecretKey</span>::<span class=\"cm-variable\">from_slice</span>(<span class=\"cm-variable\">private_key</span>)\n        .<span class=\"cm-variable\">map_err</span>(|<span class=\"cm-variable\">e</span>| <span class=\"cm-variable-3\">anyhow!</span>(<span class=\"cm-string\">\"Invalid ECDSA private key: {}\"</span>, <span class=\"cm-variable\">e</span>))?;\n\n    <span class=\"cm-keyword\">let</span> <span class=\"cm-def\">secp</span> <span class=\"cm-operator\">=</span> <span class=\"cm-variable\">Secp256k1</span>::<span class=\"cm-variable\">new</span>();\n    <span class=\"cm-keyword\">let</span> <span class=\"cm-def\">msg</span> <span class=\"cm-operator\">=</span> <span class=\"cm-variable\">Message</span>::<span class=\"cm-variable\">from_slice</span>(<span class=\"cm-variable\">data_hash</span>).<span class=\"cm-variable\">map_err</span>(<span class=\"cm-variable\">anyhow</span>::<span class=\"cm-variable\">Error</span>::<span class=\"cm-variable\">msg</span>)?;\n\n    <span class=\"cm-keyword\">let</span> <span class=\"cm-def\">signature</span> <span class=\"cm-operator\">=</span> <span class=\"cm-variable\">secp</span>\n        .<span class=\"cm-variable\">sign_ecdsa_recoverable</span>(&amp;<span class=\"cm-variable\">msg</span>, &amp;<span class=\"cm-variable\">pk</span>)\n        .<span class=\"cm-variable\">to_compact_signature</span>(<span class=\"cm-builtin\">true</span>);\n    <span class=\"cm-builtin\">Ok</span>(<span class=\"cm-variable\">signature</span>)\n}</span>\n</code></pre>\n\n</div>"
}