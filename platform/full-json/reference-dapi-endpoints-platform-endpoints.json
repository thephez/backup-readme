{
 "pendingAlgoliaPublish": false, 
 "parentDoc": "5f8f3fa8b257f9003428ff81", 
 "excerpt": "Detailed platform gRPC endpoint reference", 
 "api": {
  "url": "", 
  "params": [], 
  "method": "get", 
  "auth": "required", 
  "results": {
   "codes": [
    {
     "status": 200, 
     "code": "{}", 
     "name": "", 
     "language": "json"
    }, 
    {
     "status": 400, 
     "code": "{}", 
     "name": "", 
     "language": "json"
    }
   ]
  }
 }, 
 "previousSlug": "", 
 "updatedAt": "2020-11-24T14:37:35.375Z", 
 "id": "5f8f3fa8b257f9003428ff85", 
 "sync_unique": "", 
 "isApi": false, 
 "createdAt": "2020-02-13T00:55:13.290Z", 
 "category": "5f8f3fa8b257f9003428ff43", 
 "title": "Platform Endpoints", 
 "next": {
  "description": "", 
  "pages": []
 }, 
 "version": "5f8f3fa8b257f9003428ff97", 
 "slugUpdatedAt": "2020-09-03T18:20:20.690Z", 
 "hidden": false, 
 "type": "basic", 
 "metadata": {
  "image": [], 
  "description": "", 
  "title": ""
 }, 
 "body": "[block:callout]\n{\n  \"type\": \"info\",\n  \"title\": \"gRPC Overview\",\n  \"body\": \"Please refer to the [gRPC Overview](reference-dapi-endpoints-grpc-overview) for details regarding running the examples shown below, encoding/decoding the request/response data, and clients available for several languages.\"\n}\n[/block]\n# Endpoint Details\n\n## broadcastStateTransition\n[block:callout]\n{\n  \"type\": \"success\",\n  \"title\": \"New in Dash Platform v0.15.0\",\n  \"body\": \"Previously named `applyStateTransition`\"\n}\n[/block]\nBroadcasts a [state transition](explanation-platform-protocol-state-transition) to the platform via DAPI to make a change to layer 2 data.\n\n**Returns**: Nothing or error\n**Parameters**:\n\n| Name | Type | Required | Description |\n| - | - | - | - |\n| `state_transition` | Bytes | Yes | A [state transition](explanation-platform-protocol-state-transition) |\n\n** Example Request and Response **\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"# Submit an identity create State Transition\\n# `state_transition` must be represented in base64\\ngrpcurl -proto protos/platform/v0/platform.proto -plaintext \\\\\\n  -d '{\\n    \\\"state_transition\\\":\\\"pWR0eXBlAmlzaWduYXR1cmV4WEg3TWhFWDQ0Z3JzMVIwTE9XTU5IZjAxWFNpYVFQcUlVZ1JLRXQyMkxHVERsUlUrZ1BwQUlUZk5JUmhXd3IvYTVHd0lzWm1idGdYVVFxcVhjbW9lQWtUOD1qcHVibGljS2V5c4GkYmlkAGRkYXRheCxBdzh2UmYxeFFCTlVLbzNiY2llaHlaR2NhM0hBSThkY0ZvVWJTK3hLb0lITmR0eXBlAGlpc0VuYWJsZWT1bmxvY2tlZE91dFBvaW50eDBLT1VUSHB5YnFPek9DNnhEVUhFWm9uc1lNSVpqcGppTHFZNnkxYmlWNWxRQUFBQUFvcHJvdG9jb2xWZXJzaW9uAA==\\\"\\n\\n    }' \\\\\\n  seed-1.evonet.networks.dash.org:3010 \\\\\\n  org.dash.platform.dapi.v0.Platform/broadcastStateTransition\",\n      \"language\": \"shell\",\n      \"name\": \"Request (gRPCurl)\"\n    },\n    {\n      \"code\": \"const {\\n  v0: {\\n    PlatformPromiseClient,\\n    BroadcastStateTransitionRequest,\\n  },\\n} = require('@dashevo/dapi-grpc');\\nconst DashPlatformProtocol = require('@dashevo/dpp');\\n\\nconst platformPromiseClient = new PlatformPromiseClient(\\n  'http://seed-1.evonet.networks.dash.org:3010',\\n);\\n\\nconst dpp = new DashPlatformProtocol();\\n\\n// Data Contract Create State Transition (JSON)\\nconst stateTransitionObject = {\\n  protocolVersion: 0,\\n  type: 0,\\n  signature: 'IAp3sn0tLA2FyxsWbEgrgIrjpNig0VdlgVHrBFiHtTvrAU7d7kkpQ0mUdK8PhMZjOKaepVOPRTDQgnHfVZ6HESA=',\\n  signaturePublicKeyId: 0,\\n  dataContract: {\\n    protocolVersion: 0,\\n    '$id': 'HvjAUGUHuVBWP7vXEWWmBSb4mTCoquhxenbziyGM14aF',\\n    '$schema': 'https://schema.dash.org/dpp-0-4-0/meta/data-contract',\\n    ownerId: '7NUbPf231ixt1kVBQsBvSMMBxd7AgPad8KtdtfFGhXDP',\\n    documents: {\\n      note: {\\n        properties: { message: { type: 'string' } },\\n        additionalProperties: false\\n      }\\n    }\\n  },\\n  entropy: 'XyuDb+YebayRZT4vxQQnzP7htozTXYEHRnBFL9KQjDg='\\n};\\n\\n// Convert signature and entropy to buffer\\nstateTransitionObject.signature = Buffer.from(stateTransitionObject.signature, 'base64');\\nstateTransitionObject.entropy = Buffer.from(stateTransitionObject.entropy, 'base64');\\n\\nconst broadcastStateTransitionRequest = new BroadcastStateTransitionRequest();\\n\\ndpp.stateTransition.createFromObject(stateTransitionObject, { skipValidation: true })\\n  .then((stateTransition) => {\\n    console.log(stateTransition);\\n    broadcastStateTransitionRequest.setStateTransition(stateTransition.toBuffer());\\n\\n    platformPromiseClient.broadcastStateTransition(broadcastStateTransitionRequest)\\n      .then(() => console.log('State Transition broadcast successfully'))\\n      .catch((e) => {\\n        console.error(e);\\n        console.error(e.metadata);\\n      });\\n  })\\n  .catch((e) => console.error(e));\\n\",\n      \"language\": \"javascript\",\n      \"name\": \"JavaScript (dapi-grcp)\"\n    }\n  ]\n}\n[/block]\n**Response**: No response except on error\n\n## getIdentity\n\n**Returns**: [Identity](explanation-identity) information for the requested identity\n**Parameters**:\n\n| Name | Type | Required | Description |\n| - | - | - | - |\n| `id` | Bytes | Yes | An identity `id` |\n\n** Example Request and Response **\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"const DAPIClient = require('@dashevo/dapi-client');\\nconst Identifier = require('@dashevo/dpp/lib/Identifier');\\nconst cbor = require('cbor');\\n\\nconst client = new DAPIClient();\\n\\nconst identityId = Identifier.from('BhC9M3fQHyUCyuxH4WHdhn1VGgJ4JTLmer8qmTTHkYTe');\\nclient.platform.getIdentity(identityId).then((response) => {\\n  const identity = cbor.decode(response);\\n  console.log(identity);\\n});\",\n      \"language\": \"javascript\",\n      \"name\": \"JavaScript (dapi-client)\"\n    },\n    {\n      \"code\": \"const {\\n  v0: {\\n    PlatformPromiseClient,\\n  },\\n} = require('@dashevo/dapi-grpc');\\nconst Identifier = require('@dashevo/dpp/lib/Identifier');\\nconst cbor = require('cbor');\\n\\nconst platformPromiseClient = new PlatformPromiseClient(\\n  'http://seed.evonet.networks.dash.org:3010',\\n);\\n\\nconst id = Identifier.from('BhC9M3fQHyUCyuxH4WHdhn1VGgJ4JTLmer8qmTTHkYTe');\\nconst idBuffer = Buffer.from(id);\\nconst getIdentityRequest = new GetIdentityRequest();\\ngetIdentityRequest.setId(idBuffer);\\n\\nplatformPromiseClient.getIdentity(getIdentityRequest)\\n  .then((response) => {\\n    const identityResponse = response.getIdentity();\\n    const identityBuffer = Buffer.from(identityResponse);\\n    console.log(cbor.decode(identityBuffer));\\n  })\\n  .catch((e) => console.error(e));\",\n      \"language\": \"javascript\",\n      \"name\": \"JavaScript (dapi-grpc)\"\n    },\n    {\n      \"code\": \"# `id` must be represented in base64\\ngrpcurl -proto protos/platform/v0/platform.proto -plaintext \\\\\\n  -d '{\\n    \\\"id\\\":\\\"nuCzumg/s5LC1SplgbztDxV9AfZBr1wNklM4zK8xZ90=\\\"\\n    }' \\\\\\n  seed-1.evonet.networks.dash.org:3010 \\\\\\n  org.dash.platform.dapi.v0.Platform/getIdentity\",\n      \"language\": \"shell\",\n      \"name\": \"gRPCurl\"\n    }\n  ]\n}\n[/block]\n\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"{\\n  id: <Buffer 9e e0 b3 ba 68 3f b3 92 c2 d5 2a 65 81 bc ed 0f 15 7d 01 f6 41 af 5c 0d 92 53 38 cc af 31 67 dd>,\\n  balance: 10994307,\\n  revision: 0,\\n  publicKeys: [\\n    {\\n      id: 0,\\n      data: <Buffer 03 f5 a6 bf e2 e1 c4 08 d2 04 4d 7d 77 73 89 09 46 b0 52 26 0e 44 5e 47 0c 37 ad 65 bb d3 0e 04 10>,\\n      type: 0\\n    }\\n  ],\\n  protocolVersion: 0\\n}\",\n      \"language\": \"json\",\n      \"name\": \"Response (JavaScript)\"\n    },\n    {\n      \"code\": \"{\\n  \\\"identity\\\": \\\"pWJpZFggnuCzumg/s5LC1SplgbztDxV9AfZBr1wNklM4zK8xZ91nYmFsYW5jZRoAp7gPaHJldmlzaW9uAGpwdWJsaWNLZXlzgaNiaWQAZGRhdGFYIQP1pr/i4cQI0gRNfXdziQlGsFImDkReRww3rWW70w4EEGR0eXBlAG9wcm90b2NvbFZlcnNpb24A\\\"\\n}\",\n      \"language\": \"json\",\n      \"name\": \"Response (gRPCurl)\"\n    }\n  ]\n}\n[/block]\n## getIdentitiesByPublicKeyHashes\n\n**Returns**: [Identity](explanation-identity) information associated with the provided public key hashes\n**Parameters**:\n\n| Name | Type | Required | Description |\n| - | - | - | - |\n| `public_key_hashes` | Bytes | Yes | Public key hashes (double-sha256) of identity public keys |\n\n[block:callout]\n{\n  \"type\": \"info\",\n  \"body\": \"Note: the hash must be done using all fields of the identity public key object - e.g.\\n```json\\n{\\n  id: 0,\\n  type: 0,\\n  data: 'A/Wmv+LhxAjSBE19d3OJCUawUiYORF5HDDetZbvTDgQQ'\\n}\\n```\\nWhen using the js-dpp library, the hash can be accessed via the [IdentityPublicKey object's](https://github.com/dashevo/js-dpp/blob/master/lib/identity/IdentityPublicKey.js) `hash` method (e.g. `identity.getPublicKeyById(0).hash()`).\",\n  \"title\": \"Public key hash\"\n}\n[/block]\n** Example Request and Response **\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"const DAPIClient = require('@dashevo/dapi-client');\\nconst DashPlatformProtocol = require('@dashevo/dpp');\\n\\nconst client = new DAPIClient();\\nconst dpp = new DashPlatformProtocol();\\n\\nconst publicKeyHash = '2251b999499564dba481e36e0bfeeacfe5aa582e';\\nconst publicKeysBuffer = [Buffer.from(publicKeyHash, 'hex')];\\n\\nclient.platform.getIdentitiesByPublicKeyHashes(publicKeysBuffer)\\n  .then((response) => {\\n    const retrievedIdentity = dpp.identity.createFromBuffer(response[0]);\\n    console.log(retrievedIdentity.toJSON());\\n  });\",\n      \"language\": \"javascript\",\n      \"name\": \"JavaScript (dapi-client)\"\n    },\n    {\n      \"code\": \"const {\\n  v0: {\\n    PlatformPromiseClient,\\n    GetIdentitiesByPublicKeyHashesRequest,\\n  },\\n} = require('@dashevo/dapi-grpc');\\nconst cbor = require('cbor');\\nconst DashPlatformProtocol = require('@dashevo/dpp');\\n\\nconst dpp = new DashPlatformProtocol();\\nconst platformPromiseClient = new PlatformPromiseClient(\\n  'http://seed.evonet.networks.dash.org:3010',\\n);\\n\\nconst publicKeyHash = '2251b999499564dba481e36e0bfeeacfe5aa582e';\\nconst publicKeysBuffer = [Buffer.from(publicKeyHash, 'hex')];\\n\\nconst getIdentitiesByPublicKeyHashesRequest = new GetIdentitiesByPublicKeyHashesRequest();\\ngetIdentitiesByPublicKeyHashesRequest.setPublicKeyHashesList(publicKeysBuffer);\\n\\nplatformPromiseClient.getIdentitiesByPublicKeyHashes(getIdentitiesByPublicKeyHashesRequest)\\n  .then((response) => {\\n    const identitiesResponse = response.getIdentitiesList();\\n    const identities = identitiesResponse\\n      .map((identity) => (identity.length > 0 ? cbor.decode(Buffer.from(identity)) : null));\\n    console.log(dpp.identity.createFromObject(identities[0]).toJSON());\\n  })\\n  .catch((e) => console.error(e));\",\n      \"language\": \"javascript\",\n      \"name\": \"JavaScript (dapi-grpc)\"\n    },\n    {\n      \"code\": \"# `public_key_hashes` must be represented in base64\\ngrpcurl -proto protos/platform/v0/platform.proto -plaintext \\\\\\n  -d '{\\n    \\\"public_key_hashes\\\":\\\"IlG5mUmVZNukgeNuC/7qz+WqWC4=\\\"\\n    }' \\\\\\n  seed-1.evonet.networks.dash.org:3010 \\\\\\n  org.dash.platform.dapi.v0.Platform/getIdentitiesByPublicKeyHashes\",\n      \"language\": \"shell\",\n      \"name\": \"gRPCurl\"\n    }\n  ]\n}\n[/block]\n\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"{\\n  protocolVersion: 0,\\n  id: 'BhC9M3fQHyUCyuxH4WHdhn1VGgJ4JTLmer8qmTTHkYTe',\\n  publicKeys: [\\n    {\\n      id: 0,\\n      type: 0,\\n      data: 'A/Wmv+LhxAjSBE19d3OJCUawUiYORF5HDDetZbvTDgQQ'\\n    }\\n  ],\\n  balance: 10991631,\\n  revision: 0\\n}\",\n      \"language\": \"json\",\n      \"name\": \"Response (JavaScript)\"\n    },\n    {\n      \"code\": \"{\\n  \\\"identities\\\": [\\n    \\\"pWJpZFggnuCzumg/s5LC1SplgbztDxV9AfZBr1wNklM4zK8xZ91nYmFsYW5jZRoAp7gPaHJldmlzaW9uAGpwdWJsaWNLZXlzgaNiaWQAZGRhdGFYIQP1pr/i4cQI0gRNfXdziQlGsFImDkReRww3rWW70w4EEGR0eXBlAG9wcm90b2NvbFZlcnNpb24A\\\"\\n  ]\\n}\",\n      \"language\": \"json\",\n      \"name\": \"Response (gRPCurl)\"\n    }\n  ]\n}\n[/block]\n##getIdentityIdsByPublicKeyHashes\n\n**Returns**: [Identity](explanation-identity) ID(s) associated with the provided public key hashes\n**Parameters**:\n\n| Name | Type | Required | Description |\n| - | - | - | - |\n| `public_key_hashes` | Bytes | Yes | Public key hash (double-sha256) of an identity's public key |\n[block:callout]\n{\n  \"type\": \"info\",\n  \"body\": \"Note: the hash must be done using all fields of the identity public key object - e.g.\\n```json\\n{\\n  id: 0,\\n  type: 0,\\n  data: 'A/Wmv+LhxAjSBE19d3OJCUawUiYORF5HDDetZbvTDgQQ'\\n}\\n```\\nWhen using the js-dpp library, the hash can be accessed via the [IdentityPublicKey object's](https://github.com/dashevo/js-dpp/blob/master/lib/identity/IdentityPublicKey.js) `hash` method (e.g. `identity.getPublicKeyById(0).hash()`).\",\n  \"title\": \"Public key hash\"\n}\n[/block]\n** Example Request and Response **\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"const DAPIClient = require('@dashevo/dapi-client');\\nconst Identifier = require('@dashevo/dpp/lib/Identifier');\\n\\nconst client = new DAPIClient();\\n\\n// Get identity from hex public key hash\\nconst publicKeyHash = '2251b999499564dba481e36e0bfeeacfe5aa582e';\\nconst publicKeysBuffer = [Buffer.from(publicKeyHash, 'hex')];\\n\\nclient.platform.getIdentityIdsByPublicKeyHashes(publicKeysBuffer)\\n  .then((response) => {\\n    for (const r of response) {\\n      console.log(`Identity ID: ${Identifier.from(r).toString()}`);\\n    }\\n  });\",\n      \"language\": \"javascript\",\n      \"name\": \"JavaScript (dapi-client)\"\n    },\n    {\n      \"code\": \"const {\\n  v0: {\\n    PlatformPromiseClient,\\n    GetIdentityIdsByPublicKeyHashesRequest,\\n  },\\n} = require('@dashevo/dapi-grpc');\\nconst Identifier = require('@dashevo/dpp/lib/Identifier');\\n\\nconst platformPromiseClient = new PlatformPromiseClient(\\n  'http://seed.evonet.networks.dash.org:3010',\\n);\\n\\nconst publicKeyHash = '2251b999499564dba481e36e0bfeeacfe5aa582e';\\nconst publicKeysBuffer = [Buffer.from(publicKeyHash, 'hex')];\\n\\nconst getIdentityIdsByPublicKeyHashesRequest = new GetIdentityIdsByPublicKeyHashesRequest();\\ngetIdentityIdsByPublicKeyHashesRequest.setPublicKeyHashesList(publicKeysBuffer);\\n\\nplatformPromiseClient.getIdentityIdsByPublicKeyHashes(getIdentityIdsByPublicKeyHashesRequest)\\n  .then((response) => {\\n    for (const r of response.getIdentityIdsList()) {\\n      const id = Buffer.from(r);\\n      console.log(`Identity ID: ${Identifier.from(id).toString()}`);\\n    }\\n  })\\n  .catch((e) => console.error(e));\",\n      \"language\": \"javascript\",\n      \"name\": \"JavaScript (dapi-grpc)\"\n    },\n    {\n      \"code\": \"# `public_key_hashes` must be represented in base64\\ngrpcurl -proto protos/platform/v0/platform.proto -plaintext \\\\\\n  -d '{\\n    \\\"public_key_hashes\\\":\\\"IlG5mUmVZNukgeNuC/7qz+WqWC4=\\\"\\n    }' \\\\\\n  seed-1.evonet.networks.dash.org:3010 \\\\\\n  org.dash.platform.dapi.v0.Platform/getIdentityIdsByPublicKeyHashes\",\n      \"language\": \"shell\",\n      \"name\": \"gRPCurl\"\n    }\n  ]\n}\n[/block]\n\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"Identity ID: BhC9M3fQHyUCyuxH4WHdhn1VGgJ4JTLmer8qmTTHkYTe\",\n      \"language\": \"text\",\n      \"name\": \"Response (JavaScript)\"\n    },\n    {\n      \"code\": \"{\\n  \\\"identityIds\\\": [\\n    \\\"nuCzumg/s5LC1SplgbztDxV9AfZBr1wNklM4zK8xZ90=\\\"\\n  ]\\n}\",\n      \"language\": \"json\",\n      \"name\": \"Response (gRPCurl)\"\n    }\n  ]\n}\n[/block]\n## getDataContract\n\n**Returns**: [Data Contract](explanation-platform-protocol-data-contract) information for the requested data contract\n**Parameters**:\n\n| Name | Type | Required | Description |\n| - | - | - | - |\n| `id` | Bytes | Yes | A data contract `id` |\n\n** Example Request and Response **\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"const DAPIClient = require('@dashevo/dapi-client');\\nconst Identifier = require('@dashevo/dpp/lib/Identifier');\\nconst cbor = require('cbor');\\n\\nconst client = new DAPIClient();\\n\\nconst contractId = Identifier.from('Q894cs83D8REQNo7mAetj1wPJK2W3svrwqaN61aP25W');\\nclient.platform.getDataContract(contractId).then((response) => {\\n  const contract = cbor.decode(response);\\n  console.dir(contract, {depth:10});\\n});\",\n      \"language\": \"javascript\",\n      \"name\": \"JavaScript (dapi-client)\"\n    },\n    {\n      \"code\": \"const {\\n  v0: {\\n    PlatformPromiseClient,\\n    GetDataContractRequest,\\n  },\\n} = require('@dashevo/dapi-grpc');\\nconst Identifier = require('@dashevo/dpp/lib/Identifier');\\nconst cbor = require('cbor');\\n\\nconst platformPromiseClient = new PlatformPromiseClient(\\n  'http://seed.evonet.networks.dash.org:3010',\\n);\\n\\nconst contractId = Identifier.from('Q894cs83D8REQNo7mAetj1wPJK2W3svrwqaN61aP25W');\\nconst contractIdBuffer = Buffer.from(contractId);\\nconst getDataContractRequest = new GetDataContractRequest();\\ngetDataContractRequest.setId(contractIdBuffer);\\n\\nplatformPromiseClient.getDataContract(getDataContractRequest)\\n  .then((response) => {\\n    const contractResponse = response.getDataContract();\\n    const contractBuffer = Buffer.from(contractResponse);\\n    console.dir(cbor.decode(contractBuffer), { depth: 5 });\\n  })\\n  .catch((e) => console.error(e));\",\n      \"language\": \"javascript\",\n      \"name\": \"JavaScript (dapi-grpc)\"\n    },\n    {\n      \"code\": \"# `id` must be represented in base64\\ngrpcurl -proto protos/platform/v0/platform.proto -plaintext \\\\\\n  -d '{\\n    \\\"id\\\":\\\"BexuQvZ7zeNK51eNqJDUMOCGHzPC+wfHrnqjqsg/CWk=\\\"\\n    }' \\\\\\n  seed-1.evonet.networks.dash.org:3010 \\\\\\n  org.dash.platform.dapi.v0.Platform/getDataContract\",\n      \"language\": \"shell\"\n    }\n  ]\n}\n[/block]\n\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"{\\n  '$id': Buffer(32) [Uint8Array] [\\n      5, 236, 110,  66, 246, 123, 205, 227,\\n     74, 231,  87, 141, 168, 144, 212,  48,\\n    224, 134,  31,  51, 194, 251,   7, 199,\\n    174, 122, 163, 170, 200,  63,   9, 105\\n  ],\\n  '$schema': 'https://schema.dash.org/dpp-0-4-0/meta/data-contract',\\n  ownerId: Buffer(32) [Uint8Array] [\\n    158, 224, 179, 186, 104,  63, 179, 146,\\n    194, 213,  42, 101, 129, 188, 237,  15,\\n     21, 125,   1, 246,  65, 175,  92,  13,\\n    146,  83,  56, 204, 175,  49, 103, 221\\n  ],\\n  documents: {\\n    note: {\\n      properties: { message: { type: 'string' } },\\n      additionalProperties: false\\n    }\\n  },\\n  protocolVersion: 0\\n}\",\n      \"language\": \"json\",\n      \"name\": \"Response (JavaScript)\"\n    },\n    {\n      \"code\": \"{\\n  \\\"dataContract\\\": \\\"pWMkaWRYIAXsbkL2e83jSudXjaiQ1DDghh8zwvsHx656o6rIPwlpZyRzY2hlbWF4NGh0dHBzOi8vc2NoZW1hLmRhc2gub3JnL2RwcC0wLTQtMC9tZXRhL2RhdGEtY29udHJhY3Rnb3duZXJJZFggnuCzumg/s5LC1SplgbztDxV9AfZBr1wNklM4zK8xZ91pZG9jdW1lbnRzoWRub3Rlompwcm9wZXJ0aWVzoWdtZXNzYWdloWR0eXBlZnN0cmluZ3RhZGRpdGlvbmFsUHJvcGVydGllc/RvcHJvdG9jb2xWZXJzaW9uAA==\\\"\\n}\\n\",\n      \"language\": \"json\",\n      \"name\": \"Response (gRPCurl)\"\n    }\n  ]\n}\n[/block]\n\n## getDocuments\n\n**Returns**: [Document](explanation-platform-protocol-document) information for the requested document(s)\n**Parameters**:\n\n| Name | Type | Required | Description |\n| - | - | - | - |\n| `data_contract_id` | Bytes | Yes | A data contract `id` |\n| `document_type` | String | Yes | A document type defined by the data contract (e.g. `preorder` or `domain` for the DPNS contract) |\n| `where` * | Bytes | No | Where clause to filter the results (**must be CBOR encoded**) |\n| `order_by` * | Bytes | No | Sort records by the field(s) provided (**must be CBOR encoded**) |\n| `limit` | Integer | No | Maximum number of results to return |\n| ---------- | | | |\n| _One_ of the following: | | | |\n| `start_at` | Integer | No | Return records beginning with the index provided |\n| `start_after` | Integer | No | Return records beginning after the index provided |\n[block:callout]\n{\n  \"type\": \"warning\",\n  \"title\": \"* Parameter constraints\",\n  \"body\": \"The `where`, `order_by`, `limit`, `start_at`, and `start_after` parameters must comply with the limits defined on the [Query Syntax](reference-query-syntax) page.\\n\\nAdditionally, note that `where` and `order_by` must be [CBOR](https://tools.ietf.org/html/rfc7049) encoded.\"\n}\n[/block]\n\n** Example Request and Response **\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"const DAPIClient = require('@dashevo/dapi-client');\\nconst Identifier = require('@dashevo/dpp/lib/Identifier');\\nconst cbor = require('cbor');\\n\\nconst client = new DAPIClient();\\n\\nconst contractId = Identifier.from('Q894cs83D8REQNo7mAetj1wPJK2W3svrwqaN61aP25W');\\nclient.platform.getDocuments(contractId, 'note', { limit: 1 }).then((response) => {\\n  for (const rawData of response) {\\n    console.log(cbor.decode(rawData));\\n  }\\n});\",\n      \"language\": \"javascript\",\n      \"name\": \"JavaScript (dapi-client)\"\n    },\n    {\n      \"code\": \"const {\\n  v0: {\\n    PlatformPromiseClient,\\n    GetDocumentsRequest,\\n  },\\n} = require('@dashevo/dapi-grpc');\\nconst cbor = require('cbor');\\nconst Identifier = require('@dashevo/dpp/lib/Identifier');\\n\\nconst platformPromiseClient = new PlatformPromiseClient(\\n  'http://seed-1.evonet.networks.dash.org:3010',\\n);\\n\\nconst contractId = Identifier.from('Q894cs83D8REQNo7mAetj1wPJK2W3svrwqaN61aP25W');\\nconst contractIdBuffer = Buffer.from(contractId);\\nconst getDocumentsRequest = new GetDocumentsRequest();\\nconst type = 'note';\\nconst limit = 1;\\n\\ngetDocumentsRequest.setDataContractId(contractIdBuffer);\\ngetDocumentsRequest.setDocumentType(type);\\n// getDocumentsRequest.setWhere(whereSerialized);\\n// getDocumentsRequest.setOrderBy(orderBySerialized);\\ngetDocumentsRequest.setLimit(limit);\\n// getDocumentsRequest.setStartAfter(startAfter);\\n// getDocumentsRequest.setStartAt(startAt);\\n\\nplatformPromiseClient.getDocuments(getDocumentsRequest)\\n  .then((response) => {\\n    for (const document of response.getDocumentsList()) {\\n      console.log(cbor.decode(Buffer.from(document)));\\n    }\\n  })\\n  .catch((e) => console.error(e));\",\n      \"language\": \"javascript\",\n      \"name\": \"JavaScript (dapi-grpc)\"\n    },\n    {\n      \"code\": \"# Request one DPNS document\\n# `id` must be represented in base64\\ngrpcurl -proto protos/platform/v0/platform.proto -plaintext \\\\\\n  -d '{\\n    \\\"data_contract_id\\\":\\\"BexuQvZ7zeNK51eNqJDUMOCGHzPC+wfHrnqjqsg/CWk=\\\",\\n    \\\"document_type\\\":\\\"note\\\",\\n    \\\"limit\\\":1\\n    }' \\\\\\n  seed-1.evonet.networks.dash.org:3010 \\\\\\n  org.dash.platform.dapi.v0.Platform/getDocuments\",\n      \"language\": \"shell\",\n      \"name\": \"Request (gRPCurl)\"\n    }\n  ]\n}\n[/block]\n\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"{\\n  '$id': <Buffer 31 39 11 9a bc 87 b9 d7 a8 f0 76 d0 bb 85 9f 0b 7c cc 99 ed 21 65 1c 4c 79 14 9d c1 35 07 39 d6>,\\n  '$type': 'note',\\n  message: 'Tutorial Test @ Thu, 29 Oct 2020 20:39:40 GMT',\\n  '$ownerId': <Buffer 9e e0 b3 ba 68 3f b3 92 c2 d5 2a 65 81 bc ed 0f 15 7d 01 f6 41 af 5c 0d 92 53 38 cc af 31 67 dd>,\\n  '$revision': 1,\\n  '$dataContractId': <Buffer 05 ec 6e 42 f6 7b cd e3 4a e7 57 8d a8 90 d4 30 e0 86 1f 33 c2 fb 07 c7 ae 7a a3 aa c8 3f 09 69>,\\n  '$protocolVersion': 0\\n}\",\n      \"language\": \"json\",\n      \"name\": \"Response (JavaScript)\"\n    },\n    {\n      \"code\": \"{\\n  \\\"documents\\\": [\\n    \\\"p2MkaWRYIDE5EZq8h7nXqPB20LuFnwt8zJntIWUcTHkUncE1BznWZSR0eXBlZG5vdGVnbWVzc2FnZXgtVHV0b3JpYWwgVGVzdCBAIFRodSwgMjkgT2N0IDIwMjAgMjA6Mzk6NDAgR01UaCRvd25lcklkWCCe4LO6aD+zksLVKmWBvO0PFX0B9kGvXA2SUzjMrzFn3WkkcmV2aXNpb24BbyRkYXRhQ29udHJhY3RJZFggBexuQvZ7zeNK51eNqJDUMOCGHzPC+wfHrnqjqsg/CWlwJHByb3RvY29sVmVyc2lvbgA=\\\"\\n  ]\\n}\",\n      \"language\": \"json\",\n      \"name\": \"Response (gRPCurl)\"\n    }\n  ]\n}\n[/block]\n\n# Deprecated Endpoints\n\n## applyStateTransition\n[block:callout]\n{\n  \"type\": \"danger\",\n  \"title\": \"Deprecated RPC\",\n  \"body\": \"Renamed to [`broadcastStateTransition`](#broadcaststatetransition) in Dash Platform v0.15.0\"\n}\n[/block]\n\n## getIdentityByFirstPublicKey\n[block:callout]\n{\n  \"type\": \"danger\",\n  \"title\": \"Removed in Dash Platform v0.16\",\n  \"body\": \"Similar functionality available with [getIdentitiesByPublicKeyHashes](#getidentitiesbypublickeyhashes)\"\n}\n[/block]\n## getIdentityIdByFirstPublicKey\n[block:callout]\n{\n  \"type\": \"danger\",\n  \"title\": \"Removed in Dash Platform v0.16\",\n  \"body\": \"Similar functionality available with [getIdentityIdsByPublicKeyHashes](#getidentityidsbypublickeyhashes)\"\n}\n[/block]\n# Code Reference\nImplementation details related to the information on this page can be found in:\n- The [DAPI repository](https://github.com/dashevo/dapi) `lib/grpcServer/handlers/platform` folder\n- The [dapi-grpc repository](https://github.com/dashevo/dapi-grpc/) `protos` folder", 
 "link_external": false, 
 "body_html": "<div class=\"magic-block-callout type-info \">\n\t<h3><i title=\"Info\" class=\"fa fa-info-circle\"></i>gRPC Overview\n\t</h3>\n\t<div class=\"callout-body\"><p>Please refer to the <a href=\"reference-dapi-endpoints-grpc-overview\">gRPC Overview</a> for details regarding running the examples shown below, encoding/decoding the request/response data, and clients available for several languages.</p>\n\n\t</div>\n</div>\n<div class=\"magic-block-textarea\"><h1 class=\"header-scroll\"><div class=\"anchor waypoint\" id=\"section-endpoint-details\"></div>Endpoint Details<a class=\"fa fa-anchor\" href=\"#section-endpoint-details\"></a></h1>\n<h2 class=\"header-scroll\"><div class=\"anchor waypoint\" id=\"section-broadcast-state-transition\"></div>broadcastStateTransition<a class=\"fa fa-anchor\" href=\"#section-broadcast-state-transition\"></a></h2>\n\n</div>\n<div class=\"magic-block-callout type-success \">\n\t<h3><i title=\"Success\" class=\"fa fa-check-square\"></i>New in Dash Platform v0.15.0\n\t</h3>\n\t<div class=\"callout-body\"><p>Previously named <code>applyStateTransition</code></p>\n\n\t</div>\n</div>\n<div class=\"magic-block-textarea\"><p>Broadcasts a <a href=\"explanation-platform-protocol-state-transition\">state transition</a> to the platform via DAPI to make a change to layer 2 data.</p>\n<p><strong>Returns</strong>: Nothing or error<br><strong>Parameters</strong>:</p>\n<div class=\"marked-table\"><table>\n<thead>\n<tr>\n<th>Name</th>\n<th>Type</th>\n<th>Required</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>state_transition</code></td>\n<td>Bytes</td>\n<td>Yes</td>\n<td>A <a href=\"explanation-platform-protocol-state-transition\">state transition</a></td>\n</tr>\n</tbody>\n</table></div>\n<p><strong> Example Request and Response </strong></p>\n\n</div>\n<div class=\"magic-block-code\">\n\t<ul class=\"block-code-header\">\n\t\t<li><a href=\"\" ng-click=\"showCode(0)\" ng-class=\"{active: (0 == tab)}\">Request (gRPCurl)</a></li>\n\t\t<li><a href=\"\" ng-click=\"showCode(1)\" ng-class=\"{active: (1 == tab)}\">JavaScript (dapi-grcp)</a></li>\n\t</ul>\n\t<div class=\"block-code-code\"><span ng-if=\"tab == 0\">\n\t\t\t<button ng-click=\"copyCode(486)\" class=\"copy-code-button\"><span ng-show=\"!copied\" class=\"fa fa-clipboard\"></span><span ng-show=\"copied\" class=\"fa fa-check\"></span></button>\n\t\t\t<textarea ng-non-bindable=\"ng-non-bindable\" style=\"position: absolute; left: -10000px;\" id=\"text-code-486\"># Submit an identity create State Transition\n# `state_transition` must be represented in base64\ngrpcurl -proto protos/platform/v0/platform.proto -plaintext \\\n  -d '{\n    &quot;state_transition&quot;:&quot;pWR0eXBlAmlzaWduYXR1cmV4WEg3TWhFWDQ0Z3JzMVIwTE9XTU5IZjAxWFNpYVFQcUlVZ1JLRXQyMkxHVERsUlUrZ1BwQUlUZk5JUmhXd3IvYTVHd0lzWm1idGdYVVFxcVhjbW9lQWtUOD1qcHVibGljS2V5c4GkYmlkAGRkYXRheCxBdzh2UmYxeFFCTlVLbzNiY2llaHlaR2NhM0hBSThkY0ZvVWJTK3hLb0lITmR0eXBlAGlpc0VuYWJsZWT1bmxvY2tlZE91dFBvaW50eDBLT1VUSHB5YnFPek9DNnhEVUhFWm9uc1lNSVpqcGppTHFZNnkxYmlWNWxRQUFBQUFvcHJvdG9jb2xWZXJzaW9uAA==&quot;\n\n    }' \\\n  seed-1.evonet.networks.dash.org:3010 \\\n  org.dash.platform.dapi.v0.Platform/broadcastStateTransition</textarea>\n\t\t\t<pre id=\"code-486\"><code><span class='cm-s-neo'><span class=\"cm-comment\"># Submit an identity create State Transition</span>\n<span class=\"cm-comment\"># `state_transition` must be represented in base64</span>\ngrpcurl <span class=\"cm-attribute\">-proto</span> protos&#47;platform&#47;v0&#47;platform.proto <span class=\"cm-attribute\">-plaintext</span> \\\n  <span class=\"cm-attribute\">-d</span> <span class=\"cm-string\">'{</span>\n<span class=\"cm-string\">    \"state_transition\":\"pWR0eXBlAmlzaWduYXR1cmV4WEg3TWhFWDQ0Z3JzMVIwTE9XTU5IZjAxWFNpYVFQcUlVZ1JLRXQyMkxHVERsUlUrZ1BwQUlUZk5JUmhXd3IvYTVHd0lzWm1idGdYVVFxcVhjbW9lQWtUOD1qcHVibGljS2V5c4GkYmlkAGRkYXRheCxBdzh2UmYxeFFCTlVLbzNiY2llaHlaR2NhM0hBSThkY0ZvVWJTK3hLb0lITmR0eXBlAGlpc0VuYWJsZWT1bmxvY2tlZE91dFBvaW50eDBLT1VUSHB5YnFPek9DNnhEVUhFWm9uc1lNSVpqcGppTHFZNnkxYmlWNWxRQUFBQUFvcHJvdG9jb2xWZXJzaW9uAA==\"</span>\n\n<span class=\"cm-string\">    }'</span> \\\n  seed-1.evonet.networks.dash.org:3010 \\\n  org.dash.platform.dapi.v0.Platform&#47;broadcastStateTransition</span></code></pre></span><span ng-if=\"tab == 1\">\n\t\t\t<button ng-click=\"copyCode(329)\" class=\"copy-code-button\"><span ng-show=\"!copied\" class=\"fa fa-clipboard\"></span><span ng-show=\"copied\" class=\"fa fa-check\"></span></button>\n\t\t\t<textarea ng-non-bindable=\"ng-non-bindable\" style=\"position: absolute; left: -10000px;\" id=\"text-code-329\">const {\n  v0: {\n    PlatformPromiseClient,\n    BroadcastStateTransitionRequest,\n  },\n} = require('@dashevo/dapi-grpc');\nconst DashPlatformProtocol = require('@dashevo/dpp');\n\nconst platformPromiseClient = new PlatformPromiseClient(\n  'http://seed-1.evonet.networks.dash.org:3010',\n);\n\nconst dpp = new DashPlatformProtocol();\n\n// Data Contract Create State Transition (JSON)\nconst stateTransitionObject = {\n  protocolVersion: 0,\n  type: 0,\n  signature: 'IAp3sn0tLA2FyxsWbEgrgIrjpNig0VdlgVHrBFiHtTvrAU7d7kkpQ0mUdK8PhMZjOKaepVOPRTDQgnHfVZ6HESA=',\n  signaturePublicKeyId: 0,\n  dataContract: {\n    protocolVersion: 0,\n    '$id': 'HvjAUGUHuVBWP7vXEWWmBSb4mTCoquhxenbziyGM14aF',\n    '$schema': 'https://schema.dash.org/dpp-0-4-0/meta/data-contract',\n    ownerId: '7NUbPf231ixt1kVBQsBvSMMBxd7AgPad8KtdtfFGhXDP',\n    documents: {\n      note: {\n        properties: { message: { type: 'string' } },\n        additionalProperties: false\n      }\n    }\n  },\n  entropy: 'XyuDb+YebayRZT4vxQQnzP7htozTXYEHRnBFL9KQjDg='\n};\n\n// Convert signature and entropy to buffer\nstateTransitionObject.signature = Buffer.from(stateTransitionObject.signature, 'base64');\nstateTransitionObject.entropy = Buffer.from(stateTransitionObject.entropy, 'base64');\n\nconst broadcastStateTransitionRequest = new BroadcastStateTransitionRequest();\n\ndpp.stateTransition.createFromObject(stateTransitionObject, { skipValidation: true })\n  .then((stateTransition) =&gt; {\n    console.log(stateTransition);\n    broadcastStateTransitionRequest.setStateTransition(stateTransition.toBuffer());\n\n    platformPromiseClient.broadcastStateTransition(broadcastStateTransitionRequest)\n      .then(() =&gt; console.log('State Transition broadcast successfully'))\n      .catch((e) =&gt; {\n        console.error(e);\n        console.error(e.metadata);\n      });\n  })\n  .catch((e) =&gt; console.error(e));\n</textarea>\n\t\t\t<pre id=\"code-329\"><code><span class='cm-s-neo'><span class=\"cm-keyword\">const</span> {\n  <span class=\"cm-property\">v0</span>: {\n    <span class=\"cm-def\">PlatformPromiseClient</span>,\n    <span class=\"cm-def\">BroadcastStateTransitionRequest</span>,\n  },\n} <span class=\"cm-operator\">=</span> <span class=\"cm-variable\">require</span>(<span class=\"cm-string\">'@dashevo&#47;dapi-grpc'</span>);\n<span class=\"cm-keyword\">const</span> <span class=\"cm-def\">DashPlatformProtocol</span> <span class=\"cm-operator\">=</span> <span class=\"cm-variable\">require</span>(<span class=\"cm-string\">'@dashevo&#47;dpp'</span>);\n\n<span class=\"cm-keyword\">const</span> <span class=\"cm-def\">platformPromiseClient</span> <span class=\"cm-operator\">=</span> <span class=\"cm-keyword\">new</span> <span class=\"cm-variable\">PlatformPromiseClient</span>(\n  <span class=\"cm-string\">'http:&#47;&#47;seed-1.evonet.networks.dash.org:3010'</span>,\n);\n\n<span class=\"cm-keyword\">const</span> <span class=\"cm-def\">dpp</span> <span class=\"cm-operator\">=</span> <span class=\"cm-keyword\">new</span> <span class=\"cm-variable\">DashPlatformProtocol</span>();\n\n<span class=\"cm-comment\">&#47;&#47; Data Contract Create State Transition (JSON)</span>\n<span class=\"cm-keyword\">const</span> <span class=\"cm-def\">stateTransitionObject</span> <span class=\"cm-operator\">=</span> {\n  <span class=\"cm-property\">protocolVersion</span>: <span class=\"cm-number\">0</span>,\n  <span class=\"cm-property\">type</span>: <span class=\"cm-number\">0</span>,\n  <span class=\"cm-property\">signature</span>: <span class=\"cm-string\">'IAp3sn0tLA2FyxsWbEgrgIrjpNig0VdlgVHrBFiHtTvrAU7d7kkpQ0mUdK8PhMZjOKaepVOPRTDQgnHfVZ6HESA='</span>,\n  <span class=\"cm-property\">signaturePublicKeyId</span>: <span class=\"cm-number\">0</span>,\n  <span class=\"cm-property\">dataContract</span>: {\n    <span class=\"cm-property\">protocolVersion</span>: <span class=\"cm-number\">0</span>,\n    <span class=\"cm-string cm-property\">'$id'</span>: <span class=\"cm-string\">'HvjAUGUHuVBWP7vXEWWmBSb4mTCoquhxenbziyGM14aF'</span>,\n    <span class=\"cm-string cm-property\">'$schema'</span>: <span class=\"cm-string\">'https:&#47;&#47;schema.dash.org&#47;dpp-0-4-0&#47;meta&#47;data-contract'</span>,\n    <span class=\"cm-property\">ownerId</span>: <span class=\"cm-string\">'7NUbPf231ixt1kVBQsBvSMMBxd7AgPad8KtdtfFGhXDP'</span>,\n    <span class=\"cm-property\">documents</span>: {\n      <span class=\"cm-property\">note</span>: {\n        <span class=\"cm-property\">properties</span>: { <span class=\"cm-property\">message</span>: { <span class=\"cm-property\">type</span>: <span class=\"cm-string\">'string'</span> } },\n        <span class=\"cm-property\">additionalProperties</span>: <span class=\"cm-atom\">false</span>\n      }\n    }\n  },\n  <span class=\"cm-property\">entropy</span>: <span class=\"cm-string\">'XyuDb+YebayRZT4vxQQnzP7htozTXYEHRnBFL9KQjDg='</span>\n};\n\n<span class=\"cm-comment\">&#47;&#47; Convert signature and entropy to buffer</span>\n<span class=\"cm-variable\">stateTransitionObject</span>.<span class=\"cm-property\">signature</span> <span class=\"cm-operator\">=</span> <span class=\"cm-variable\">Buffer</span>.<span class=\"cm-property\">from</span>(<span class=\"cm-variable\">stateTransitionObject</span>.<span class=\"cm-property\">signature</span>, <span class=\"cm-string\">'base64'</span>);\n<span class=\"cm-variable\">stateTransitionObject</span>.<span class=\"cm-property\">entropy</span> <span class=\"cm-operator\">=</span> <span class=\"cm-variable\">Buffer</span>.<span class=\"cm-property\">from</span>(<span class=\"cm-variable\">stateTransitionObject</span>.<span class=\"cm-property\">entropy</span>, <span class=\"cm-string\">'base64'</span>);\n\n<span class=\"cm-keyword\">const</span> <span class=\"cm-def\">broadcastStateTransitionRequest</span> <span class=\"cm-operator\">=</span> <span class=\"cm-keyword\">new</span> <span class=\"cm-variable\">BroadcastStateTransitionRequest</span>();\n\n<span class=\"cm-variable\">dpp</span>.<span class=\"cm-property\">stateTransition</span>.<span class=\"cm-property\">createFromObject</span>(<span class=\"cm-variable\">stateTransitionObject</span>, { <span class=\"cm-property\">skipValidation</span>: <span class=\"cm-atom\">true</span> })\n  .<span class=\"cm-property\">then</span>((<span class=\"cm-def\">stateTransition</span>) <span class=\"cm-operator\">=&gt;</span> {\n    <span class=\"cm-variable\">console</span>.<span class=\"cm-property\">log</span>(<span class=\"cm-variable-2\">stateTransition</span>);\n    <span class=\"cm-variable\">broadcastStateTransitionRequest</span>.<span class=\"cm-property\">setStateTransition</span>(<span class=\"cm-variable-2\">stateTransition</span>.<span class=\"cm-property\">toBuffer</span>());\n\n    <span class=\"cm-variable\">platformPromiseClient</span>.<span class=\"cm-property\">broadcastStateTransition</span>(<span class=\"cm-variable\">broadcastStateTransitionRequest</span>)\n      .<span class=\"cm-property\">then</span>(() <span class=\"cm-operator\">=&gt;</span> <span class=\"cm-variable\">console</span>.<span class=\"cm-property\">log</span>(<span class=\"cm-string\">'State Transition broadcast successfully'</span>))\n      .<span class=\"cm-property\">catch</span>((<span class=\"cm-def\">e</span>) <span class=\"cm-operator\">=&gt;</span> {\n        <span class=\"cm-variable\">console</span>.<span class=\"cm-property\">error</span>(<span class=\"cm-variable-2\">e</span>);\n        <span class=\"cm-variable\">console</span>.<span class=\"cm-property\">error</span>(<span class=\"cm-variable-2\">e</span>.<span class=\"cm-property\">metadata</span>);\n      });\n  })\n  .<span class=\"cm-property\">catch</span>((<span class=\"cm-def\">e</span>) <span class=\"cm-operator\">=&gt;</span> <span class=\"cm-variable\">console</span>.<span class=\"cm-property\">error</span>(<span class=\"cm-variable-2\">e</span>));\n</span></code></pre></span>\n\t</div>\n</div>\n<div class=\"magic-block-textarea\"><p><strong>Response</strong>: No response except on error</p>\n<h2 class=\"header-scroll\"><div class=\"anchor waypoint\" id=\"section-get-identity\"></div>getIdentity<a class=\"fa fa-anchor\" href=\"#section-get-identity\"></a></h2>\n<p><strong>Returns</strong>: <a href=\"explanation-identity\">Identity</a> information for the requested identity<br><strong>Parameters</strong>:</p>\n<div class=\"marked-table\"><table>\n<thead>\n<tr>\n<th>Name</th>\n<th>Type</th>\n<th>Required</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>id</code></td>\n<td>Bytes</td>\n<td>Yes</td>\n<td>An identity <code>id</code></td>\n</tr>\n</tbody>\n</table></div>\n<p><strong> Example Request and Response </strong></p>\n\n</div>\n<div class=\"magic-block-code\">\n\t<ul class=\"block-code-header\">\n\t\t<li><a href=\"\" ng-click=\"showCode(0)\" ng-class=\"{active: (0 == tab)}\">JavaScript (dapi-client)</a></li>\n\t\t<li><a href=\"\" ng-click=\"showCode(1)\" ng-class=\"{active: (1 == tab)}\">JavaScript (dapi-grpc)</a></li>\n\t\t<li><a href=\"\" ng-click=\"showCode(2)\" ng-class=\"{active: (2 == tab)}\">gRPCurl</a></li>\n\t</ul>\n\t<div class=\"block-code-code\"><span ng-if=\"tab == 0\">\n\t\t\t<button ng-click=\"copyCode(389)\" class=\"copy-code-button\"><span ng-show=\"!copied\" class=\"fa fa-clipboard\"></span><span ng-show=\"copied\" class=\"fa fa-check\"></span></button>\n\t\t\t<textarea ng-non-bindable=\"ng-non-bindable\" style=\"position: absolute; left: -10000px;\" id=\"text-code-389\">const DAPIClient = require('@dashevo/dapi-client');\nconst Identifier = require('@dashevo/dpp/lib/Identifier');\nconst cbor = require('cbor');\n\nconst client = new DAPIClient();\n\nconst identityId = Identifier.from('BhC9M3fQHyUCyuxH4WHdhn1VGgJ4JTLmer8qmTTHkYTe');\nclient.platform.getIdentity(identityId).then((response) =&gt; {\n  const identity = cbor.decode(response);\n  console.log(identity);\n});</textarea>\n\t\t\t<pre id=\"code-389\"><code><span class='cm-s-neo'><span class=\"cm-keyword\">const</span> <span class=\"cm-def\">DAPIClient</span> <span class=\"cm-operator\">=</span> <span class=\"cm-variable\">require</span>(<span class=\"cm-string\">'@dashevo&#47;dapi-client'</span>);\n<span class=\"cm-keyword\">const</span> <span class=\"cm-def\">Identifier</span> <span class=\"cm-operator\">=</span> <span class=\"cm-variable\">require</span>(<span class=\"cm-string\">'@dashevo&#47;dpp&#47;lib&#47;Identifier'</span>);\n<span class=\"cm-keyword\">const</span> <span class=\"cm-def\">cbor</span> <span class=\"cm-operator\">=</span> <span class=\"cm-variable\">require</span>(<span class=\"cm-string\">'cbor'</span>);\n\n<span class=\"cm-keyword\">const</span> <span class=\"cm-def\">client</span> <span class=\"cm-operator\">=</span> <span class=\"cm-keyword\">new</span> <span class=\"cm-variable\">DAPIClient</span>();\n\n<span class=\"cm-keyword\">const</span> <span class=\"cm-def\">identityId</span> <span class=\"cm-operator\">=</span> <span class=\"cm-variable\">Identifier</span>.<span class=\"cm-property\">from</span>(<span class=\"cm-string\">'BhC9M3fQHyUCyuxH4WHdhn1VGgJ4JTLmer8qmTTHkYTe'</span>);\n<span class=\"cm-variable\">client</span>.<span class=\"cm-property\">platform</span>.<span class=\"cm-property\">getIdentity</span>(<span class=\"cm-variable\">identityId</span>).<span class=\"cm-property\">then</span>((<span class=\"cm-def\">response</span>) <span class=\"cm-operator\">=&gt;</span> {\n  <span class=\"cm-keyword\">const</span> <span class=\"cm-def\">identity</span> <span class=\"cm-operator\">=</span> <span class=\"cm-variable\">cbor</span>.<span class=\"cm-property\">decode</span>(<span class=\"cm-variable-2\">response</span>);\n  <span class=\"cm-variable\">console</span>.<span class=\"cm-property\">log</span>(<span class=\"cm-variable-2\">identity</span>);\n});</span></code></pre></span><span ng-if=\"tab == 1\">\n\t\t\t<button ng-click=\"copyCode(278)\" class=\"copy-code-button\"><span ng-show=\"!copied\" class=\"fa fa-clipboard\"></span><span ng-show=\"copied\" class=\"fa fa-check\"></span></button>\n\t\t\t<textarea ng-non-bindable=\"ng-non-bindable\" style=\"position: absolute; left: -10000px;\" id=\"text-code-278\">const {\n  v0: {\n    PlatformPromiseClient,\n  },\n} = require('@dashevo/dapi-grpc');\nconst Identifier = require('@dashevo/dpp/lib/Identifier');\nconst cbor = require('cbor');\n\nconst platformPromiseClient = new PlatformPromiseClient(\n  'http://seed.evonet.networks.dash.org:3010',\n);\n\nconst id = Identifier.from('BhC9M3fQHyUCyuxH4WHdhn1VGgJ4JTLmer8qmTTHkYTe');\nconst idBuffer = Buffer.from(id);\nconst getIdentityRequest = new GetIdentityRequest();\ngetIdentityRequest.setId(idBuffer);\n\nplatformPromiseClient.getIdentity(getIdentityRequest)\n  .then((response) =&gt; {\n    const identityResponse = response.getIdentity();\n    const identityBuffer = Buffer.from(identityResponse);\n    console.log(cbor.decode(identityBuffer));\n  })\n  .catch((e) =&gt; console.error(e));</textarea>\n\t\t\t<pre id=\"code-278\"><code><span class='cm-s-neo'><span class=\"cm-keyword\">const</span> {\n  <span class=\"cm-property\">v0</span>: {\n    <span class=\"cm-def\">PlatformPromiseClient</span>,\n  },\n} <span class=\"cm-operator\">=</span> <span class=\"cm-variable\">require</span>(<span class=\"cm-string\">'@dashevo&#47;dapi-grpc'</span>);\n<span class=\"cm-keyword\">const</span> <span class=\"cm-def\">Identifier</span> <span class=\"cm-operator\">=</span> <span class=\"cm-variable\">require</span>(<span class=\"cm-string\">'@dashevo&#47;dpp&#47;lib&#47;Identifier'</span>);\n<span class=\"cm-keyword\">const</span> <span class=\"cm-def\">cbor</span> <span class=\"cm-operator\">=</span> <span class=\"cm-variable\">require</span>(<span class=\"cm-string\">'cbor'</span>);\n\n<span class=\"cm-keyword\">const</span> <span class=\"cm-def\">platformPromiseClient</span> <span class=\"cm-operator\">=</span> <span class=\"cm-keyword\">new</span> <span class=\"cm-variable\">PlatformPromiseClient</span>(\n  <span class=\"cm-string\">'http:&#47;&#47;seed.evonet.networks.dash.org:3010'</span>,\n);\n\n<span class=\"cm-keyword\">const</span> <span class=\"cm-def\">id</span> <span class=\"cm-operator\">=</span> <span class=\"cm-variable\">Identifier</span>.<span class=\"cm-property\">from</span>(<span class=\"cm-string\">'BhC9M3fQHyUCyuxH4WHdhn1VGgJ4JTLmer8qmTTHkYTe'</span>);\n<span class=\"cm-keyword\">const</span> <span class=\"cm-def\">idBuffer</span> <span class=\"cm-operator\">=</span> <span class=\"cm-variable\">Buffer</span>.<span class=\"cm-property\">from</span>(<span class=\"cm-variable\">id</span>);\n<span class=\"cm-keyword\">const</span> <span class=\"cm-def\">getIdentityRequest</span> <span class=\"cm-operator\">=</span> <span class=\"cm-keyword\">new</span> <span class=\"cm-variable\">GetIdentityRequest</span>();\n<span class=\"cm-variable\">getIdentityRequest</span>.<span class=\"cm-property\">setId</span>(<span class=\"cm-variable\">idBuffer</span>);\n\n<span class=\"cm-variable\">platformPromiseClient</span>.<span class=\"cm-property\">getIdentity</span>(<span class=\"cm-variable\">getIdentityRequest</span>)\n  .<span class=\"cm-property\">then</span>((<span class=\"cm-def\">response</span>) <span class=\"cm-operator\">=&gt;</span> {\n    <span class=\"cm-keyword\">const</span> <span class=\"cm-def\">identityResponse</span> <span class=\"cm-operator\">=</span> <span class=\"cm-variable-2\">response</span>.<span class=\"cm-property\">getIdentity</span>();\n    <span class=\"cm-keyword\">const</span> <span class=\"cm-def\">identityBuffer</span> <span class=\"cm-operator\">=</span> <span class=\"cm-variable\">Buffer</span>.<span class=\"cm-property\">from</span>(<span class=\"cm-variable-2\">identityResponse</span>);\n    <span class=\"cm-variable\">console</span>.<span class=\"cm-property\">log</span>(<span class=\"cm-variable\">cbor</span>.<span class=\"cm-property\">decode</span>(<span class=\"cm-variable-2\">identityBuffer</span>));\n  })\n  .<span class=\"cm-property\">catch</span>((<span class=\"cm-def\">e</span>) <span class=\"cm-operator\">=&gt;</span> <span class=\"cm-variable\">console</span>.<span class=\"cm-property\">error</span>(<span class=\"cm-variable-2\">e</span>));</span></code></pre></span><span ng-if=\"tab == 2\">\n\t\t\t<button ng-click=\"copyCode(605)\" class=\"copy-code-button\"><span ng-show=\"!copied\" class=\"fa fa-clipboard\"></span><span ng-show=\"copied\" class=\"fa fa-check\"></span></button>\n\t\t\t<textarea ng-non-bindable=\"ng-non-bindable\" style=\"position: absolute; left: -10000px;\" id=\"text-code-605\"># `id` must be represented in base64\ngrpcurl -proto protos/platform/v0/platform.proto -plaintext \\\n  -d '{\n    &quot;id&quot;:&quot;nuCzumg/s5LC1SplgbztDxV9AfZBr1wNklM4zK8xZ90=&quot;\n    }' \\\n  seed-1.evonet.networks.dash.org:3010 \\\n  org.dash.platform.dapi.v0.Platform/getIdentity</textarea>\n\t\t\t<pre id=\"code-605\"><code><span class='cm-s-neo'><span class=\"cm-comment\"># `id` must be represented in base64</span>\ngrpcurl <span class=\"cm-attribute\">-proto</span> protos&#47;platform&#47;v0&#47;platform.proto <span class=\"cm-attribute\">-plaintext</span> \\\n  <span class=\"cm-attribute\">-d</span> <span class=\"cm-string\">'{</span>\n<span class=\"cm-string\">    \"id\":\"nuCzumg&#47;s5LC1SplgbztDxV9AfZBr1wNklM4zK8xZ90=\"</span>\n<span class=\"cm-string\">    }'</span> \\\n  seed-1.evonet.networks.dash.org:3010 \\\n  org.dash.platform.dapi.v0.Platform&#47;getIdentity</span></code></pre></span>\n\t</div>\n</div>\n<div class=\"magic-block-code\">\n\t<ul class=\"block-code-header\">\n\t\t<li><a href=\"\" ng-click=\"showCode(0)\" ng-class=\"{active: (0 == tab)}\">Response (JavaScript)</a></li>\n\t\t<li><a href=\"\" ng-click=\"showCode(1)\" ng-class=\"{active: (1 == tab)}\">Response (gRPCurl)</a></li>\n\t</ul>\n\t<div class=\"block-code-code\"><span ng-if=\"tab == 0\">\n\t\t\t<button ng-click=\"copyCode(56)\" class=\"copy-code-button\"><span ng-show=\"!copied\" class=\"fa fa-clipboard\"></span><span ng-show=\"copied\" class=\"fa fa-check\"></span></button>\n\t\t\t<textarea ng-non-bindable=\"ng-non-bindable\" style=\"position: absolute; left: -10000px;\" id=\"text-code-56\">{\n  id: &lt;Buffer 9e e0 b3 ba 68 3f b3 92 c2 d5 2a 65 81 bc ed 0f 15 7d 01 f6 41 af 5c 0d 92 53 38 cc af 31 67 dd&gt;,\n  balance: 10994307,\n  revision: 0,\n  publicKeys: [\n    {\n      id: 0,\n      data: &lt;Buffer 03 f5 a6 bf e2 e1 c4 08 d2 04 4d 7d 77 73 89 09 46 b0 52 26 0e 44 5e 47 0c 37 ad 65 bb d3 0e 04 10&gt;,\n      type: 0\n    }\n  ],\n  protocolVersion: 0\n}</textarea>\n\t\t\t<pre id=\"code-56\"><code><span class='cm-s-neo'>{\n  <span class=\"cm-property\">id</span>: <span class=\"cm-operator\">&lt;</span><span class=\"cm-variable\">Buffer</span> <span class=\"cm-number\">9</span><span class=\"cm-variable\">e</span> <span class=\"cm-variable\">e0</span> <span class=\"cm-variable\">b3</span> <span class=\"cm-variable\">ba</span> <span class=\"cm-number\">68</span> <span class=\"cm-number\">3</span><span class=\"cm-variable\">f</span> <span class=\"cm-variable\">b3</span> <span class=\"cm-number\">92</span> <span class=\"cm-variable\">c2</span> <span class=\"cm-variable\">d5</span> <span class=\"cm-number\">2</span><span class=\"cm-variable\">a</span> <span class=\"cm-number\">65</span> <span class=\"cm-number\">81</span> <span class=\"cm-variable\">bc</span> <span class=\"cm-variable\">ed</span> <span class=\"cm-number\">0</span><span class=\"cm-variable\">f</span> <span class=\"cm-number\">15</span> <span class=\"cm-number\">7</span><span class=\"cm-variable\">d</span> <span class=\"cm-number\">01</span> <span class=\"cm-variable\">f6</span> <span class=\"cm-number\">41</span> <span class=\"cm-variable\">af</span> <span class=\"cm-number\">5</span><span class=\"cm-variable\">c</span> <span class=\"cm-number\">0</span><span class=\"cm-variable\">d</span> <span class=\"cm-number\">92</span> <span class=\"cm-number\">53</span> <span class=\"cm-number\">38</span> <span class=\"cm-variable\">cc</span> <span class=\"cm-variable\">af</span> <span class=\"cm-number\">31</span> <span class=\"cm-number\">67</span> <span class=\"cm-variable\">dd</span><span class=\"cm-operator\">&gt;</span>,\n  <span class=\"cm-variable\">balance</span>: <span class=\"cm-number\">10994307</span>,\n  <span class=\"cm-variable\">revision</span>: <span class=\"cm-number\">0</span>,\n  <span class=\"cm-variable\">publicKeys</span>: [\n    {\n      <span class=\"cm-variable\">id</span>: <span class=\"cm-number\">0</span>,\n      <span class=\"cm-variable\">data</span>: <span class=\"cm-operator\">&lt;</span><span class=\"cm-variable\">Buffer</span> <span class=\"cm-number\">03</span> <span class=\"cm-variable\">f5</span> <span class=\"cm-variable\">a6</span> <span class=\"cm-variable\">bf</span> <span class=\"cm-variable\">e2</span> <span class=\"cm-variable\">e1</span> <span class=\"cm-variable\">c4</span> <span class=\"cm-number\">08</span> <span class=\"cm-variable\">d2</span> <span class=\"cm-number\">04</span> <span class=\"cm-number\">4</span><span class=\"cm-variable\">d</span> <span class=\"cm-number\">7</span><span class=\"cm-variable\">d</span> <span class=\"cm-number\">77</span> <span class=\"cm-number\">73</span> <span class=\"cm-number\">89</span> <span class=\"cm-number\">09</span> <span class=\"cm-number\">46</span> <span class=\"cm-variable\">b0</span> <span class=\"cm-number\">52</span> <span class=\"cm-number\">26</span> <span class=\"cm-number\">0</span><span class=\"cm-variable\">e</span> <span class=\"cm-number\">44</span> <span class=\"cm-number\">5</span><span class=\"cm-variable\">e</span> <span class=\"cm-number\">47</span> <span class=\"cm-number\">0</span><span class=\"cm-variable\">c</span> <span class=\"cm-number\">37</span> <span class=\"cm-variable\">ad</span> <span class=\"cm-number\">65</span> <span class=\"cm-variable\">bb</span> <span class=\"cm-variable\">d3</span> <span class=\"cm-number\">0</span><span class=\"cm-variable\">e</span> <span class=\"cm-number\">04</span> <span class=\"cm-number\">10</span><span class=\"cm-operator\">&gt;</span>,\n      <span class=\"cm-variable\">type</span>: <span class=\"cm-number\">0</span>\n    }\n  ],\n  <span class=\"cm-variable\">protocolVersion</span>: <span class=\"cm-number\">0</span>\n}</span></code></pre></span><span ng-if=\"tab == 1\">\n\t\t\t<button ng-click=\"copyCode(388)\" class=\"copy-code-button\"><span ng-show=\"!copied\" class=\"fa fa-clipboard\"></span><span ng-show=\"copied\" class=\"fa fa-check\"></span></button>\n\t\t\t<textarea ng-non-bindable=\"ng-non-bindable\" style=\"position: absolute; left: -10000px;\" id=\"text-code-388\">{\n  &quot;identity&quot;: &quot;pWJpZFggnuCzumg/s5LC1SplgbztDxV9AfZBr1wNklM4zK8xZ91nYmFsYW5jZRoAp7gPaHJldmlzaW9uAGpwdWJsaWNLZXlzgaNiaWQAZGRhdGFYIQP1pr/i4cQI0gRNfXdziQlGsFImDkReRww3rWW70w4EEGR0eXBlAG9wcm90b2NvbFZlcnNpb24A&quot;\n}</textarea>\n\t\t\t<pre id=\"code-388\"><code><span class='cm-s-neo'>{\n  <span class=\"cm-property\">\"identity\"</span>: <span class=\"cm-string\">\"pWJpZFggnuCzumg&#47;s5LC1SplgbztDxV9AfZBr1wNklM4zK8xZ91nYmFsYW5jZRoAp7gPaHJldmlzaW9uAGpwdWJsaWNLZXlzgaNiaWQAZGRhdGFYIQP1pr&#47;i4cQI0gRNfXdziQlGsFImDkReRww3rWW70w4EEGR0eXBlAG9wcm90b2NvbFZlcnNpb24A\"</span>\n}</span></code></pre></span>\n\t</div>\n</div>\n<div class=\"magic-block-textarea\"><h2 class=\"header-scroll\"><div class=\"anchor waypoint\" id=\"section-get-identities-by-public-key-hashes\"></div>getIdentitiesByPublicKeyHashes<a class=\"fa fa-anchor\" href=\"#section-get-identities-by-public-key-hashes\"></a></h2>\n<p><strong>Returns</strong>: <a href=\"explanation-identity\">Identity</a> information associated with the provided public key hashes<br><strong>Parameters</strong>:</p>\n<div class=\"marked-table\"><table>\n<thead>\n<tr>\n<th>Name</th>\n<th>Type</th>\n<th>Required</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>public_key_hashes</code></td>\n<td>Bytes</td>\n<td>Yes</td>\n<td>Public key hashes (double-sha256) of identity public keys</td>\n</tr>\n</tbody>\n</table></div>\n\n</div>\n<div class=\"magic-block-callout type-info \">\n\t<h3><i title=\"Info\" class=\"fa fa-info-circle\"></i>Public key hash\n\t</h3>\n\t<div class=\"callout-body\"><p>Note: the hash must be done using all fields of the identity public key object - e.g.</p>\n<pre><code class=\"lang-json\"><span class='cm-s-neo'>{\n  <span class=\"cm-property\">id</span>: <span class=\"cm-number\">0</span>,\n  <span class=\"cm-property\">type</span>: <span class=\"cm-number\">0</span>,\n  <span class=\"cm-property\">data</span>: <span class=\"cm-string\">'A&#47;Wmv+LhxAjSBE19d3OJCUawUiYORF5HDDetZbvTDgQQ'</span>\n}</span>\n</code></pre>\n<p>When using the js-dpp library, the hash can be accessed via the <a href=\"https://github.com/dashevo/js-dpp/blob/master/lib/identity/IdentityPublicKey.js\">IdentityPublicKey object&#39;s</a> <code>hash</code> method (e.g. <code>identity.getPublicKeyById(0).hash()</code>).</p>\n\n\t</div>\n</div>\n<div class=\"magic-block-textarea\"><p><strong> Example Request and Response </strong></p>\n\n</div>\n<div class=\"magic-block-code\">\n\t<ul class=\"block-code-header\">\n\t\t<li><a href=\"\" ng-click=\"showCode(0)\" ng-class=\"{active: (0 == tab)}\">JavaScript (dapi-client)</a></li>\n\t\t<li><a href=\"\" ng-click=\"showCode(1)\" ng-class=\"{active: (1 == tab)}\">JavaScript (dapi-grpc)</a></li>\n\t\t<li><a href=\"\" ng-click=\"showCode(2)\" ng-class=\"{active: (2 == tab)}\">gRPCurl</a></li>\n\t</ul>\n\t<div class=\"block-code-code\"><span ng-if=\"tab == 0\">\n\t\t\t<button ng-click=\"copyCode(245)\" class=\"copy-code-button\"><span ng-show=\"!copied\" class=\"fa fa-clipboard\"></span><span ng-show=\"copied\" class=\"fa fa-check\"></span></button>\n\t\t\t<textarea ng-non-bindable=\"ng-non-bindable\" style=\"position: absolute; left: -10000px;\" id=\"text-code-245\">const DAPIClient = require('@dashevo/dapi-client');\nconst DashPlatformProtocol = require('@dashevo/dpp');\n\nconst client = new DAPIClient();\nconst dpp = new DashPlatformProtocol();\n\nconst publicKeyHash = '2251b999499564dba481e36e0bfeeacfe5aa582e';\nconst publicKeysBuffer = [Buffer.from(publicKeyHash, 'hex')];\n\nclient.platform.getIdentitiesByPublicKeyHashes(publicKeysBuffer)\n  .then((response) =&gt; {\n    const retrievedIdentity = dpp.identity.createFromBuffer(response[0]);\n    console.log(retrievedIdentity.toJSON());\n  });</textarea>\n\t\t\t<pre id=\"code-245\"><code><span class='cm-s-neo'><span class=\"cm-keyword\">const</span> <span class=\"cm-def\">DAPIClient</span> <span class=\"cm-operator\">=</span> <span class=\"cm-variable\">require</span>(<span class=\"cm-string\">'@dashevo&#47;dapi-client'</span>);\n<span class=\"cm-keyword\">const</span> <span class=\"cm-def\">DashPlatformProtocol</span> <span class=\"cm-operator\">=</span> <span class=\"cm-variable\">require</span>(<span class=\"cm-string\">'@dashevo&#47;dpp'</span>);\n\n<span class=\"cm-keyword\">const</span> <span class=\"cm-def\">client</span> <span class=\"cm-operator\">=</span> <span class=\"cm-keyword\">new</span> <span class=\"cm-variable\">DAPIClient</span>();\n<span class=\"cm-keyword\">const</span> <span class=\"cm-def\">dpp</span> <span class=\"cm-operator\">=</span> <span class=\"cm-keyword\">new</span> <span class=\"cm-variable\">DashPlatformProtocol</span>();\n\n<span class=\"cm-keyword\">const</span> <span class=\"cm-def\">publicKeyHash</span> <span class=\"cm-operator\">=</span> <span class=\"cm-string\">'2251b999499564dba481e36e0bfeeacfe5aa582e'</span>;\n<span class=\"cm-keyword\">const</span> <span class=\"cm-def\">publicKeysBuffer</span> <span class=\"cm-operator\">=</span> [<span class=\"cm-variable\">Buffer</span>.<span class=\"cm-property\">from</span>(<span class=\"cm-variable\">publicKeyHash</span>, <span class=\"cm-string\">'hex'</span>)];\n\n<span class=\"cm-variable\">client</span>.<span class=\"cm-property\">platform</span>.<span class=\"cm-property\">getIdentitiesByPublicKeyHashes</span>(<span class=\"cm-variable\">publicKeysBuffer</span>)\n  .<span class=\"cm-property\">then</span>((<span class=\"cm-def\">response</span>) <span class=\"cm-operator\">=&gt;</span> {\n    <span class=\"cm-keyword\">const</span> <span class=\"cm-def\">retrievedIdentity</span> <span class=\"cm-operator\">=</span> <span class=\"cm-variable\">dpp</span>.<span class=\"cm-property\">identity</span>.<span class=\"cm-property\">createFromBuffer</span>(<span class=\"cm-variable-2\">response</span>[<span class=\"cm-number\">0</span>]);\n    <span class=\"cm-variable\">console</span>.<span class=\"cm-property\">log</span>(<span class=\"cm-variable-2\">retrievedIdentity</span>.<span class=\"cm-property\">toJSON</span>());\n  });</span></code></pre></span><span ng-if=\"tab == 1\">\n\t\t\t<button ng-click=\"copyCode(246)\" class=\"copy-code-button\"><span ng-show=\"!copied\" class=\"fa fa-clipboard\"></span><span ng-show=\"copied\" class=\"fa fa-check\"></span></button>\n\t\t\t<textarea ng-non-bindable=\"ng-non-bindable\" style=\"position: absolute; left: -10000px;\" id=\"text-code-246\">const {\n  v0: {\n    PlatformPromiseClient,\n    GetIdentitiesByPublicKeyHashesRequest,\n  },\n} = require('@dashevo/dapi-grpc');\nconst cbor = require('cbor');\nconst DashPlatformProtocol = require('@dashevo/dpp');\n\nconst dpp = new DashPlatformProtocol();\nconst platformPromiseClient = new PlatformPromiseClient(\n  'http://seed.evonet.networks.dash.org:3010',\n);\n\nconst publicKeyHash = '2251b999499564dba481e36e0bfeeacfe5aa582e';\nconst publicKeysBuffer = [Buffer.from(publicKeyHash, 'hex')];\n\nconst getIdentitiesByPublicKeyHashesRequest = new GetIdentitiesByPublicKeyHashesRequest();\ngetIdentitiesByPublicKeyHashesRequest.setPublicKeyHashesList(publicKeysBuffer);\n\nplatformPromiseClient.getIdentitiesByPublicKeyHashes(getIdentitiesByPublicKeyHashesRequest)\n  .then((response) =&gt; {\n    const identitiesResponse = response.getIdentitiesList();\n    const identities = identitiesResponse\n      .map((identity) =&gt; (identity.length &gt; 0 ? cbor.decode(Buffer.from(identity)) : null));\n    console.log(dpp.identity.createFromObject(identities[0]).toJSON());\n  })\n  .catch((e) =&gt; console.error(e));</textarea>\n\t\t\t<pre id=\"code-246\"><code><span class='cm-s-neo'><span class=\"cm-keyword\">const</span> {\n  <span class=\"cm-property\">v0</span>: {\n    <span class=\"cm-def\">PlatformPromiseClient</span>,\n    <span class=\"cm-def\">GetIdentitiesByPublicKeyHashesRequest</span>,\n  },\n} <span class=\"cm-operator\">=</span> <span class=\"cm-variable\">require</span>(<span class=\"cm-string\">'@dashevo&#47;dapi-grpc'</span>);\n<span class=\"cm-keyword\">const</span> <span class=\"cm-def\">cbor</span> <span class=\"cm-operator\">=</span> <span class=\"cm-variable\">require</span>(<span class=\"cm-string\">'cbor'</span>);\n<span class=\"cm-keyword\">const</span> <span class=\"cm-def\">DashPlatformProtocol</span> <span class=\"cm-operator\">=</span> <span class=\"cm-variable\">require</span>(<span class=\"cm-string\">'@dashevo&#47;dpp'</span>);\n\n<span class=\"cm-keyword\">const</span> <span class=\"cm-def\">dpp</span> <span class=\"cm-operator\">=</span> <span class=\"cm-keyword\">new</span> <span class=\"cm-variable\">DashPlatformProtocol</span>();\n<span class=\"cm-keyword\">const</span> <span class=\"cm-def\">platformPromiseClient</span> <span class=\"cm-operator\">=</span> <span class=\"cm-keyword\">new</span> <span class=\"cm-variable\">PlatformPromiseClient</span>(\n  <span class=\"cm-string\">'http:&#47;&#47;seed.evonet.networks.dash.org:3010'</span>,\n);\n\n<span class=\"cm-keyword\">const</span> <span class=\"cm-def\">publicKeyHash</span> <span class=\"cm-operator\">=</span> <span class=\"cm-string\">'2251b999499564dba481e36e0bfeeacfe5aa582e'</span>;\n<span class=\"cm-keyword\">const</span> <span class=\"cm-def\">publicKeysBuffer</span> <span class=\"cm-operator\">=</span> [<span class=\"cm-variable\">Buffer</span>.<span class=\"cm-property\">from</span>(<span class=\"cm-variable\">publicKeyHash</span>, <span class=\"cm-string\">'hex'</span>)];\n\n<span class=\"cm-keyword\">const</span> <span class=\"cm-def\">getIdentitiesByPublicKeyHashesRequest</span> <span class=\"cm-operator\">=</span> <span class=\"cm-keyword\">new</span> <span class=\"cm-variable\">GetIdentitiesByPublicKeyHashesRequest</span>();\n<span class=\"cm-variable\">getIdentitiesByPublicKeyHashesRequest</span>.<span class=\"cm-property\">setPublicKeyHashesList</span>(<span class=\"cm-variable\">publicKeysBuffer</span>);\n\n<span class=\"cm-variable\">platformPromiseClient</span>.<span class=\"cm-property\">getIdentitiesByPublicKeyHashes</span>(<span class=\"cm-variable\">getIdentitiesByPublicKeyHashesRequest</span>)\n  .<span class=\"cm-property\">then</span>((<span class=\"cm-def\">response</span>) <span class=\"cm-operator\">=&gt;</span> {\n    <span class=\"cm-keyword\">const</span> <span class=\"cm-def\">identitiesResponse</span> <span class=\"cm-operator\">=</span> <span class=\"cm-variable-2\">response</span>.<span class=\"cm-property\">getIdentitiesList</span>();\n    <span class=\"cm-keyword\">const</span> <span class=\"cm-def\">identities</span> <span class=\"cm-operator\">=</span> <span class=\"cm-variable-2\">identitiesResponse</span>\n      .<span class=\"cm-property\">map</span>((<span class=\"cm-def\">identity</span>) <span class=\"cm-operator\">=&gt;</span> (<span class=\"cm-variable-2\">identity</span>.<span class=\"cm-property\">length</span> <span class=\"cm-operator\">&gt;</span> <span class=\"cm-number\">0</span> <span class=\"cm-operator\">?</span> <span class=\"cm-variable\">cbor</span>.<span class=\"cm-property\">decode</span>(<span class=\"cm-variable\">Buffer</span>.<span class=\"cm-property\">from</span>(<span class=\"cm-variable-2\">identity</span>)) : <span class=\"cm-atom\">null</span>));\n    <span class=\"cm-variable\">console</span>.<span class=\"cm-property\">log</span>(<span class=\"cm-variable\">dpp</span>.<span class=\"cm-property\">identity</span>.<span class=\"cm-property\">createFromObject</span>(<span class=\"cm-variable-2\">identities</span>[<span class=\"cm-number\">0</span>]).<span class=\"cm-property\">toJSON</span>());\n  })\n  .<span class=\"cm-property\">catch</span>((<span class=\"cm-def\">e</span>) <span class=\"cm-operator\">=&gt;</span> <span class=\"cm-variable\">console</span>.<span class=\"cm-property\">error</span>(<span class=\"cm-variable-2\">e</span>));</span></code></pre></span><span ng-if=\"tab == 2\">\n\t\t\t<button ng-click=\"copyCode(476)\" class=\"copy-code-button\"><span ng-show=\"!copied\" class=\"fa fa-clipboard\"></span><span ng-show=\"copied\" class=\"fa fa-check\"></span></button>\n\t\t\t<textarea ng-non-bindable=\"ng-non-bindable\" style=\"position: absolute; left: -10000px;\" id=\"text-code-476\"># `public_key_hashes` must be represented in base64\ngrpcurl -proto protos/platform/v0/platform.proto -plaintext \\\n  -d '{\n    &quot;public_key_hashes&quot;:&quot;IlG5mUmVZNukgeNuC/7qz+WqWC4=&quot;\n    }' \\\n  seed-1.evonet.networks.dash.org:3010 \\\n  org.dash.platform.dapi.v0.Platform/getIdentitiesByPublicKeyHashes</textarea>\n\t\t\t<pre id=\"code-476\"><code><span class='cm-s-neo'><span class=\"cm-comment\"># `public_key_hashes` must be represented in base64</span>\ngrpcurl <span class=\"cm-attribute\">-proto</span> protos&#47;platform&#47;v0&#47;platform.proto <span class=\"cm-attribute\">-plaintext</span> \\\n  <span class=\"cm-attribute\">-d</span> <span class=\"cm-string\">'{</span>\n<span class=\"cm-string\">    \"public_key_hashes\":\"IlG5mUmVZNukgeNuC&#47;7qz+WqWC4=\"</span>\n<span class=\"cm-string\">    }'</span> \\\n  seed-1.evonet.networks.dash.org:3010 \\\n  org.dash.platform.dapi.v0.Platform&#47;getIdentitiesByPublicKeyHashes</span></code></pre></span>\n\t</div>\n</div>\n<div class=\"magic-block-code\">\n\t<ul class=\"block-code-header\">\n\t\t<li><a href=\"\" ng-click=\"showCode(0)\" ng-class=\"{active: (0 == tab)}\">Response (JavaScript)</a></li>\n\t\t<li><a href=\"\" ng-click=\"showCode(1)\" ng-class=\"{active: (1 == tab)}\">Response (gRPCurl)</a></li>\n\t</ul>\n\t<div class=\"block-code-code\"><span ng-if=\"tab == 0\">\n\t\t\t<button ng-click=\"copyCode(70)\" class=\"copy-code-button\"><span ng-show=\"!copied\" class=\"fa fa-clipboard\"></span><span ng-show=\"copied\" class=\"fa fa-check\"></span></button>\n\t\t\t<textarea ng-non-bindable=\"ng-non-bindable\" style=\"position: absolute; left: -10000px;\" id=\"text-code-70\">{\n  protocolVersion: 0,\n  id: 'BhC9M3fQHyUCyuxH4WHdhn1VGgJ4JTLmer8qmTTHkYTe',\n  publicKeys: [\n    {\n      id: 0,\n      type: 0,\n      data: 'A/Wmv+LhxAjSBE19d3OJCUawUiYORF5HDDetZbvTDgQQ'\n    }\n  ],\n  balance: 10991631,\n  revision: 0\n}</textarea>\n\t\t\t<pre id=\"code-70\"><code><span class='cm-s-neo'>{\n  <span class=\"cm-property\">protocolVersion</span>: <span class=\"cm-number\">0</span>,\n  <span class=\"cm-property\">id</span>: <span class=\"cm-string\">'BhC9M3fQHyUCyuxH4WHdhn1VGgJ4JTLmer8qmTTHkYTe'</span>,\n  <span class=\"cm-property\">publicKeys</span>: [\n    {\n      <span class=\"cm-property\">id</span>: <span class=\"cm-number\">0</span>,\n      <span class=\"cm-property\">type</span>: <span class=\"cm-number\">0</span>,\n      <span class=\"cm-property\">data</span>: <span class=\"cm-string\">'A&#47;Wmv+LhxAjSBE19d3OJCUawUiYORF5HDDetZbvTDgQQ'</span>\n    }\n  ],\n  <span class=\"cm-property\">balance</span>: <span class=\"cm-number\">10991631</span>,\n  <span class=\"cm-property\">revision</span>: <span class=\"cm-number\">0</span>\n}</span></code></pre></span><span ng-if=\"tab == 1\">\n\t\t\t<button ng-click=\"copyCode(933)\" class=\"copy-code-button\"><span ng-show=\"!copied\" class=\"fa fa-clipboard\"></span><span ng-show=\"copied\" class=\"fa fa-check\"></span></button>\n\t\t\t<textarea ng-non-bindable=\"ng-non-bindable\" style=\"position: absolute; left: -10000px;\" id=\"text-code-933\">{\n  &quot;identities&quot;: [\n    &quot;pWJpZFggnuCzumg/s5LC1SplgbztDxV9AfZBr1wNklM4zK8xZ91nYmFsYW5jZRoAp7gPaHJldmlzaW9uAGpwdWJsaWNLZXlzgaNiaWQAZGRhdGFYIQP1pr/i4cQI0gRNfXdziQlGsFImDkReRww3rWW70w4EEGR0eXBlAG9wcm90b2NvbFZlcnNpb24A&quot;\n  ]\n}</textarea>\n\t\t\t<pre id=\"code-933\"><code><span class='cm-s-neo'>{\n  <span class=\"cm-property\">\"identities\"</span>: [\n    <span class=\"cm-string\">\"pWJpZFggnuCzumg&#47;s5LC1SplgbztDxV9AfZBr1wNklM4zK8xZ91nYmFsYW5jZRoAp7gPaHJldmlzaW9uAGpwdWJsaWNLZXlzgaNiaWQAZGRhdGFYIQP1pr&#47;i4cQI0gRNfXdziQlGsFImDkReRww3rWW70w4EEGR0eXBlAG9wcm90b2NvbFZlcnNpb24A\"</span>\n  ]\n}</span></code></pre></span>\n\t</div>\n</div>\n<div class=\"magic-block-textarea\"><h2 class=\"header-scroll\"><div class=\"anchor waypoint\" id=\"section-get-identity-ids-by-public-key-hashes\"></div>getIdentityIdsByPublicKeyHashes<a class=\"fa fa-anchor\" href=\"#section-get-identity-ids-by-public-key-hashes\"></a></h2>\n<p><strong>Returns</strong>: <a href=\"explanation-identity\">Identity</a> ID(s) associated with the provided public key hashes<br><strong>Parameters</strong>:</p>\n<div class=\"marked-table\"><table>\n<thead>\n<tr>\n<th>Name</th>\n<th>Type</th>\n<th>Required</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>public_key_hashes</code></td>\n<td>Bytes</td>\n<td>Yes</td>\n<td>Public key hash (double-sha256) of an identity&#39;s public key</td>\n</tr>\n</tbody>\n</table></div>\n\n</div>\n<div class=\"magic-block-callout type-info \">\n\t<h3><i title=\"Info\" class=\"fa fa-info-circle\"></i>Public key hash\n\t</h3>\n\t<div class=\"callout-body\"><p>Note: the hash must be done using all fields of the identity public key object - e.g.</p>\n<pre><code class=\"lang-json\"><span class='cm-s-neo'>{\n  <span class=\"cm-property\">id</span>: <span class=\"cm-number\">0</span>,\n  <span class=\"cm-property\">type</span>: <span class=\"cm-number\">0</span>,\n  <span class=\"cm-property\">data</span>: <span class=\"cm-string\">'A&#47;Wmv+LhxAjSBE19d3OJCUawUiYORF5HDDetZbvTDgQQ'</span>\n}</span>\n</code></pre>\n<p>When using the js-dpp library, the hash can be accessed via the <a href=\"https://github.com/dashevo/js-dpp/blob/master/lib/identity/IdentityPublicKey.js\">IdentityPublicKey object&#39;s</a> <code>hash</code> method (e.g. <code>identity.getPublicKeyById(0).hash()</code>).</p>\n\n\t</div>\n</div>\n<div class=\"magic-block-textarea\"><p><strong> Example Request and Response </strong></p>\n\n</div>\n<div class=\"magic-block-code\">\n\t<ul class=\"block-code-header\">\n\t\t<li><a href=\"\" ng-click=\"showCode(0)\" ng-class=\"{active: (0 == tab)}\">JavaScript (dapi-client)</a></li>\n\t\t<li><a href=\"\" ng-click=\"showCode(1)\" ng-class=\"{active: (1 == tab)}\">JavaScript (dapi-grpc)</a></li>\n\t\t<li><a href=\"\" ng-click=\"showCode(2)\" ng-class=\"{active: (2 == tab)}\">gRPCurl</a></li>\n\t</ul>\n\t<div class=\"block-code-code\"><span ng-if=\"tab == 0\">\n\t\t\t<button ng-click=\"copyCode(478)\" class=\"copy-code-button\"><span ng-show=\"!copied\" class=\"fa fa-clipboard\"></span><span ng-show=\"copied\" class=\"fa fa-check\"></span></button>\n\t\t\t<textarea ng-non-bindable=\"ng-non-bindable\" style=\"position: absolute; left: -10000px;\" id=\"text-code-478\">const DAPIClient = require('@dashevo/dapi-client');\nconst Identifier = require('@dashevo/dpp/lib/Identifier');\n\nconst client = new DAPIClient();\n\n// Get identity from hex public key hash\nconst publicKeyHash = '2251b999499564dba481e36e0bfeeacfe5aa582e';\nconst publicKeysBuffer = [Buffer.from(publicKeyHash, 'hex')];\n\nclient.platform.getIdentityIdsByPublicKeyHashes(publicKeysBuffer)\n  .then((response) =&gt; {\n    for (const r of response) {\n      console.log(`Identity ID: ${Identifier.from(r).toString()}`);\n    }\n  });</textarea>\n\t\t\t<pre id=\"code-478\"><code><span class='cm-s-neo'><span class=\"cm-keyword\">const</span> <span class=\"cm-def\">DAPIClient</span> <span class=\"cm-operator\">=</span> <span class=\"cm-variable\">require</span>(<span class=\"cm-string\">'@dashevo&#47;dapi-client'</span>);\n<span class=\"cm-keyword\">const</span> <span class=\"cm-def\">Identifier</span> <span class=\"cm-operator\">=</span> <span class=\"cm-variable\">require</span>(<span class=\"cm-string\">'@dashevo&#47;dpp&#47;lib&#47;Identifier'</span>);\n\n<span class=\"cm-keyword\">const</span> <span class=\"cm-def\">client</span> <span class=\"cm-operator\">=</span> <span class=\"cm-keyword\">new</span> <span class=\"cm-variable\">DAPIClient</span>();\n\n<span class=\"cm-comment\">&#47;&#47; Get identity from hex public key hash</span>\n<span class=\"cm-keyword\">const</span> <span class=\"cm-def\">publicKeyHash</span> <span class=\"cm-operator\">=</span> <span class=\"cm-string\">'2251b999499564dba481e36e0bfeeacfe5aa582e'</span>;\n<span class=\"cm-keyword\">const</span> <span class=\"cm-def\">publicKeysBuffer</span> <span class=\"cm-operator\">=</span> [<span class=\"cm-variable\">Buffer</span>.<span class=\"cm-property\">from</span>(<span class=\"cm-variable\">publicKeyHash</span>, <span class=\"cm-string\">'hex'</span>)];\n\n<span class=\"cm-variable\">client</span>.<span class=\"cm-property\">platform</span>.<span class=\"cm-property\">getIdentityIdsByPublicKeyHashes</span>(<span class=\"cm-variable\">publicKeysBuffer</span>)\n  .<span class=\"cm-property\">then</span>((<span class=\"cm-def\">response</span>) <span class=\"cm-operator\">=&gt;</span> {\n    <span class=\"cm-keyword\">for</span> (<span class=\"cm-keyword\">const</span> <span class=\"cm-def\">r</span> <span class=\"cm-keyword\">of</span> <span class=\"cm-variable-2\">response</span>) {\n      <span class=\"cm-variable\">console</span>.<span class=\"cm-property\">log</span>(<span class=\"cm-string-2\">`Identity ID: ${</span><span class=\"cm-variable\">Identifier</span>.<span class=\"cm-property\">from</span>(<span class=\"cm-variable-2\">r</span>).<span class=\"cm-property\">toString</span>()<span class=\"cm-string-2\">}`</span>);\n    }\n  });</span></code></pre></span><span ng-if=\"tab == 1\">\n\t\t\t<button ng-click=\"copyCode(850)\" class=\"copy-code-button\"><span ng-show=\"!copied\" class=\"fa fa-clipboard\"></span><span ng-show=\"copied\" class=\"fa fa-check\"></span></button>\n\t\t\t<textarea ng-non-bindable=\"ng-non-bindable\" style=\"position: absolute; left: -10000px;\" id=\"text-code-850\">const {\n  v0: {\n    PlatformPromiseClient,\n    GetIdentityIdsByPublicKeyHashesRequest,\n  },\n} = require('@dashevo/dapi-grpc');\nconst Identifier = require('@dashevo/dpp/lib/Identifier');\n\nconst platformPromiseClient = new PlatformPromiseClient(\n  'http://seed.evonet.networks.dash.org:3010',\n);\n\nconst publicKeyHash = '2251b999499564dba481e36e0bfeeacfe5aa582e';\nconst publicKeysBuffer = [Buffer.from(publicKeyHash, 'hex')];\n\nconst getIdentityIdsByPublicKeyHashesRequest = new GetIdentityIdsByPublicKeyHashesRequest();\ngetIdentityIdsByPublicKeyHashesRequest.setPublicKeyHashesList(publicKeysBuffer);\n\nplatformPromiseClient.getIdentityIdsByPublicKeyHashes(getIdentityIdsByPublicKeyHashesRequest)\n  .then((response) =&gt; {\n    for (const r of response.getIdentityIdsList()) {\n      const id = Buffer.from(r);\n      console.log(`Identity ID: ${Identifier.from(id).toString()}`);\n    }\n  })\n  .catch((e) =&gt; console.error(e));</textarea>\n\t\t\t<pre id=\"code-850\"><code><span class='cm-s-neo'><span class=\"cm-keyword\">const</span> {\n  <span class=\"cm-property\">v0</span>: {\n    <span class=\"cm-def\">PlatformPromiseClient</span>,\n    <span class=\"cm-def\">GetIdentityIdsByPublicKeyHashesRequest</span>,\n  },\n} <span class=\"cm-operator\">=</span> <span class=\"cm-variable\">require</span>(<span class=\"cm-string\">'@dashevo&#47;dapi-grpc'</span>);\n<span class=\"cm-keyword\">const</span> <span class=\"cm-def\">Identifier</span> <span class=\"cm-operator\">=</span> <span class=\"cm-variable\">require</span>(<span class=\"cm-string\">'@dashevo&#47;dpp&#47;lib&#47;Identifier'</span>);\n\n<span class=\"cm-keyword\">const</span> <span class=\"cm-def\">platformPromiseClient</span> <span class=\"cm-operator\">=</span> <span class=\"cm-keyword\">new</span> <span class=\"cm-variable\">PlatformPromiseClient</span>(\n  <span class=\"cm-string\">'http:&#47;&#47;seed.evonet.networks.dash.org:3010'</span>,\n);\n\n<span class=\"cm-keyword\">const</span> <span class=\"cm-def\">publicKeyHash</span> <span class=\"cm-operator\">=</span> <span class=\"cm-string\">'2251b999499564dba481e36e0bfeeacfe5aa582e'</span>;\n<span class=\"cm-keyword\">const</span> <span class=\"cm-def\">publicKeysBuffer</span> <span class=\"cm-operator\">=</span> [<span class=\"cm-variable\">Buffer</span>.<span class=\"cm-property\">from</span>(<span class=\"cm-variable\">publicKeyHash</span>, <span class=\"cm-string\">'hex'</span>)];\n\n<span class=\"cm-keyword\">const</span> <span class=\"cm-def\">getIdentityIdsByPublicKeyHashesRequest</span> <span class=\"cm-operator\">=</span> <span class=\"cm-keyword\">new</span> <span class=\"cm-variable\">GetIdentityIdsByPublicKeyHashesRequest</span>();\n<span class=\"cm-variable\">getIdentityIdsByPublicKeyHashesRequest</span>.<span class=\"cm-property\">setPublicKeyHashesList</span>(<span class=\"cm-variable\">publicKeysBuffer</span>);\n\n<span class=\"cm-variable\">platformPromiseClient</span>.<span class=\"cm-property\">getIdentityIdsByPublicKeyHashes</span>(<span class=\"cm-variable\">getIdentityIdsByPublicKeyHashesRequest</span>)\n  .<span class=\"cm-property\">then</span>((<span class=\"cm-def\">response</span>) <span class=\"cm-operator\">=&gt;</span> {\n    <span class=\"cm-keyword\">for</span> (<span class=\"cm-keyword\">const</span> <span class=\"cm-def\">r</span> <span class=\"cm-keyword\">of</span> <span class=\"cm-variable-2\">response</span>.<span class=\"cm-property\">getIdentityIdsList</span>()) {\n      <span class=\"cm-keyword\">const</span> <span class=\"cm-def\">id</span> <span class=\"cm-operator\">=</span> <span class=\"cm-variable\">Buffer</span>.<span class=\"cm-property\">from</span>(<span class=\"cm-variable-2\">r</span>);\n      <span class=\"cm-variable\">console</span>.<span class=\"cm-property\">log</span>(<span class=\"cm-string-2\">`Identity ID: ${</span><span class=\"cm-variable\">Identifier</span>.<span class=\"cm-property\">from</span>(<span class=\"cm-variable-2\">id</span>).<span class=\"cm-property\">toString</span>()<span class=\"cm-string-2\">}`</span>);\n    }\n  })\n  .<span class=\"cm-property\">catch</span>((<span class=\"cm-def\">e</span>) <span class=\"cm-operator\">=&gt;</span> <span class=\"cm-variable\">console</span>.<span class=\"cm-property\">error</span>(<span class=\"cm-variable-2\">e</span>));</span></code></pre></span><span ng-if=\"tab == 2\">\n\t\t\t<button ng-click=\"copyCode(552)\" class=\"copy-code-button\"><span ng-show=\"!copied\" class=\"fa fa-clipboard\"></span><span ng-show=\"copied\" class=\"fa fa-check\"></span></button>\n\t\t\t<textarea ng-non-bindable=\"ng-non-bindable\" style=\"position: absolute; left: -10000px;\" id=\"text-code-552\"># `public_key_hashes` must be represented in base64\ngrpcurl -proto protos/platform/v0/platform.proto -plaintext \\\n  -d '{\n    &quot;public_key_hashes&quot;:&quot;IlG5mUmVZNukgeNuC/7qz+WqWC4=&quot;\n    }' \\\n  seed-1.evonet.networks.dash.org:3010 \\\n  org.dash.platform.dapi.v0.Platform/getIdentityIdsByPublicKeyHashes</textarea>\n\t\t\t<pre id=\"code-552\"><code><span class='cm-s-neo'><span class=\"cm-comment\"># `public_key_hashes` must be represented in base64</span>\ngrpcurl <span class=\"cm-attribute\">-proto</span> protos&#47;platform&#47;v0&#47;platform.proto <span class=\"cm-attribute\">-plaintext</span> \\\n  <span class=\"cm-attribute\">-d</span> <span class=\"cm-string\">'{</span>\n<span class=\"cm-string\">    \"public_key_hashes\":\"IlG5mUmVZNukgeNuC&#47;7qz+WqWC4=\"</span>\n<span class=\"cm-string\">    }'</span> \\\n  seed-1.evonet.networks.dash.org:3010 \\\n  org.dash.platform.dapi.v0.Platform&#47;getIdentityIdsByPublicKeyHashes</span></code></pre></span>\n\t</div>\n</div>\n<div class=\"magic-block-code\">\n\t<ul class=\"block-code-header\">\n\t\t<li><a href=\"\" ng-click=\"showCode(0)\" ng-class=\"{active: (0 == tab)}\">Response (JavaScript)</a></li>\n\t\t<li><a href=\"\" ng-click=\"showCode(1)\" ng-class=\"{active: (1 == tab)}\">Response (gRPCurl)</a></li>\n\t</ul>\n\t<div class=\"block-code-code\"><span ng-if=\"tab == 0\">\n\t\t\t<button ng-click=\"copyCode(396)\" class=\"copy-code-button\"><span ng-show=\"!copied\" class=\"fa fa-clipboard\"></span><span ng-show=\"copied\" class=\"fa fa-check\"></span></button>\n\t\t\t<textarea ng-non-bindable=\"ng-non-bindable\" style=\"position: absolute; left: -10000px;\" id=\"text-code-396\">Identity ID: BhC9M3fQHyUCyuxH4WHdhn1VGgJ4JTLmer8qmTTHkYTe</textarea>\n\t\t\t<pre id=\"code-396\"><code>Identity ID: BhC9M3fQHyUCyuxH4WHdhn1VGgJ4JTLmer8qmTTHkYTe</code></pre></span><span ng-if=\"tab == 1\">\n\t\t\t<button ng-click=\"copyCode(452)\" class=\"copy-code-button\"><span ng-show=\"!copied\" class=\"fa fa-clipboard\"></span><span ng-show=\"copied\" class=\"fa fa-check\"></span></button>\n\t\t\t<textarea ng-non-bindable=\"ng-non-bindable\" style=\"position: absolute; left: -10000px;\" id=\"text-code-452\">{\n  &quot;identityIds&quot;: [\n    &quot;nuCzumg/s5LC1SplgbztDxV9AfZBr1wNklM4zK8xZ90=&quot;\n  ]\n}</textarea>\n\t\t\t<pre id=\"code-452\"><code><span class='cm-s-neo'>{\n  <span class=\"cm-property\">\"identityIds\"</span>: [\n    <span class=\"cm-string\">\"nuCzumg&#47;s5LC1SplgbztDxV9AfZBr1wNklM4zK8xZ90=\"</span>\n  ]\n}</span></code></pre></span>\n\t</div>\n</div>\n<div class=\"magic-block-textarea\"><h2 class=\"header-scroll\"><div class=\"anchor waypoint\" id=\"section-get-data-contract\"></div>getDataContract<a class=\"fa fa-anchor\" href=\"#section-get-data-contract\"></a></h2>\n<p><strong>Returns</strong>: <a href=\"explanation-platform-protocol-data-contract\">Data Contract</a> information for the requested data contract<br><strong>Parameters</strong>:</p>\n<div class=\"marked-table\"><table>\n<thead>\n<tr>\n<th>Name</th>\n<th>Type</th>\n<th>Required</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>id</code></td>\n<td>Bytes</td>\n<td>Yes</td>\n<td>A data contract <code>id</code></td>\n</tr>\n</tbody>\n</table></div>\n<p><strong> Example Request and Response </strong></p>\n\n</div>\n<div class=\"magic-block-code\">\n\t<ul class=\"block-code-header\">\n\t\t<li><a href=\"\" ng-click=\"showCode(0)\" ng-class=\"{active: (0 == tab)}\">JavaScript (dapi-client)</a></li>\n\t\t<li><a href=\"\" ng-click=\"showCode(1)\" ng-class=\"{active: (1 == tab)}\">JavaScript (dapi-grpc)</a></li>\n\t\t<li><a href=\"\" ng-click=\"showCode(2)\" ng-class=\"{active: (2 == tab)}\">Shell</a></li>\n\t</ul>\n\t<div class=\"block-code-code\"><span ng-if=\"tab == 0\">\n\t\t\t<button ng-click=\"copyCode(658)\" class=\"copy-code-button\"><span ng-show=\"!copied\" class=\"fa fa-clipboard\"></span><span ng-show=\"copied\" class=\"fa fa-check\"></span></button>\n\t\t\t<textarea ng-non-bindable=\"ng-non-bindable\" style=\"position: absolute; left: -10000px;\" id=\"text-code-658\">const DAPIClient = require('@dashevo/dapi-client');\nconst Identifier = require('@dashevo/dpp/lib/Identifier');\nconst cbor = require('cbor');\n\nconst client = new DAPIClient();\n\nconst contractId = Identifier.from('Q894cs83D8REQNo7mAetj1wPJK2W3svrwqaN61aP25W');\nclient.platform.getDataContract(contractId).then((response) =&gt; {\n  const contract = cbor.decode(response);\n  console.dir(contract, {depth:10});\n});</textarea>\n\t\t\t<pre id=\"code-658\"><code><span class='cm-s-neo'><span class=\"cm-keyword\">const</span> <span class=\"cm-def\">DAPIClient</span> <span class=\"cm-operator\">=</span> <span class=\"cm-variable\">require</span>(<span class=\"cm-string\">'@dashevo&#47;dapi-client'</span>);\n<span class=\"cm-keyword\">const</span> <span class=\"cm-def\">Identifier</span> <span class=\"cm-operator\">=</span> <span class=\"cm-variable\">require</span>(<span class=\"cm-string\">'@dashevo&#47;dpp&#47;lib&#47;Identifier'</span>);\n<span class=\"cm-keyword\">const</span> <span class=\"cm-def\">cbor</span> <span class=\"cm-operator\">=</span> <span class=\"cm-variable\">require</span>(<span class=\"cm-string\">'cbor'</span>);\n\n<span class=\"cm-keyword\">const</span> <span class=\"cm-def\">client</span> <span class=\"cm-operator\">=</span> <span class=\"cm-keyword\">new</span> <span class=\"cm-variable\">DAPIClient</span>();\n\n<span class=\"cm-keyword\">const</span> <span class=\"cm-def\">contractId</span> <span class=\"cm-operator\">=</span> <span class=\"cm-variable\">Identifier</span>.<span class=\"cm-property\">from</span>(<span class=\"cm-string\">'Q894cs83D8REQNo7mAetj1wPJK2W3svrwqaN61aP25W'</span>);\n<span class=\"cm-variable\">client</span>.<span class=\"cm-property\">platform</span>.<span class=\"cm-property\">getDataContract</span>(<span class=\"cm-variable\">contractId</span>).<span class=\"cm-property\">then</span>((<span class=\"cm-def\">response</span>) <span class=\"cm-operator\">=&gt;</span> {\n  <span class=\"cm-keyword\">const</span> <span class=\"cm-def\">contract</span> <span class=\"cm-operator\">=</span> <span class=\"cm-variable\">cbor</span>.<span class=\"cm-property\">decode</span>(<span class=\"cm-variable-2\">response</span>);\n  <span class=\"cm-variable\">console</span>.<span class=\"cm-property\">dir</span>(<span class=\"cm-variable-2\">contract</span>, {<span class=\"cm-property\">depth</span>:<span class=\"cm-number\">10</span>});\n});</span></code></pre></span><span ng-if=\"tab == 1\">\n\t\t\t<button ng-click=\"copyCode(668)\" class=\"copy-code-button\"><span ng-show=\"!copied\" class=\"fa fa-clipboard\"></span><span ng-show=\"copied\" class=\"fa fa-check\"></span></button>\n\t\t\t<textarea ng-non-bindable=\"ng-non-bindable\" style=\"position: absolute; left: -10000px;\" id=\"text-code-668\">const {\n  v0: {\n    PlatformPromiseClient,\n    GetDataContractRequest,\n  },\n} = require('@dashevo/dapi-grpc');\nconst Identifier = require('@dashevo/dpp/lib/Identifier');\nconst cbor = require('cbor');\n\nconst platformPromiseClient = new PlatformPromiseClient(\n  'http://seed.evonet.networks.dash.org:3010',\n);\n\nconst contractId = Identifier.from('Q894cs83D8REQNo7mAetj1wPJK2W3svrwqaN61aP25W');\nconst contractIdBuffer = Buffer.from(contractId);\nconst getDataContractRequest = new GetDataContractRequest();\ngetDataContractRequest.setId(contractIdBuffer);\n\nplatformPromiseClient.getDataContract(getDataContractRequest)\n  .then((response) =&gt; {\n    const contractResponse = response.getDataContract();\n    const contractBuffer = Buffer.from(contractResponse);\n    console.dir(cbor.decode(contractBuffer), { depth: 5 });\n  })\n  .catch((e) =&gt; console.error(e));</textarea>\n\t\t\t<pre id=\"code-668\"><code><span class='cm-s-neo'><span class=\"cm-keyword\">const</span> {\n  <span class=\"cm-property\">v0</span>: {\n    <span class=\"cm-def\">PlatformPromiseClient</span>,\n    <span class=\"cm-def\">GetDataContractRequest</span>,\n  },\n} <span class=\"cm-operator\">=</span> <span class=\"cm-variable\">require</span>(<span class=\"cm-string\">'@dashevo&#47;dapi-grpc'</span>);\n<span class=\"cm-keyword\">const</span> <span class=\"cm-def\">Identifier</span> <span class=\"cm-operator\">=</span> <span class=\"cm-variable\">require</span>(<span class=\"cm-string\">'@dashevo&#47;dpp&#47;lib&#47;Identifier'</span>);\n<span class=\"cm-keyword\">const</span> <span class=\"cm-def\">cbor</span> <span class=\"cm-operator\">=</span> <span class=\"cm-variable\">require</span>(<span class=\"cm-string\">'cbor'</span>);\n\n<span class=\"cm-keyword\">const</span> <span class=\"cm-def\">platformPromiseClient</span> <span class=\"cm-operator\">=</span> <span class=\"cm-keyword\">new</span> <span class=\"cm-variable\">PlatformPromiseClient</span>(\n  <span class=\"cm-string\">'http:&#47;&#47;seed.evonet.networks.dash.org:3010'</span>,\n);\n\n<span class=\"cm-keyword\">const</span> <span class=\"cm-def\">contractId</span> <span class=\"cm-operator\">=</span> <span class=\"cm-variable\">Identifier</span>.<span class=\"cm-property\">from</span>(<span class=\"cm-string\">'Q894cs83D8REQNo7mAetj1wPJK2W3svrwqaN61aP25W'</span>);\n<span class=\"cm-keyword\">const</span> <span class=\"cm-def\">contractIdBuffer</span> <span class=\"cm-operator\">=</span> <span class=\"cm-variable\">Buffer</span>.<span class=\"cm-property\">from</span>(<span class=\"cm-variable\">contractId</span>);\n<span class=\"cm-keyword\">const</span> <span class=\"cm-def\">getDataContractRequest</span> <span class=\"cm-operator\">=</span> <span class=\"cm-keyword\">new</span> <span class=\"cm-variable\">GetDataContractRequest</span>();\n<span class=\"cm-variable\">getDataContractRequest</span>.<span class=\"cm-property\">setId</span>(<span class=\"cm-variable\">contractIdBuffer</span>);\n\n<span class=\"cm-variable\">platformPromiseClient</span>.<span class=\"cm-property\">getDataContract</span>(<span class=\"cm-variable\">getDataContractRequest</span>)\n  .<span class=\"cm-property\">then</span>((<span class=\"cm-def\">response</span>) <span class=\"cm-operator\">=&gt;</span> {\n    <span class=\"cm-keyword\">const</span> <span class=\"cm-def\">contractResponse</span> <span class=\"cm-operator\">=</span> <span class=\"cm-variable-2\">response</span>.<span class=\"cm-property\">getDataContract</span>();\n    <span class=\"cm-keyword\">const</span> <span class=\"cm-def\">contractBuffer</span> <span class=\"cm-operator\">=</span> <span class=\"cm-variable\">Buffer</span>.<span class=\"cm-property\">from</span>(<span class=\"cm-variable-2\">contractResponse</span>);\n    <span class=\"cm-variable\">console</span>.<span class=\"cm-property\">dir</span>(<span class=\"cm-variable\">cbor</span>.<span class=\"cm-property\">decode</span>(<span class=\"cm-variable-2\">contractBuffer</span>), { <span class=\"cm-property\">depth</span>: <span class=\"cm-number\">5</span> });\n  })\n  .<span class=\"cm-property\">catch</span>((<span class=\"cm-def\">e</span>) <span class=\"cm-operator\">=&gt;</span> <span class=\"cm-variable\">console</span>.<span class=\"cm-property\">error</span>(<span class=\"cm-variable-2\">e</span>));</span></code></pre></span><span ng-if=\"tab == 2\">\n\t\t\t<button ng-click=\"copyCode(448)\" class=\"copy-code-button\"><span ng-show=\"!copied\" class=\"fa fa-clipboard\"></span><span ng-show=\"copied\" class=\"fa fa-check\"></span></button>\n\t\t\t<textarea ng-non-bindable=\"ng-non-bindable\" style=\"position: absolute; left: -10000px;\" id=\"text-code-448\"># `id` must be represented in base64\ngrpcurl -proto protos/platform/v0/platform.proto -plaintext \\\n  -d '{\n    &quot;id&quot;:&quot;BexuQvZ7zeNK51eNqJDUMOCGHzPC+wfHrnqjqsg/CWk=&quot;\n    }' \\\n  seed-1.evonet.networks.dash.org:3010 \\\n  org.dash.platform.dapi.v0.Platform/getDataContract</textarea>\n\t\t\t<pre id=\"code-448\"><code><span class='cm-s-neo'><span class=\"cm-comment\"># `id` must be represented in base64</span>\ngrpcurl <span class=\"cm-attribute\">-proto</span> protos&#47;platform&#47;v0&#47;platform.proto <span class=\"cm-attribute\">-plaintext</span> \\\n  <span class=\"cm-attribute\">-d</span> <span class=\"cm-string\">'{</span>\n<span class=\"cm-string\">    \"id\":\"BexuQvZ7zeNK51eNqJDUMOCGHzPC+wfHrnqjqsg&#47;CWk=\"</span>\n<span class=\"cm-string\">    }'</span> \\\n  seed-1.evonet.networks.dash.org:3010 \\\n  org.dash.platform.dapi.v0.Platform&#47;getDataContract</span></code></pre></span>\n\t</div>\n</div>\n<div class=\"magic-block-code\">\n\t<ul class=\"block-code-header\">\n\t\t<li><a href=\"\" ng-click=\"showCode(0)\" ng-class=\"{active: (0 == tab)}\">Response (JavaScript)</a></li>\n\t\t<li><a href=\"\" ng-click=\"showCode(1)\" ng-class=\"{active: (1 == tab)}\">Response (gRPCurl)</a></li>\n\t</ul>\n\t<div class=\"block-code-code\"><span ng-if=\"tab == 0\">\n\t\t\t<button ng-click=\"copyCode(39)\" class=\"copy-code-button\"><span ng-show=\"!copied\" class=\"fa fa-clipboard\"></span><span ng-show=\"copied\" class=\"fa fa-check\"></span></button>\n\t\t\t<textarea ng-non-bindable=\"ng-non-bindable\" style=\"position: absolute; left: -10000px;\" id=\"text-code-39\">{\n  '$id': Buffer(32) [Uint8Array] [\n      5, 236, 110,  66, 246, 123, 205, 227,\n     74, 231,  87, 141, 168, 144, 212,  48,\n    224, 134,  31,  51, 194, 251,   7, 199,\n    174, 122, 163, 170, 200,  63,   9, 105\n  ],\n  '$schema': 'https://schema.dash.org/dpp-0-4-0/meta/data-contract',\n  ownerId: Buffer(32) [Uint8Array] [\n    158, 224, 179, 186, 104,  63, 179, 146,\n    194, 213,  42, 101, 129, 188, 237,  15,\n     21, 125,   1, 246,  65, 175,  92,  13,\n    146,  83,  56, 204, 175,  49, 103, 221\n  ],\n  documents: {\n    note: {\n      properties: { message: { type: 'string' } },\n      additionalProperties: false\n    }\n  },\n  protocolVersion: 0\n}</textarea>\n\t\t\t<pre id=\"code-39\"><code><span class='cm-s-neo'>{\n  <span class=\"cm-property\">'$id'</span>: <span class=\"cm-variable\">Buffer</span>(<span class=\"cm-number\">32</span>) [<span class=\"cm-variable\">Uint8Array</span>] [\n      <span class=\"cm-number\">5</span>, <span class=\"cm-number\">236</span>, <span class=\"cm-number\">110</span>,  <span class=\"cm-number\">66</span>, <span class=\"cm-number\">246</span>, <span class=\"cm-number\">123</span>, <span class=\"cm-number\">205</span>, <span class=\"cm-number\">227</span>,\n     <span class=\"cm-number\">74</span>, <span class=\"cm-number\">231</span>,  <span class=\"cm-number\">87</span>, <span class=\"cm-number\">141</span>, <span class=\"cm-number\">168</span>, <span class=\"cm-number\">144</span>, <span class=\"cm-number\">212</span>,  <span class=\"cm-number\">48</span>,\n    <span class=\"cm-number\">224</span>, <span class=\"cm-number\">134</span>,  <span class=\"cm-number\">31</span>,  <span class=\"cm-number\">51</span>, <span class=\"cm-number\">194</span>, <span class=\"cm-number\">251</span>,   <span class=\"cm-number\">7</span>, <span class=\"cm-number\">199</span>,\n    <span class=\"cm-number\">174</span>, <span class=\"cm-number\">122</span>, <span class=\"cm-number\">163</span>, <span class=\"cm-number\">170</span>, <span class=\"cm-number\">200</span>,  <span class=\"cm-number\">63</span>,   <span class=\"cm-number\">9</span>, <span class=\"cm-number\">105</span>\n  ],\n  <span class=\"cm-property\">'$schema'</span>: <span class=\"cm-string\">'https:&#47;&#47;schema.dash.org&#47;dpp-0-4-0&#47;meta&#47;data-contract'</span>,\n  <span class=\"cm-property\">ownerId</span>: <span class=\"cm-variable\">Buffer</span>(<span class=\"cm-number\">32</span>) [<span class=\"cm-variable\">Uint8Array</span>] [\n    <span class=\"cm-number\">158</span>, <span class=\"cm-number\">224</span>, <span class=\"cm-number\">179</span>, <span class=\"cm-number\">186</span>, <span class=\"cm-number\">104</span>,  <span class=\"cm-number\">63</span>, <span class=\"cm-number\">179</span>, <span class=\"cm-number\">146</span>,\n    <span class=\"cm-number\">194</span>, <span class=\"cm-number\">213</span>,  <span class=\"cm-number\">42</span>, <span class=\"cm-number\">101</span>, <span class=\"cm-number\">129</span>, <span class=\"cm-number\">188</span>, <span class=\"cm-number\">237</span>,  <span class=\"cm-number\">15</span>,\n     <span class=\"cm-number\">21</span>, <span class=\"cm-number\">125</span>,   <span class=\"cm-number\">1</span>, <span class=\"cm-number\">246</span>,  <span class=\"cm-number\">65</span>, <span class=\"cm-number\">175</span>,  <span class=\"cm-number\">92</span>,  <span class=\"cm-number\">13</span>,\n    <span class=\"cm-number\">146</span>,  <span class=\"cm-number\">83</span>,  <span class=\"cm-number\">56</span>, <span class=\"cm-number\">204</span>, <span class=\"cm-number\">175</span>,  <span class=\"cm-number\">49</span>, <span class=\"cm-number\">103</span>, <span class=\"cm-number\">221</span>\n  ],\n  <span class=\"cm-property\">documents</span>: {\n    <span class=\"cm-property\">note</span>: {\n      <span class=\"cm-property\">properties</span>: { <span class=\"cm-property\">message</span>: { <span class=\"cm-property\">type</span>: <span class=\"cm-string\">'string'</span> } },\n      <span class=\"cm-property\">additionalProperties</span>: <span class=\"cm-atom\">false</span>\n    }\n  },\n  <span class=\"cm-property\">protocolVersion</span>: <span class=\"cm-number\">0</span>\n}</span></code></pre></span><span ng-if=\"tab == 1\">\n\t\t\t<button ng-click=\"copyCode(554)\" class=\"copy-code-button\"><span ng-show=\"!copied\" class=\"fa fa-clipboard\"></span><span ng-show=\"copied\" class=\"fa fa-check\"></span></button>\n\t\t\t<textarea ng-non-bindable=\"ng-non-bindable\" style=\"position: absolute; left: -10000px;\" id=\"text-code-554\">{\n  &quot;dataContract&quot;: &quot;pWMkaWRYIAXsbkL2e83jSudXjaiQ1DDghh8zwvsHx656o6rIPwlpZyRzY2hlbWF4NGh0dHBzOi8vc2NoZW1hLmRhc2gub3JnL2RwcC0wLTQtMC9tZXRhL2RhdGEtY29udHJhY3Rnb3duZXJJZFggnuCzumg/s5LC1SplgbztDxV9AfZBr1wNklM4zK8xZ91pZG9jdW1lbnRzoWRub3Rlompwcm9wZXJ0aWVzoWdtZXNzYWdloWR0eXBlZnN0cmluZ3RhZGRpdGlvbmFsUHJvcGVydGllc/RvcHJvdG9jb2xWZXJzaW9uAA==&quot;\n}\n</textarea>\n\t\t\t<pre id=\"code-554\"><code><span class='cm-s-neo'>{\n  <span class=\"cm-property\">\"dataContract\"</span>: <span class=\"cm-string\">\"pWMkaWRYIAXsbkL2e83jSudXjaiQ1DDghh8zwvsHx656o6rIPwlpZyRzY2hlbWF4NGh0dHBzOi8vc2NoZW1hLmRhc2gub3JnL2RwcC0wLTQtMC9tZXRhL2RhdGEtY29udHJhY3Rnb3duZXJJZFggnuCzumg&#47;s5LC1SplgbztDxV9AfZBr1wNklM4zK8xZ91pZG9jdW1lbnRzoWRub3Rlompwcm9wZXJ0aWVzoWdtZXNzYWdloWR0eXBlZnN0cmluZ3RhZGRpdGlvbmFsUHJvcGVydGllc&#47;RvcHJvdG9jb2xWZXJzaW9uAA==\"</span>\n}\n</span></code></pre></span>\n\t</div>\n</div>\n<div class=\"magic-block-textarea\"><h2 class=\"header-scroll\"><div class=\"anchor waypoint\" id=\"section-get-documents\"></div>getDocuments<a class=\"fa fa-anchor\" href=\"#section-get-documents\"></a></h2>\n<p><strong>Returns</strong>: <a href=\"explanation-platform-protocol-document\">Document</a> information for the requested document(s)<br><strong>Parameters</strong>:</p>\n<div class=\"marked-table\"><table>\n<thead>\n<tr>\n<th>Name</th>\n<th>Type</th>\n<th>Required</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>data_contract_id</code></td>\n<td>Bytes</td>\n<td>Yes</td>\n<td>A data contract <code>id</code></td>\n</tr>\n<tr>\n<td><code>document_type</code></td>\n<td>String</td>\n<td>Yes</td>\n<td>A document type defined by the data contract (e.g. <code>preorder</code> or <code>domain</code> for the DPNS contract)</td>\n</tr>\n<tr>\n<td><code>where</code> *</td>\n<td>Bytes</td>\n<td>No</td>\n<td>Where clause to filter the results (<strong>must be CBOR encoded</strong>)</td>\n</tr>\n<tr>\n<td><code>order_by</code> *</td>\n<td>Bytes</td>\n<td>No</td>\n<td>Sort records by the field(s) provided (<strong>must be CBOR encoded</strong>)</td>\n</tr>\n<tr>\n<td><code>limit</code></td>\n<td>Integer</td>\n<td>No</td>\n<td>Maximum number of results to return</td>\n</tr>\n<tr>\n<td>----------</td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td><em>One</em> of the following:</td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td><code>start_at</code></td>\n<td>Integer</td>\n<td>No</td>\n<td>Return records beginning with the index provided</td>\n</tr>\n<tr>\n<td><code>start_after</code></td>\n<td>Integer</td>\n<td>No</td>\n<td>Return records beginning after the index provided</td>\n</tr>\n</tbody>\n</table></div>\n\n</div>\n<div class=\"magic-block-callout type-warning \">\n\t<h3><i title=\"Warning\" class=\"fa fa-exclamation-circle\"></i>* Parameter constraints\n\t</h3>\n\t<div class=\"callout-body\"><p>The <code>where</code>, <code>order_by</code>, <code>limit</code>, <code>start_at</code>, and <code>start_after</code> parameters must comply with the limits defined on the <a href=\"reference-query-syntax\">Query Syntax</a> page.</p>\n<p>Additionally, note that <code>where</code> and <code>order_by</code> must be <a href=\"https://tools.ietf.org/html/rfc7049\">CBOR</a> encoded.</p>\n\n\t</div>\n</div>\n<div class=\"magic-block-textarea\"><p><strong> Example Request and Response </strong></p>\n\n</div>\n<div class=\"magic-block-code\">\n\t<ul class=\"block-code-header\">\n\t\t<li><a href=\"\" ng-click=\"showCode(0)\" ng-class=\"{active: (0 == tab)}\">JavaScript (dapi-client)</a></li>\n\t\t<li><a href=\"\" ng-click=\"showCode(1)\" ng-class=\"{active: (1 == tab)}\">JavaScript (dapi-grpc)</a></li>\n\t\t<li><a href=\"\" ng-click=\"showCode(2)\" ng-class=\"{active: (2 == tab)}\">Request (gRPCurl)</a></li>\n\t</ul>\n\t<div class=\"block-code-code\"><span ng-if=\"tab == 0\">\n\t\t\t<button ng-click=\"copyCode(594)\" class=\"copy-code-button\"><span ng-show=\"!copied\" class=\"fa fa-clipboard\"></span><span ng-show=\"copied\" class=\"fa fa-check\"></span></button>\n\t\t\t<textarea ng-non-bindable=\"ng-non-bindable\" style=\"position: absolute; left: -10000px;\" id=\"text-code-594\">const DAPIClient = require('@dashevo/dapi-client');\nconst Identifier = require('@dashevo/dpp/lib/Identifier');\nconst cbor = require('cbor');\n\nconst client = new DAPIClient();\n\nconst contractId = Identifier.from('Q894cs83D8REQNo7mAetj1wPJK2W3svrwqaN61aP25W');\nclient.platform.getDocuments(contractId, 'note', { limit: 1 }).then((response) =&gt; {\n  for (const rawData of response) {\n    console.log(cbor.decode(rawData));\n  }\n});</textarea>\n\t\t\t<pre id=\"code-594\"><code><span class='cm-s-neo'><span class=\"cm-keyword\">const</span> <span class=\"cm-def\">DAPIClient</span> <span class=\"cm-operator\">=</span> <span class=\"cm-variable\">require</span>(<span class=\"cm-string\">'@dashevo&#47;dapi-client'</span>);\n<span class=\"cm-keyword\">const</span> <span class=\"cm-def\">Identifier</span> <span class=\"cm-operator\">=</span> <span class=\"cm-variable\">require</span>(<span class=\"cm-string\">'@dashevo&#47;dpp&#47;lib&#47;Identifier'</span>);\n<span class=\"cm-keyword\">const</span> <span class=\"cm-def\">cbor</span> <span class=\"cm-operator\">=</span> <span class=\"cm-variable\">require</span>(<span class=\"cm-string\">'cbor'</span>);\n\n<span class=\"cm-keyword\">const</span> <span class=\"cm-def\">client</span> <span class=\"cm-operator\">=</span> <span class=\"cm-keyword\">new</span> <span class=\"cm-variable\">DAPIClient</span>();\n\n<span class=\"cm-keyword\">const</span> <span class=\"cm-def\">contractId</span> <span class=\"cm-operator\">=</span> <span class=\"cm-variable\">Identifier</span>.<span class=\"cm-property\">from</span>(<span class=\"cm-string\">'Q894cs83D8REQNo7mAetj1wPJK2W3svrwqaN61aP25W'</span>);\n<span class=\"cm-variable\">client</span>.<span class=\"cm-property\">platform</span>.<span class=\"cm-property\">getDocuments</span>(<span class=\"cm-variable\">contractId</span>, <span class=\"cm-string\">'note'</span>, { <span class=\"cm-property\">limit</span>: <span class=\"cm-number\">1</span> }).<span class=\"cm-property\">then</span>((<span class=\"cm-def\">response</span>) <span class=\"cm-operator\">=&gt;</span> {\n  <span class=\"cm-keyword\">for</span> (<span class=\"cm-keyword\">const</span> <span class=\"cm-def\">rawData</span> <span class=\"cm-keyword\">of</span> <span class=\"cm-variable-2\">response</span>) {\n    <span class=\"cm-variable\">console</span>.<span class=\"cm-property\">log</span>(<span class=\"cm-variable\">cbor</span>.<span class=\"cm-property\">decode</span>(<span class=\"cm-variable-2\">rawData</span>));\n  }\n});</span></code></pre></span><span ng-if=\"tab == 1\">\n\t\t\t<button ng-click=\"copyCode(474)\" class=\"copy-code-button\"><span ng-show=\"!copied\" class=\"fa fa-clipboard\"></span><span ng-show=\"copied\" class=\"fa fa-check\"></span></button>\n\t\t\t<textarea ng-non-bindable=\"ng-non-bindable\" style=\"position: absolute; left: -10000px;\" id=\"text-code-474\">const {\n  v0: {\n    PlatformPromiseClient,\n    GetDocumentsRequest,\n  },\n} = require('@dashevo/dapi-grpc');\nconst cbor = require('cbor');\nconst Identifier = require('@dashevo/dpp/lib/Identifier');\n\nconst platformPromiseClient = new PlatformPromiseClient(\n  'http://seed-1.evonet.networks.dash.org:3010',\n);\n\nconst contractId = Identifier.from('Q894cs83D8REQNo7mAetj1wPJK2W3svrwqaN61aP25W');\nconst contractIdBuffer = Buffer.from(contractId);\nconst getDocumentsRequest = new GetDocumentsRequest();\nconst type = 'note';\nconst limit = 1;\n\ngetDocumentsRequest.setDataContractId(contractIdBuffer);\ngetDocumentsRequest.setDocumentType(type);\n// getDocumentsRequest.setWhere(whereSerialized);\n// getDocumentsRequest.setOrderBy(orderBySerialized);\ngetDocumentsRequest.setLimit(limit);\n// getDocumentsRequest.setStartAfter(startAfter);\n// getDocumentsRequest.setStartAt(startAt);\n\nplatformPromiseClient.getDocuments(getDocumentsRequest)\n  .then((response) =&gt; {\n    for (const document of response.getDocumentsList()) {\n      console.log(cbor.decode(Buffer.from(document)));\n    }\n  })\n  .catch((e) =&gt; console.error(e));</textarea>\n\t\t\t<pre id=\"code-474\"><code><span class='cm-s-neo'><span class=\"cm-keyword\">const</span> {\n  <span class=\"cm-property\">v0</span>: {\n    <span class=\"cm-def\">PlatformPromiseClient</span>,\n    <span class=\"cm-def\">GetDocumentsRequest</span>,\n  },\n} <span class=\"cm-operator\">=</span> <span class=\"cm-variable\">require</span>(<span class=\"cm-string\">'@dashevo&#47;dapi-grpc'</span>);\n<span class=\"cm-keyword\">const</span> <span class=\"cm-def\">cbor</span> <span class=\"cm-operator\">=</span> <span class=\"cm-variable\">require</span>(<span class=\"cm-string\">'cbor'</span>);\n<span class=\"cm-keyword\">const</span> <span class=\"cm-def\">Identifier</span> <span class=\"cm-operator\">=</span> <span class=\"cm-variable\">require</span>(<span class=\"cm-string\">'@dashevo&#47;dpp&#47;lib&#47;Identifier'</span>);\n\n<span class=\"cm-keyword\">const</span> <span class=\"cm-def\">platformPromiseClient</span> <span class=\"cm-operator\">=</span> <span class=\"cm-keyword\">new</span> <span class=\"cm-variable\">PlatformPromiseClient</span>(\n  <span class=\"cm-string\">'http:&#47;&#47;seed-1.evonet.networks.dash.org:3010'</span>,\n);\n\n<span class=\"cm-keyword\">const</span> <span class=\"cm-def\">contractId</span> <span class=\"cm-operator\">=</span> <span class=\"cm-variable\">Identifier</span>.<span class=\"cm-property\">from</span>(<span class=\"cm-string\">'Q894cs83D8REQNo7mAetj1wPJK2W3svrwqaN61aP25W'</span>);\n<span class=\"cm-keyword\">const</span> <span class=\"cm-def\">contractIdBuffer</span> <span class=\"cm-operator\">=</span> <span class=\"cm-variable\">Buffer</span>.<span class=\"cm-property\">from</span>(<span class=\"cm-variable\">contractId</span>);\n<span class=\"cm-keyword\">const</span> <span class=\"cm-def\">getDocumentsRequest</span> <span class=\"cm-operator\">=</span> <span class=\"cm-keyword\">new</span> <span class=\"cm-variable\">GetDocumentsRequest</span>();\n<span class=\"cm-keyword\">const</span> <span class=\"cm-def\">type</span> <span class=\"cm-operator\">=</span> <span class=\"cm-string\">'note'</span>;\n<span class=\"cm-keyword\">const</span> <span class=\"cm-def\">limit</span> <span class=\"cm-operator\">=</span> <span class=\"cm-number\">1</span>;\n\n<span class=\"cm-variable\">getDocumentsRequest</span>.<span class=\"cm-property\">setDataContractId</span>(<span class=\"cm-variable\">contractIdBuffer</span>);\n<span class=\"cm-variable\">getDocumentsRequest</span>.<span class=\"cm-property\">setDocumentType</span>(<span class=\"cm-variable\">type</span>);\n<span class=\"cm-comment\">&#47;&#47; getDocumentsRequest.setWhere(whereSerialized);</span>\n<span class=\"cm-comment\">&#47;&#47; getDocumentsRequest.setOrderBy(orderBySerialized);</span>\n<span class=\"cm-variable\">getDocumentsRequest</span>.<span class=\"cm-property\">setLimit</span>(<span class=\"cm-variable\">limit</span>);\n<span class=\"cm-comment\">&#47;&#47; getDocumentsRequest.setStartAfter(startAfter);</span>\n<span class=\"cm-comment\">&#47;&#47; getDocumentsRequest.setStartAt(startAt);</span>\n\n<span class=\"cm-variable\">platformPromiseClient</span>.<span class=\"cm-property\">getDocuments</span>(<span class=\"cm-variable\">getDocumentsRequest</span>)\n  .<span class=\"cm-property\">then</span>((<span class=\"cm-def\">response</span>) <span class=\"cm-operator\">=&gt;</span> {\n    <span class=\"cm-keyword\">for</span> (<span class=\"cm-keyword\">const</span> <span class=\"cm-def\">document</span> <span class=\"cm-keyword\">of</span> <span class=\"cm-variable-2\">response</span>.<span class=\"cm-property\">getDocumentsList</span>()) {\n      <span class=\"cm-variable\">console</span>.<span class=\"cm-property\">log</span>(<span class=\"cm-variable\">cbor</span>.<span class=\"cm-property\">decode</span>(<span class=\"cm-variable\">Buffer</span>.<span class=\"cm-property\">from</span>(<span class=\"cm-variable-2\">document</span>)));\n    }\n  })\n  .<span class=\"cm-property\">catch</span>((<span class=\"cm-def\">e</span>) <span class=\"cm-operator\">=&gt;</span> <span class=\"cm-variable\">console</span>.<span class=\"cm-property\">error</span>(<span class=\"cm-variable-2\">e</span>));</span></code></pre></span><span ng-if=\"tab == 2\">\n\t\t\t<button ng-click=\"copyCode(630)\" class=\"copy-code-button\"><span ng-show=\"!copied\" class=\"fa fa-clipboard\"></span><span ng-show=\"copied\" class=\"fa fa-check\"></span></button>\n\t\t\t<textarea ng-non-bindable=\"ng-non-bindable\" style=\"position: absolute; left: -10000px;\" id=\"text-code-630\"># Request one DPNS document\n# `id` must be represented in base64\ngrpcurl -proto protos/platform/v0/platform.proto -plaintext \\\n  -d '{\n    &quot;data_contract_id&quot;:&quot;BexuQvZ7zeNK51eNqJDUMOCGHzPC+wfHrnqjqsg/CWk=&quot;,\n    &quot;document_type&quot;:&quot;note&quot;,\n    &quot;limit&quot;:1\n    }' \\\n  seed-1.evonet.networks.dash.org:3010 \\\n  org.dash.platform.dapi.v0.Platform/getDocuments</textarea>\n\t\t\t<pre id=\"code-630\"><code><span class='cm-s-neo'><span class=\"cm-comment\"># Request one DPNS document</span>\n<span class=\"cm-comment\"># `id` must be represented in base64</span>\ngrpcurl <span class=\"cm-attribute\">-proto</span> protos&#47;platform&#47;v0&#47;platform.proto <span class=\"cm-attribute\">-plaintext</span> \\\n  <span class=\"cm-attribute\">-d</span> <span class=\"cm-string\">'{</span>\n<span class=\"cm-string\">    \"data_contract_id\":\"BexuQvZ7zeNK51eNqJDUMOCGHzPC+wfHrnqjqsg&#47;CWk=\",</span>\n<span class=\"cm-string\">    \"document_type\":\"note\",</span>\n<span class=\"cm-string\">    \"limit\":1</span>\n<span class=\"cm-string\">    }'</span> \\\n  seed-1.evonet.networks.dash.org:3010 \\\n  org.dash.platform.dapi.v0.Platform&#47;getDocuments</span></code></pre></span>\n\t</div>\n</div>\n<div class=\"magic-block-code\">\n\t<ul class=\"block-code-header\">\n\t\t<li><a href=\"\" ng-click=\"showCode(0)\" ng-class=\"{active: (0 == tab)}\">Response (JavaScript)</a></li>\n\t\t<li><a href=\"\" ng-click=\"showCode(1)\" ng-class=\"{active: (1 == tab)}\">Response (gRPCurl)</a></li>\n\t</ul>\n\t<div class=\"block-code-code\"><span ng-if=\"tab == 0\">\n\t\t\t<button ng-click=\"copyCode(845)\" class=\"copy-code-button\"><span ng-show=\"!copied\" class=\"fa fa-clipboard\"></span><span ng-show=\"copied\" class=\"fa fa-check\"></span></button>\n\t\t\t<textarea ng-non-bindable=\"ng-non-bindable\" style=\"position: absolute; left: -10000px;\" id=\"text-code-845\">{\n  '$id': &lt;Buffer 31 39 11 9a bc 87 b9 d7 a8 f0 76 d0 bb 85 9f 0b 7c cc 99 ed 21 65 1c 4c 79 14 9d c1 35 07 39 d6&gt;,\n  '$type': 'note',\n  message: 'Tutorial Test @ Thu, 29 Oct 2020 20:39:40 GMT',\n  '$ownerId': &lt;Buffer 9e e0 b3 ba 68 3f b3 92 c2 d5 2a 65 81 bc ed 0f 15 7d 01 f6 41 af 5c 0d 92 53 38 cc af 31 67 dd&gt;,\n  '$revision': 1,\n  '$dataContractId': &lt;Buffer 05 ec 6e 42 f6 7b cd e3 4a e7 57 8d a8 90 d4 30 e0 86 1f 33 c2 fb 07 c7 ae 7a a3 aa c8 3f 09 69&gt;,\n  '$protocolVersion': 0\n}</textarea>\n\t\t\t<pre id=\"code-845\"><code><span class='cm-s-neo'>{\n  <span class=\"cm-property\">'$id'</span>: <span class=\"cm-operator\">&lt;</span><span class=\"cm-variable\">Buffer</span> <span class=\"cm-number\">31</span> <span class=\"cm-number\">39</span> <span class=\"cm-number\">11</span> <span class=\"cm-number\">9</span><span class=\"cm-variable\">a</span> <span class=\"cm-variable\">bc</span> <span class=\"cm-number\">87</span> <span class=\"cm-variable\">b9</span> <span class=\"cm-variable\">d7</span> <span class=\"cm-variable\">a8</span> <span class=\"cm-variable\">f0</span> <span class=\"cm-number\">76</span> <span class=\"cm-variable\">d0</span> <span class=\"cm-variable\">bb</span> <span class=\"cm-number\">85</span> <span class=\"cm-number\">9</span><span class=\"cm-variable\">f</span> <span class=\"cm-number\">0</span><span class=\"cm-variable\">b</span> <span class=\"cm-number\">7</span><span class=\"cm-variable\">c</span> <span class=\"cm-variable\">cc</span> <span class=\"cm-number\">99</span> <span class=\"cm-variable\">ed</span> <span class=\"cm-number\">21</span> <span class=\"cm-number\">65</span> <span class=\"cm-number\">1</span><span class=\"cm-variable\">c</span> <span class=\"cm-number\">4</span><span class=\"cm-variable\">c</span> <span class=\"cm-number\">79</span> <span class=\"cm-number\">14</span> <span class=\"cm-number\">9</span><span class=\"cm-variable\">d</span> <span class=\"cm-variable\">c1</span> <span class=\"cm-number\">35</span> <span class=\"cm-number\">07</span> <span class=\"cm-number\">39</span> <span class=\"cm-variable\">d6</span><span class=\"cm-operator\">&gt;</span>,\n  <span class=\"cm-string\">'$type'</span>: <span class=\"cm-string\">'note'</span>,\n  <span class=\"cm-variable\">message</span>: <span class=\"cm-string\">'Tutorial Test @ Thu, 29 Oct 2020 20:39:40 GMT'</span>,\n  <span class=\"cm-string\">'$ownerId'</span>: <span class=\"cm-operator\">&lt;</span><span class=\"cm-variable\">Buffer</span> <span class=\"cm-number\">9</span><span class=\"cm-variable\">e</span> <span class=\"cm-variable\">e0</span> <span class=\"cm-variable\">b3</span> <span class=\"cm-variable\">ba</span> <span class=\"cm-number\">68</span> <span class=\"cm-number\">3</span><span class=\"cm-variable\">f</span> <span class=\"cm-variable\">b3</span> <span class=\"cm-number\">92</span> <span class=\"cm-variable\">c2</span> <span class=\"cm-variable\">d5</span> <span class=\"cm-number\">2</span><span class=\"cm-variable\">a</span> <span class=\"cm-number\">65</span> <span class=\"cm-number\">81</span> <span class=\"cm-variable\">bc</span> <span class=\"cm-variable\">ed</span> <span class=\"cm-number\">0</span><span class=\"cm-variable\">f</span> <span class=\"cm-number\">15</span> <span class=\"cm-number\">7</span><span class=\"cm-variable\">d</span> <span class=\"cm-number\">01</span> <span class=\"cm-variable\">f6</span> <span class=\"cm-number\">41</span> <span class=\"cm-variable\">af</span> <span class=\"cm-number\">5</span><span class=\"cm-variable\">c</span> <span class=\"cm-number\">0</span><span class=\"cm-variable\">d</span> <span class=\"cm-number\">92</span> <span class=\"cm-number\">53</span> <span class=\"cm-number\">38</span> <span class=\"cm-variable\">cc</span> <span class=\"cm-variable\">af</span> <span class=\"cm-number\">31</span> <span class=\"cm-number\">67</span> <span class=\"cm-variable\">dd</span><span class=\"cm-operator\">&gt;</span>,\n  <span class=\"cm-string\">'$revision'</span>: <span class=\"cm-number\">1</span>,\n  <span class=\"cm-string\">'$dataContractId'</span>: <span class=\"cm-operator\">&lt;</span><span class=\"cm-variable\">Buffer</span> <span class=\"cm-number\">05</span> <span class=\"cm-variable\">ec</span> <span class=\"cm-number\">6</span><span class=\"cm-variable\">e</span> <span class=\"cm-number\">42</span> <span class=\"cm-variable\">f6</span> <span class=\"cm-number\">7</span><span class=\"cm-variable\">b</span> <span class=\"cm-variable\">cd</span> <span class=\"cm-variable\">e3</span> <span class=\"cm-number\">4</span><span class=\"cm-variable\">a</span> <span class=\"cm-variable\">e7</span> <span class=\"cm-number\">57</span> <span class=\"cm-number\">8</span><span class=\"cm-variable\">d</span> <span class=\"cm-variable\">a8</span> <span class=\"cm-number\">90</span> <span class=\"cm-variable\">d4</span> <span class=\"cm-number\">30</span> <span class=\"cm-variable\">e0</span> <span class=\"cm-number\">86</span> <span class=\"cm-number\">1</span><span class=\"cm-variable\">f</span> <span class=\"cm-number\">33</span> <span class=\"cm-variable\">c2</span> <span class=\"cm-variable\">fb</span> <span class=\"cm-number\">07</span> <span class=\"cm-variable\">c7</span> <span class=\"cm-variable\">ae</span> <span class=\"cm-number\">7</span><span class=\"cm-variable\">a</span> <span class=\"cm-variable\">a3</span> <span class=\"cm-variable\">aa</span> <span class=\"cm-variable\">c8</span> <span class=\"cm-number\">3</span><span class=\"cm-variable\">f</span> <span class=\"cm-number\">09</span> <span class=\"cm-number\">69</span><span class=\"cm-operator\">&gt;</span>,\n  <span class=\"cm-string\">'$protocolVersion'</span>: <span class=\"cm-number\">0</span>\n}</span></code></pre></span><span ng-if=\"tab == 1\">\n\t\t\t<button ng-click=\"copyCode(173)\" class=\"copy-code-button\"><span ng-show=\"!copied\" class=\"fa fa-clipboard\"></span><span ng-show=\"copied\" class=\"fa fa-check\"></span></button>\n\t\t\t<textarea ng-non-bindable=\"ng-non-bindable\" style=\"position: absolute; left: -10000px;\" id=\"text-code-173\">{\n  &quot;documents&quot;: [\n    &quot;p2MkaWRYIDE5EZq8h7nXqPB20LuFnwt8zJntIWUcTHkUncE1BznWZSR0eXBlZG5vdGVnbWVzc2FnZXgtVHV0b3JpYWwgVGVzdCBAIFRodSwgMjkgT2N0IDIwMjAgMjA6Mzk6NDAgR01UaCRvd25lcklkWCCe4LO6aD+zksLVKmWBvO0PFX0B9kGvXA2SUzjMrzFn3WkkcmV2aXNpb24BbyRkYXRhQ29udHJhY3RJZFggBexuQvZ7zeNK51eNqJDUMOCGHzPC+wfHrnqjqsg/CWlwJHByb3RvY29sVmVyc2lvbgA=&quot;\n  ]\n}</textarea>\n\t\t\t<pre id=\"code-173\"><code><span class='cm-s-neo'>{\n  <span class=\"cm-property\">\"documents\"</span>: [\n    <span class=\"cm-string\">\"p2MkaWRYIDE5EZq8h7nXqPB20LuFnwt8zJntIWUcTHkUncE1BznWZSR0eXBlZG5vdGVnbWVzc2FnZXgtVHV0b3JpYWwgVGVzdCBAIFRodSwgMjkgT2N0IDIwMjAgMjA6Mzk6NDAgR01UaCRvd25lcklkWCCe4LO6aD+zksLVKmWBvO0PFX0B9kGvXA2SUzjMrzFn3WkkcmV2aXNpb24BbyRkYXRhQ29udHJhY3RJZFggBexuQvZ7zeNK51eNqJDUMOCGHzPC+wfHrnqjqsg&#47;CWlwJHByb3RvY29sVmVyc2lvbgA=\"</span>\n  ]\n}</span></code></pre></span>\n\t</div>\n</div>\n<div class=\"magic-block-textarea\"><h1 class=\"header-scroll\"><div class=\"anchor waypoint\" id=\"section-deprecated-endpoints\"></div>Deprecated Endpoints<a class=\"fa fa-anchor\" href=\"#section-deprecated-endpoints\"></a></h1>\n<h2 class=\"header-scroll\"><div class=\"anchor waypoint\" id=\"section-apply-state-transition\"></div>applyStateTransition<a class=\"fa fa-anchor\" href=\"#section-apply-state-transition\"></a></h2>\n\n</div>\n<div class=\"magic-block-callout type-danger \">\n\t<h3><i title=\"Danger\" class=\"fa fa-exclamation-triangle\"></i>Deprecated RPC\n\t</h3>\n\t<div class=\"callout-body\"><p>Renamed to <a href=\"#broadcaststatetransition\"><code>broadcastStateTransition</code></a> in Dash Platform v0.15.0</p>\n\n\t</div>\n</div>\n<div class=\"magic-block-textarea\"><h2 class=\"header-scroll\"><div class=\"anchor waypoint\" id=\"section-get-identity-by-first-public-key\"></div>getIdentityByFirstPublicKey<a class=\"fa fa-anchor\" href=\"#section-get-identity-by-first-public-key\"></a></h2>\n\n</div>\n<div class=\"magic-block-callout type-danger \">\n\t<h3><i title=\"Danger\" class=\"fa fa-exclamation-triangle\"></i>Removed in Dash Platform v0.16\n\t</h3>\n\t<div class=\"callout-body\"><p>Similar functionality available with <a href=\"#getidentitiesbypublickeyhashes\">getIdentitiesByPublicKeyHashes</a></p>\n\n\t</div>\n</div>\n<div class=\"magic-block-textarea\"><h2 class=\"header-scroll\"><div class=\"anchor waypoint\" id=\"section-get-identity-id-by-first-public-key\"></div>getIdentityIdByFirstPublicKey<a class=\"fa fa-anchor\" href=\"#section-get-identity-id-by-first-public-key\"></a></h2>\n\n</div>\n<div class=\"magic-block-callout type-danger \">\n\t<h3><i title=\"Danger\" class=\"fa fa-exclamation-triangle\"></i>Removed in Dash Platform v0.16\n\t</h3>\n\t<div class=\"callout-body\"><p>Similar functionality available with <a href=\"#getidentityidsbypublickeyhashes\">getIdentityIdsByPublicKeyHashes</a></p>\n\n\t</div>\n</div>\n<div class=\"magic-block-textarea\"><h1 class=\"header-scroll\"><div class=\"anchor waypoint\" id=\"section-code-reference\"></div>Code Reference<a class=\"fa fa-anchor\" href=\"#section-code-reference\"></a></h1>\n<p>Implementation details related to the information on this page can be found in:</p>\n<ul>\n<li >The <a href=\"https://github.com/dashevo/dapi\">DAPI repository</a> <code>lib/grpcServer/handlers/platform</code> folder</li><li >The <a href=\"https://github.com/dashevo/dapi-grpc/\">dapi-grpc repository</a> <code>protos</code> folder</li></ul>\n\n</div>", 
 "user": "5b8400d7185d5e00036dcc3b", 
 "isReference": false, 
 "slug": "reference-dapi-endpoints-platform-endpoints", 
 "link_url": "", 
 "project": "5bda01cad172e200499a20a9", 
 "__v": 1, 
 "_id": "5f8f3fa8b257f9003428ff85", 
 "order": 2, 
 "updates": [
  "5e676fee633517029af984b0"
 ]
}