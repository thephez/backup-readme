{
 "metadata": {
  "image": [],
  "title": "",
  "description": "",
  "keywords": "",
  "robots": "index"
 },
 "mdx": {
  "altBody": "",
  "status": "rdmd"
 },
 "api": {
  "method": "get",
  "url": "",
  "auth": "required",
  "results": {
   "codes": [
    {
     "status": 200,
     "language": "json",
     "code": "{}",
     "name": ""
    },
    {
     "status": 400,
     "language": "json",
     "code": "{}",
     "name": ""
    }
   ]
  },
  "params": [],
  "examples": {
   "codes": []
  }
 },
 "next": {
  "description": "",
  "pages": []
 },
 "algolia": {
  "recordCount": 11,
  "publishPending": false,
  "translationFailure": false,
  "updatedAt": "2023-09-13T20:07:35.784Z"
 },
 "title": "Platform gRPC Endpoints",
 "icon": "",
 "updates": [
  "5e676fee633517029af984b0"
 ],
 "type": "basic",
 "slug": "reference-dapi-endpoints-platform-endpoints",
 "excerpt": "Detailed platform gRPC endpoint reference",
 "body": "Please refer to the [gRPC Overview](reference-dapi-endpoints-grpc-overview) for details regarding running the examples shown below, encoding/decoding the request/response data, and clients available for several languages.\n\n# Data Proofs and Metadata\n\nSince Dash Platform 0.20.0, Platform gRPC endpoints can provide [proofs](https://github.com/dashpay/platform/blob/master/packages/dapi-grpc/protos/platform/v0/platform.proto#L17-L22) so the data returned for a request can be verified as being valid. Full support is not yet available in the JavaScript client, but can be used via the low level [dapi-grpc library](https://github.com/dashevo/platform/tree/master/packages/dapi-grpc).\n\nSome [additional metadata](https://github.com/dashevo/platform/blob/master/packages/dapi-grpc/protos/platform/v0/platform.proto#L30-L33) is also provided with responses:\n\n| Metadata field          | Description                                           |\n| :---------------------- | :---------------------------------------------------- |\n| `height`                | Last committed platform chain height                  |\n| `coreChainLockedHeight` | Height of the most recent ChainLock on the core chain |\n| `timeMs`                | Unix timestamp in milliseconds for the response       |\n| `protocolVersion`       | Platform protocol version                             |\n\n# Endpoint Details\n\n## broadcastStateTransition\n\n> \ud83d\udcd8 \n> \n> **Note:** The [`waitForStateTransitionResult` endpoint](#waitforstatetransitionresult) should be used in conjunction with this one for instances where proof of block confirmation is required.\n\nBroadcasts a [state transition](explanation-platform-protocol-state-transition) to the platform via DAPI to make a change to layer 2 data. The `broadcastStateTransition` call returns once the state transition has been accepted into the mempool. \n\n**Returns**: Nothing or error\n\n**Parameters**:\n\n| Name               | Type           | Required | Description                                                          |\n| ------------------ | -------------- | -------- | -------------------------------------------------------------------- |\n| `state_transition` | Bytes (Base64) | Yes      | A [state transition](explanation-platform-protocol-state-transition) |\n\n[block:html]\n{\n  \"html\": \"<!--\\nJavaScript (dapi-client) example (old)\\nconst DAPIClient = require('@dashevo/dapi-client');\\nconst DashPlatformProtocol = require('@dashevo/dpp');\\n\\nconst client = new DAPIClient();\\nconst dpp = new DashPlatformProtocol();\\n\\n// Data Contract Create State Transition (JSON)\\n// Replace with your own state transition object before running\\nconst stateTransitionObject = {\\n  protocolVersion: 0,\\n  type: 0,\\n  signature: 'HxAipUsLWQBE++C1suSRNQiQh91rI1LZbblvQhk2erUaIvRneAagxGYYsXXYNvEeO+lBzlF1a9KHGGTHgnO/8Ts=',\\n  signaturePublicKeyId: 0,\\n  dataContract: {\\n    protocolVersion: 0,\\n    '$id': 'CMc7RghKkHeHtFdwfSX5Hzy7CUdpCEJnwsbfHdsbmJ32',\\n    '$schema': 'https://schema.dash.org/dpp-0-4-0/meta/data-contract',\\n    ownerId: '8Z3ps3tNoGoPEDYerUNCd4yi7zDwgBh2ejgSMExxvkfD',\\n    documents: {\\n      note: {\\n        properties: { message: { type: 'string' } },\\n        additionalProperties: false,\\n      },\\n    },\\n  },\\n  entropy: '+RqUArypdL8f/gCMAo4b6c3CoQvxHzsQG0BdYrT5QT0=',\\n};\\n\\n// Convert signature and entropy to buffer\\nstateTransitionObject.signature = Buffer.from(stateTransitionObject.signature, 'base64');\\nstateTransitionObject.entropy = Buffer.from(stateTransitionObject.entropy, 'base64');\\n\\ndpp.stateTransition.createFromObject(stateTransitionObject, { skipValidation: true })\\n  .then((stateTransition) => {\\n    client.platform.broadcastStateTransition(stateTransition.toBuffer())\\n      .then(() => console.log('State Transition broadcast successfully'));\\n  });\\n-->\\n\\n<!--\\nJavaScript (dapi-grpc) example (old)\\nconst {\\n  v0: {\\n    PlatformPromiseClient,\\n    BroadcastStateTransitionRequest,\\n  },\\n} = require('@dashevo/dapi-grpc');\\nconst DashPlatformProtocol = require('@dashevo/dpp');\\n\\nconst platformPromiseClient = new PlatformPromiseClient(\\n  'https://seed-1.testnet.networks.dash.org:1443',\\n);\\n\\nconst dpp = new DashPlatformProtocol();\\n\\n// Data Contract Create State Transition (JSON)\\n// Replace with your own state transition object before running\\nconst stateTransitionObject = {\\n  protocolVersion: 0,\\n  type: 0,\\n  signature: 'HxAipUsLWQBE++C1suSRNQiQh91rI1LZbblvQhk2erUaIvRneAagxGYYsXXYNvEeO+lBzlF1a9KHGGTHgnO/8Ts=',\\n  signaturePublicKeyId: 0,\\n  dataContract: {\\n    protocolVersion: 0,\\n    '$id': 'CMc7RghKkHeHtFdwfSX5Hzy7CUdpCEJnwsbfHdsbmJ32',\\n    '$schema': 'https://schema.dash.org/dpp-0-4-0/meta/data-contract',\\n    ownerId: '8Z3ps3tNoGoPEDYerUNCd4yi7zDwgBh2ejgSMExxvkfD',\\n    documents: {\\n      note: {\\n        properties: { message: { type: 'string' } },\\n        additionalProperties: false,\\n      },\\n    },\\n  },\\n  entropy: '+RqUArypdL8f/gCMAo4b6c3CoQvxHzsQG0BdYrT5QT0=',\\n};\\n\\n// Convert signature and entropy to buffer\\nstateTransitionObject.signature = Buffer.from(stateTransitionObject.signature, 'base64');\\nstateTransitionObject.entropy = Buffer.from(stateTransitionObject.entropy, 'base64');\\n\\nconst broadcastStateTransitionRequest = new BroadcastStateTransitionRequest();\\n\\ndpp.stateTransition.createFromObject(stateTransitionObject, { skipValidation: true })\\n  .then((stateTransition) => {\\n    console.log(stateTransition);\\n    broadcastStateTransitionRequest.setStateTransition(stateTransition.toBuffer());\\n\\n    platformPromiseClient.broadcastStateTransition(broadcastStateTransitionRequest)\\n      .then(() => console.log('State Transition broadcast successfully'))\\n      .catch((e) => {\\n        console.error(e);\\n        console.error(e.metadata);\\n      });\\n  })\\n  .catch((e) => console.error(e));\\n-->\\n\\n<!--\\ngRPCurl example (old)\\n# Submit an identity create State Transition\\n# `state_transition` must be represented in base64\\n# Replace `state_transition` with your own state transition object before running\\ngrpcurl -proto protos/platform/v0/platform.proto \\\\\\n  -d '{\\n    \\\"state_transition\\\":\\\"pWR0eXBlAmlzaWduYXR1cmV4WEg3TWhFWDQ0Z3JzMVIwTE9XTU5IZjAxWFNpYVFQcUlVZ1JLRXQyMkxHVERsUlUrZ1BwQUlUZk5JUmhXd3IvYTVHd0lzWm1idGdYVVFxcVhjbW9lQWtUOD1qcHVibGljS2V5c4GkYmlkAGRkYXRheCxBdzh2UmYxeFFCTlVLbzNiY2llaHlaR2NhM0hBSThkY0ZvVWJTK3hLb0lITmR0eXBlAGlpc0VuYWJsZWT1bmxvY2tlZE91dFBvaW50eDBLT1VUSHB5YnFPek9DNnhEVUhFWm9uc1lNSVpqcGppTHFZNnkxYmlWNWxRQUFBQUFvcHJvdG9jb2xWZXJzaW9uAA==\\\"\\n\\n    }' \\\\\\n  seed-1.testnet.networks.dash.org:1443 \\\\\\n  org.dash.platform.dapi.v0.Platform/broadcastStateTransition\\n-->\"\n}\n[/block]\n\n**Response**: No response except on error\n\n## getIdentity\n\n> \ud83d\udea7 Breaking changes\n> \n> As of Dash Platform 0.24 the `protocolVersion` is no longer included in the CBOR-encoded data. It is instead prepended as a varint to the data following CBOR encoding.\n\n**Returns**: [Identity](explanation-identity) information for the requested identity  \n**Parameters**:\n\n| Name    | Type    | Required | Description                                                           |\n| ------- | ------- | -------- | --------------------------------------------------------------------- |\n| `id`    | Bytes   | Yes      | An identity `id`                                                      |\n| `prove` | Boolean | No       | Set to `true` to receive a proof that contains the requested identity |\n\n> \ud83d\udcd8 \n> \n> **Note**: When requesting proofs, the data requested will be encoded as part of the proof in the response.\n\n** Example Request and Response **\n\n```javascript JavaScript (dapi-client)\nconst DAPIClient = require('@dashevo/dapi-client');\nconst Identifier = require('@dashevo/dpp/lib/Identifier');\nconst cbor = require('cbor');\nconst varint = require('varint');\n\nconst client = new DAPIClient();\n\nconst identityId = Identifier.from('4EfA9Jrvv3nnCFdSf7fad59851iiTRZ6Wcu6YVJ4iSeF');\nclient.platform.getIdentity(identityId).then((response) => {\n  // Strip off protocol version (leading varint) and decode\n  const identityBuffer = Buffer.from(response.getIdentity());\n  const protocolVersion = varint.decode(identityBuffer);\n  const identity = cbor.decode(\n    identityBuffer.slice(varint.encodingLength(protocolVersion), identityBuffer.length),\n  );\n  console.log(identity);\n});\n```\n```javascript JavaScript (dapi-grpc)\nconst {\n  v0: { PlatformPromiseClient, GetIdentityRequest },\n} = require('@dashevo/dapi-grpc');\nconst Identifier = require('@dashevo/dpp/lib/Identifier');\nconst cbor = require('cbor');\nconst varint = require('varint');\n\nconst platformPromiseClient = new PlatformPromiseClient(\n  'https://seed-1.testnet.networks.dash.org:1443',\n);\n\nconst id = Identifier.from('4EfA9Jrvv3nnCFdSf7fad59851iiTRZ6Wcu6YVJ4iSeF');\nconst idBuffer = Buffer.from(id);\nconst getIdentityRequest = new GetIdentityRequest();\ngetIdentityRequest.setId(idBuffer);\ngetIdentityRequest.setProve(false);\n\nplatformPromiseClient.getIdentity(getIdentityRequest)\n  .then((response) => {\n    // Strip off protocol version (leading varint) and decode\n    const identityBuffer = Buffer.from(response.getIdentity());\n    const protocolVersion = varint.decode(identityBuffer);\n    const decodedIdentity = cbor.decode(\n      identityBuffer.slice(varint.encodingLength(protocolVersion), identityBuffer.length),\n    );\n    console.log(decodedIdentity);  \n  })\n  .catch((e) => console.error(e));\n```\n```shell gRPCurl\n# `id` must be represented in base64\ngrpcurl -proto protos/platform/v0/platform.proto \\\n  -d '{\n    \"id\":\"MBLBm5jsADOt2zbNZLf1EGcPKjUaQwS19plBRChu/aw=\"\n    }' \\\n  seed-1.testnet.networks.dash.org:1443 \\\n  org.dash.platform.dapi.v0.Platform/getIdentity\n```\n\n```json Response (JavaScript)\n{\n  \"id\": <Buffer 30 12 c1 9b 98 ec 00 33 ad db 36 cd 64 b7 f5 10 67 0f 2a 35 1a 43 04 b5 f6 99 41 44 28 6e fd ac>,\n  \"balance\": 5255234422,\n  \"revision\": 0,\n  \"publicKeys\": [\n    {\n      \"id\": 0,\n      \"data\": <Buffer 02 c8 b4 74 7b 52 8c ac 5f dd f7 a6 cc 63 70 2e e0 4e d7 d1 33 29 04 e0 85 10 34 3e a0 0d ce 54 6a>,\n      \"type\": 0,\n      \"purpose\": 0,\n      \"readOnly\": false,\n      \"securityLevel\": 0\n    },\n    {\n      \"id\": 1,\n      \"data\": <Buffer 02 01 ee 28 f8 4f 54 85 39 05 67 e9 39 c2 b5 86 01 0b 63 a6 9e c9 2c ab 53 5d c9 6a 8c 71 91 36 02>,\n      \"type\": 0,\n      \"purpose\": 0,\n      \"readOnly\": false,\n      \"securityLevel\": 2\n    }\n  ]\n}\n```\n```json Response (gRPCurl)\n{\n  \"identity\": \"AaRiaWRYIDASwZuY7AAzrds2zWS39RBnDyo1GkMEtfaZQUQobv2sZ2JhbGFuY2UbAAAAATk8g3ZocmV2aXNpb24AanB1YmxpY0tleXOCpmJpZABkZGF0YVghAsi0dHtSjKxf3femzGNwLuBO19EzKQTghRA0PqANzlRqZHR5cGUAZ3B1cnBvc2UAaHJlYWRPbmx59G1zZWN1cml0eUxldmVsAKZiaWQBZGRhdGFYIQIB7ij4T1SFOQVn6TnCtYYBC2Omnsksq1NdyWqMcZE2AmR0eXBlAGdwdXJwb3NlAGhyZWFkT25sefRtc2VjdXJpdHlMZXZlbAI=\",\n  \"metadata\": {\n    \"height\": \"4217\",\n    \"coreChainLockedHeight\": 858833,\n    \"timeMs\": \"1688058824358\",\n    \"protocolVersion\": 1\n  }\n}\n```\n\n## getIdentitiesByPublicKeyHashes\n\n**Returns**: [Identity](explanation-identity) an array of identities associated with the provided public key hashes  \n**Parameters**:\n\n| Name                | Type    | Required | Description                                                             |\n| ------------------- | ------- | -------- | ----------------------------------------------------------------------- |\n| `public_key_hashes` | Bytes   | Yes      | Public key hashes (sha256-ripemd160) of identity public keys            |\n| `prove`             | Boolean | No       | Set to `true` to receive a proof that contains the requested identities |\n\n> \ud83d\udcd8 \n> \n> **Note**: When requesting proofs, the data requested will be encoded as part of the proof in the response.\n\n> \ud83d\udcd8 Public key hash\n> \n> Note: the hash must be done using all fields of the identity public key object - e.g.\n> \n> ```json\n> {\n>   \"id\": 0,\n>   \"type\": 0,\n>   \"purpose\": 0,\n>   \"securityLevel\": 0,\n>   \"data\": \"A2GTAJk9eAWkMXVCb+rRKXH99POtR5OaW6zqZl7/yozp\",\n>   \"readOnly\": false\n> }\n> ```\n> \n> When using the js-dpp library, the hash can be accessed via the [IdentityPublicKey object's](https://github.com/dashevo/platform/blob/master/packages/js-dpp/lib/identity/IdentityPublicKey.js) `hash` method (e.g. `identity.getPublicKeyById(0).hash()`).\n\n** Example Request and Response **\n\n```javascript JavaScript (dapi-client)\nconst DAPIClient = require('@dashevo/dapi-client');\nconst {\n  default: loadDpp, DashPlatformProtocol,\n} = require('@dashevo/wasm-dpp');\n\nconst client = new DAPIClient();\nloadDpp();\nconst dpp = new DashPlatformProtocol();\n\nconst publicKeyHash = 'b8d1591aa74d440e0af9c0be16c55bbc141847f7';\nconst publicKeysBuffer = [Buffer.from(publicKeyHash, 'hex')];\n\nclient.platform.getIdentitiesByPublicKeyHashes(publicKeysBuffer)\n  .then((response) => {\n    const retrievedIdentity = dpp.identity.createFromBuffer(response.identities[0]);\n    console.log(retrievedIdentity.toJSON());\n  });\n```\n```javascript JavaScript (dapi-grpc)\nconst {\n  v0: { PlatformPromiseClient, GetIdentitiesByPublicKeyHashesRequest },\n} = require('@dashevo/dapi-grpc');\nconst DashPlatformProtocol = require('@dashevo/dpp');\n\nconst dpp = new DashPlatformProtocol();\n\ndpp.initialize()\n  .then(() => {\n    const platformPromiseClient = new PlatformPromiseClient(\n      'https://seed-1.testnet.networks.dash.org:1443',\n    );\n\n    const publicKeyHash = 'b8d1591aa74d440e0af9c0be16c55bbc141847f7';\n    const publicKeysBuffer = [Buffer.from(publicKeyHash, 'hex')];\n\n    const getIdentitiesByPublicKeyHashesRequest = new GetIdentitiesByPublicKeyHashesRequest();\n    getIdentitiesByPublicKeyHashesRequest.setPublicKeyHashesList(publicKeysBuffer);\n\n    platformPromiseClient.getIdentitiesByPublicKeyHashes(getIdentitiesByPublicKeyHashesRequest)\n      .then((response) => {\n        const identitiesResponse = response.getIdentitiesList();\n      \tconsole.log(dpp.identity.createFromBuffer(Buffer.from(identitiesResponse[0])).toJSON());\n      })\n      .catch((e) => console.error(e));\n  \t});\n```\n```shell gRPCurl\n# `public_key_hashes` must be represented in base64\ngrpcurl -proto protos/platform/v0/platform.proto \\\n  -d '{\n      \"public_key_hashes\":\"uNFZGqdNRA4K+cC+FsVbvBQYR/c=\"\n    }' \\\n  seed-1.testnet.networks.dash.org:1443 \\\n  org.dash.platform.dapi.v0.Platform/getIdentitiesByPublicKeyHashes\n```\n\n```json Response (JavaScript)\n{\n  \"$version\": \"0\",\n  \"id\": \"4EfA9Jrvv3nnCFdSf7fad59851iiTRZ6Wcu6YVJ4iSeF\",\n  \"publicKeys\": [\n    {\n      \"$version\": \"0\",\n      \"id\": 0,\n      \"purpose\": 0,\n      \"securityLevel\": 0,\n      \"contractBounds\": null,\n      \"type\": 0,\n      \"readOnly\": false,\n      \"data\": \"Asi0dHtSjKxf3femzGNwLuBO19EzKQTghRA0PqANzlRq\",\n      \"disabledAt\": null\n    },\n    {\n      \"$version\": \"0\",\n      \"id\": 1,\n      \"purpose\": 0,\n      \"securityLevel\": 2,\n      \"contractBounds\": null,\n      \"type\": 0,\n      \"readOnly\": false,\n      \"data\": \"AgHuKPhPVIU5BWfpOcK1hgELY6aeySyrU13JaoxxkTYC\",\n      \"disabledAt\": null\n    }\n  ],\n  \"balance\": 2344694260,\n  \"revision\": 0\n}\n```\n```json Response (gRPCurl)\n{\n  \"identities\": [\n    \"AaRiaWRYIDASwZuY7AAzrds2zWS39RBnDyo1GkMEtfaZQUQobv2sZ2JhbGFuY2UbAAAAATk8g3ZocmV2aXNpb24AanB1YmxpY0tleXOCpmJpZABkZGF0YVghAsi0dHtSjKxf3femzGNwLuBO19EzKQTghRA0PqANzlRqZHR5cGUAZ3B1cnBvc2UAaHJlYWRPbmx59G1zZWN1cml0eUxldmVsAKZiaWQBZGRhdGFYIQIB7ij4T1SFOQVn6TnCtYYBC2Omnsksq1NdyWqMcZE2AmR0eXBlAGdwdXJwb3NlAGhyZWFkT25sefRtc2VjdXJpdHlMZXZlbAI=\"\n  ],\n  \"metadata\": {\n    \"height\": \"4216\",\n    \"coreChainLockedHeight\": 858832,\n    \"timeMs\": \"1688058626337\",\n    \"protocolVersion\": 1\n  }\n}\n```\n\n## getDataContract\n\n**Returns**: [Data Contract](explanation-platform-protocol-data-contract) information for the requested data contract  \n**Parameters**:\n\n| Name    | Type    | Required | Description                                                                |\n| ------- | ------- | -------- | -------------------------------------------------------------------------- |\n| `id`    | Bytes   | Yes      | A data contract `id`                                                       |\n| `prove` | Boolean | No       | Set to `true` to receive a proof that contains the requested data contract |\n\n> \ud83d\udcd8 \n> \n> **Note**: When requesting proofs, the data requested will be encoded as part of the proof in the response.\n\n** Example Request and Response **\n\n```javascript JavaScript (dapi-client)\nconst DAPIClient = require('@dashevo/dapi-client');\nconst Identifier = require('@dashevo/dpp/lib/Identifier');\nconst cbor = require('cbor');\nconst varint = require('varint');\n\nconst client = new DAPIClient();\n\nconst contractId = Identifier.from('GWRSAVFMjXx8HpQFaNJMqBV7MBgMK4br5UESsB4S31Ec');\nclient.platform.getDataContract(contractId).then((response) => {\n    // Strip off protocol version (leading varint) and decode\n    const contractBuffer = Buffer.from(response.getDataContract());\n    const protocolVersion = varint.decode(contractBuffer);\n    const contract = cbor.decode(\n      contractBuffer.slice(varint.encodingLength(protocolVersion), contractBuffer.length),\n    );\n  console.dir(contract, { depth: 10 });\n});\n```\n```javascript JavaScript (dapi-grpc)\nconst {\n  v0: { PlatformPromiseClient, GetDataContractRequest },\n} = require('@dashevo/dapi-grpc');\nconst Identifier = require('@dashevo/dpp/lib/Identifier');\nconst cbor = require('cbor');\nconst varint = require('varint');\n\nconst platformPromiseClient = new PlatformPromiseClient(\n  'https://seed-1.testnet.networks.dash.org:1443',\n);\n\nconst contractId = Identifier.from('GWRSAVFMjXx8HpQFaNJMqBV7MBgMK4br5UESsB4S31Ec');\nconst contractIdBuffer = Buffer.from(contractId);\nconst getDataContractRequest = new GetDataContractRequest();\ngetDataContractRequest.setId(contractIdBuffer);\n\nplatformPromiseClient.getDataContract(getDataContractRequest)\n  .then((response) => {\n    // Strip off protocol version (leading varint) and decode\n    const contractBuffer = Buffer.from(response.getDataContract());\n    const protocolVersion = varint.decode(contractBuffer);\n    const decodedDataContract = cbor.decode(\n      contractBuffer.slice(varint.encodingLength(protocolVersion), contractBuffer.length),\n    );\n    console.dir(decodedDataContract, { depth: 5 });\n  })\n  .catch((e) => console.error(e));\n```\n```shell gRPCurl\n# `id` must be represented in base64\ngrpcurl -proto protos/platform/v0/platform.proto \\\n  -d '{\n    \"id\":\"5mjGWa9mruHnLBht3ntbfgodcSoJxA1XIfYiv1PFMVU=\"\n    }' \\\n  seed-1.testnet.networks.dash.org:1443 \\\n  org.dash.platform.dapi.v0.Platform/getDataContract\n```\n\n```json Response (JavaScript)\n{\n  \"$id\": \"Buffer(32) [Uint8Array] [\n    230, 104, 198,  89, 175, 102, 174, 225,\n    231,  44,  24, 109, 222, 123,  91, 126,\n     10,  29, 113,  42,   9, 196,  13,  87,\n     33, 246,  34, 191,  83, 197,  49,  85\n  ]\",\n  \"$schema\": \"https://schema.dash.org/dpp-0-4-0/meta/data-contract\",\n  \"ownerId\": \"Buffer(32) [Uint8Array] [\n     48,  18, 193, 155, 152, 236,   0,  51,\n    173, 219,  54, 205, 100, 183, 245,  16,\n    103,  15,  42,  53,  26,  67,   4, 181,\n    246, 153,  65,  68,  40, 110, 253, 172\n  ]\",\n  \"version\": 1,\n  \"documents\": {\n    \"domain\": {\n      \"type\": \"object\",\n      \"indices\": [\n        {\n          \"name\": \"parentNameAndLabel\",\n          \"unique\": true,\n          \"properties\": [\n            { \"normalizedParentDomainName\": \"asc\" },\n            { \"normalizedLabel\": \"asc\" }\n          ]\n        },\n        {\n          \"name\": \"dashIdentityId\",\n          \"unique\": true,\n          \"properties\": [ { \"records.dashUniqueIdentityId\": \"asc\" } ]\n        },\n        {\n          \"name\": \"dashAlias\",\n          \"properties\": [ { \"records.dashAliasIdentityId\": \"asc\" } ]\n        }\n      ],\n      \"$comment\": \"In order to register a domain you need to create a preorder. The preorder step is needed to prevent man-in-the-middle attacks. normalizedLabel + '.' + normalizedParentDomain must not be longer than 253 chars length as defined by RFC 1035. Domain documents are immutable: modification and deletion are restricted\",\n      \"required\": [\n        \"label\",\n        \"normalizedLabel\",\n        \"normalizedParentDomainName\",\n        \"preorderSalt\",\n        \"records\",\n        \"subdomainRules\"\n      ],\n      \"properties\": {\n        \"label\": {\n          \"type\": \"string\",\n          \"pattern\": \"^[a-zA-Z0-9][a-zA-Z0-9-]{0,61}[a-zA-Z0-9]$\",\n          \"maxLength\": 63,\n          \"minLength\": 3,\n          \"description\": \"Domain label. e.g. 'Bob'.\"\n        },\n        \"records\": {\n          \"type\": \"object\",\n          \"$comment\": \"Constraint with max and min properties ensure that only one identity record is used - either a `dashUniqueIdentityId` or a `dashAliasIdentityId`\",\n          \"properties\": {\n            \"dashAliasIdentityId\": {\n              \"type\": \"array\",\n              \"$comment\": \"Must be equal to the document owner\",\n              \"maxItems\": 32,\n              \"minItems\": 32,\n              \"byteArray\": true,\n              \"description\": \"Identity ID to be used to create alias names for the Identity\",\n              \"contentMediaType\": \"application/x.dash.dpp.identifier\"\n            },\n            \"dashUniqueIdentityId\": {\n              \"type\": \"array\",\n              \"$comment\": \"Must be equal to the document owner\",\n              \"maxItems\": 32,\n              \"minItems\": 32,\n              \"byteArray\": true,\n              \"description\": \"Identity ID to be used to create the primary name the Identity\",\n              \"contentMediaType\": \"application/x.dash.dpp.identifier\"\n            }\n          },\n          \"maxProperties\": 1,\n          \"minProperties\": 1,\n          \"additionalProperties\": false\n        },\n        \"preorderSalt\": {\n          \"type\": \"array\",\n          \"maxItems\": 32,\n          \"minItems\": 32,\n          \"byteArray\": true,\n          \"description\": \"Salt used in the preorder document\"\n        },\n        \"subdomainRules\": {\n          \"type\": \"object\",\n          \"required\": [ \"allowSubdomains\" ],\n          \"properties\": {\n            \"allowSubdomains\": {\n              \"type\": \"boolean\",\n              \"$comment\": \"Only the domain owner is allowed to create subdomains for non top-level domains\",\n              \"description\": \"This option defines who can create subdomains: true - anyone; false - only the domain owner\"\n            }\n          },\n          \"description\": \"Subdomain rules allow domain owners to define rules for subdomains\",\n          \"additionalProperties\": false\n        },\n        \"normalizedLabel\": {\n          \"type\": \"string\",\n          \"pattern\": \"^[a-z0-9][a-z0-9-]{0,61}[a-z0-9]$\",\n          \"$comment\": \"Must be equal to the label in lowercase. This property will be deprecated due to case insensitive indices\",\n          \"maxLength\": 63,\n          \"description\": \"Domain label in lowercase for case-insensitive uniqueness validation. e.g. 'bob'\"\n        },\n        \"normalizedParentDomainName\": {\n          \"type\": \"string\",\n          \"pattern\": \"^$|^[a-z0-9][a-z0-9-\\\\.]{0,61}[a-z0-9]$\",\n          \"$comment\": \"Must either be equal to an existing domain or empty to create a top level domain. Only the data contract owner can create top level domains.\",\n          \"maxLength\": 63,\n          \"minLength\": 0,\n          \"description\": \"A full parent domain name in lowercase for case-insensitive uniqueness validation. e.g. 'dash'\"\n        }\n      },\n      \"additionalProperties\": false\n    },\n    \"preorder\": {\n      \"type\": \"object\",\n      \"indices\": [\n        {\n          \"name\": \"saltedHash\",\n          \"unique\": true,\n          \"properties\": [ { \"saltedDomainHash\": \"asc\" } ]\n        }\n      ],\n      \"$comment\": \"Preorder documents are immutable: modification and deletion are restricted\",\n      \"required\": [ \"saltedDomainHash\" ],\n      \"properties\": {\n        \"saltedDomainHash\": {\n          \"type\": \"array\",\n          \"maxItems\": 32,\n          \"minItems\": 32,\n          \"byteArray\": true,\n          \"description\": \"Double sha-256 of the concatenation of a 32 byte random salt and a normalized domain name\"\n        }\n      },\n      \"additionalProperties\": false\n    }\n  }\n}\n```\n```json Response (gRPCurl)\n{\n  \"dataContract\": \"AaVjJGlkWCDmaMZZr2au4ecsGG3ee1t+Ch1xKgnEDVch9iK/U8UxVWckc2NoZW1heDRodHRwczovL3NjaGVtYS5kYXNoLm9yZy9kcHAtMC00LTAvbWV0YS9kYXRhLWNvbnRyYWN0Z293bmVySWRYIDASwZuY7AAzrds2zWS39RBnDyo1GkMEtfaZQUQobv2sZ3ZlcnNpb24BaWRvY3VtZW50c6JmZG9tYWlupmR0eXBlZm9iamVjdGdpbmRpY2Vzg6NkbmFtZXJwYXJlbnROYW1lQW5kTGFiZWxmdW5pcXVl9Wpwcm9wZXJ0aWVzgqF4Gm5vcm1hbGl6ZWRQYXJlbnREb21haW5OYW1lY2FzY6Fvbm9ybWFsaXplZExhYmVsY2FzY6NkbmFtZW5kYXNoSWRlbnRpdHlJZGZ1bmlxdWX1anByb3BlcnRpZXOBoXgccmVjb3Jkcy5kYXNoVW5pcXVlSWRlbnRpdHlJZGNhc2OiZG5hbWVpZGFzaEFsaWFzanByb3BlcnRpZXOBoXgbcmVjb3Jkcy5kYXNoQWxpYXNJZGVudGl0eUlkY2FzY2gkY29tbWVudHkBN0luIG9yZGVyIHRvIHJlZ2lzdGVyIGEgZG9tYWluIHlvdSBuZWVkIHRvIGNyZWF0ZSBhIHByZW9yZGVyLiBUaGUgcHJlb3JkZXIgc3RlcCBpcyBuZWVkZWQgdG8gcHJldmVudCBtYW4taW4tdGhlLW1pZGRsZSBhdHRhY2tzLiBub3JtYWxpemVkTGFiZWwgKyAnLicgKyBub3JtYWxpemVkUGFyZW50RG9tYWluIG11c3Qgbm90IGJlIGxvbmdlciB0aGFuIDI1MyBjaGFycyBsZW5ndGggYXMgZGVmaW5lZCBieSBSRkMgMTAzNS4gRG9tYWluIGRvY3VtZW50cyBhcmUgaW1tdXRhYmxlOiBtb2RpZmljYXRpb24gYW5kIGRlbGV0aW9uIGFyZSByZXN0cmljdGVkaHJlcXVpcmVkhmVsYWJlbG9ub3JtYWxpemVkTGFiZWx4Gm5vcm1hbGl6ZWRQYXJlbnREb21haW5OYW1lbHByZW9yZGVyU2FsdGdyZWNvcmRzbnN1YmRvbWFpblJ1bGVzanByb3BlcnRpZXOmZWxhYmVspWR0eXBlZnN0cmluZ2dwYXR0ZXJueCpeW2EtekEtWjAtOV1bYS16QS1aMC05LV17MCw2MX1bYS16QS1aMC05XSRpbWF4TGVuZ3RoGD9pbWluTGVuZ3RoA2tkZXNjcmlwdGlvbngZRG9tYWluIGxhYmVsLiBlLmcuICdCb2InLmdyZWNvcmRzpmR0eXBlZm9iamVjdGgkY29tbWVudHiQQ29uc3RyYWludCB3aXRoIG1heCBhbmQgbWluIHByb3BlcnRpZXMgZW5zdXJlIHRoYXQgb25seSBvbmUgaWRlbnRpdHkgcmVjb3JkIGlzIHVzZWQgLSBlaXRoZXIgYSBgZGFzaFVuaXF1ZUlkZW50aXR5SWRgIG9yIGEgYGRhc2hBbGlhc0lkZW50aXR5SWRganByb3BlcnRpZXOic2Rhc2hBbGlhc0lkZW50aXR5SWSnZHR5cGVlYXJyYXloJGNvbW1lbnR4I011c3QgYmUgZXF1YWwgdG8gdGhlIGRvY3VtZW50IG93bmVyaG1heEl0ZW1zGCBobWluSXRlbXMYIGlieXRlQXJyYXn1a2Rlc2NyaXB0aW9ueD1JZGVudGl0eSBJRCB0byBiZSB1c2VkIHRvIGNyZWF0ZSBhbGlhcyBuYW1lcyBmb3IgdGhlIElkZW50aXR5cGNvbnRlbnRNZWRpYVR5cGV4IWFwcGxpY2F0aW9uL3guZGFzaC5kcHAuaWRlbnRpZmllcnRkYXNoVW5pcXVlSWRlbnRpdHlJZKdkdHlwZWVhcnJheWgkY29tbWVudHgjTXVzdCBiZSBlcXVhbCB0byB0aGUgZG9jdW1lbnQgb3duZXJobWF4SXRlbXMYIGhtaW5JdGVtcxggaWJ5dGVBcnJhefVrZGVzY3JpcHRpb254PklkZW50aXR5IElEIHRvIGJlIHVzZWQgdG8gY3JlYXRlIHRoZSBwcmltYXJ5IG5hbWUgdGhlIElkZW50aXR5cGNvbnRlbnRNZWRpYVR5cGV4IWFwcGxpY2F0aW9uL3guZGFzaC5kcHAuaWRlbnRpZmllcm1tYXhQcm9wZXJ0aWVzAW1taW5Qcm9wZXJ0aWVzAXRhZGRpdGlvbmFsUHJvcGVydGllc/RscHJlb3JkZXJTYWx0pWR0eXBlZWFycmF5aG1heEl0ZW1zGCBobWluSXRlbXMYIGlieXRlQXJyYXn1a2Rlc2NyaXB0aW9ueCJTYWx0IHVzZWQgaW4gdGhlIHByZW9yZGVyIGRvY3VtZW50bnN1YmRvbWFpblJ1bGVzpWR0eXBlZm9iamVjdGhyZXF1aXJlZIFvYWxsb3dTdWJkb21haW5zanByb3BlcnRpZXOhb2FsbG93U3ViZG9tYWluc6NkdHlwZWdib29sZWFuaCRjb21tZW50eE9Pbmx5IHRoZSBkb21haW4gb3duZXIgaXMgYWxsb3dlZCB0byBjcmVhdGUgc3ViZG9tYWlucyBmb3Igbm9uIHRvcC1sZXZlbCBkb21haW5za2Rlc2NyaXB0aW9ueFtUaGlzIG9wdGlvbiBkZWZpbmVzIHdobyBjYW4gY3JlYXRlIHN1YmRvbWFpbnM6IHRydWUgLSBhbnlvbmU7IGZhbHNlIC0gb25seSB0aGUgZG9tYWluIG93bmVya2Rlc2NyaXB0aW9ueEJTdWJkb21haW4gcnVsZXMgYWxsb3cgZG9tYWluIG93bmVycyB0byBkZWZpbmUgcnVsZXMgZm9yIHN1YmRvbWFpbnN0YWRkaXRpb25hbFByb3BlcnRpZXP0b25vcm1hbGl6ZWRMYWJlbKVkdHlwZWZzdHJpbmdncGF0dGVybnghXlthLXowLTldW2EtejAtOS1dezAsNjF9W2EtejAtOV0kaCRjb21tZW50eGlNdXN0IGJlIGVxdWFsIHRvIHRoZSBsYWJlbCBpbiBsb3dlcmNhc2UuIFRoaXMgcHJvcGVydHkgd2lsbCBiZSBkZXByZWNhdGVkIGR1ZSB0byBjYXNlIGluc2Vuc2l0aXZlIGluZGljZXNpbWF4TGVuZ3RoGD9rZGVzY3JpcHRpb254UERvbWFpbiBsYWJlbCBpbiBsb3dlcmNhc2UgZm9yIGNhc2UtaW5zZW5zaXRpdmUgdW5pcXVlbmVzcyB2YWxpZGF0aW9uLiBlLmcuICdib2IneBpub3JtYWxpemVkUGFyZW50RG9tYWluTmFtZaZkdHlwZWZzdHJpbmdncGF0dGVybngmXiR8XlthLXowLTldW2EtejAtOS1cLl17MCw2MX1bYS16MC05XSRoJGNvbW1lbnR4jE11c3QgZWl0aGVyIGJlIGVxdWFsIHRvIGFuIGV4aXN0aW5nIGRvbWFpbiBvciBlbXB0eSB0byBjcmVhdGUgYSB0b3AgbGV2ZWwgZG9tYWluLiBPbmx5IHRoZSBkYXRhIGNvbnRyYWN0IG93bmVyIGNhbiBjcmVhdGUgdG9wIGxldmVsIGRvbWFpbnMuaW1heExlbmd0aBg/aW1pbkxlbmd0aABrZGVzY3JpcHRpb254XkEgZnVsbCBwYXJlbnQgZG9tYWluIG5hbWUgaW4gbG93ZXJjYXNlIGZvciBjYXNlLWluc2Vuc2l0aXZlIHVuaXF1ZW5lc3MgdmFsaWRhdGlvbi4gZS5nLiAnZGFzaCd0YWRkaXRpb25hbFByb3BlcnRpZXP0aHByZW9yZGVypmR0eXBlZm9iamVjdGdpbmRpY2VzgaNkbmFtZWpzYWx0ZWRIYXNoZnVuaXF1ZfVqcHJvcGVydGllc4GhcHNhbHRlZERvbWFpbkhhc2hjYXNjaCRjb21tZW50eEpQcmVvcmRlciBkb2N1bWVudHMgYXJlIGltbXV0YWJsZTogbW9kaWZpY2F0aW9uIGFuZCBkZWxldGlvbiBhcmUgcmVzdHJpY3RlZGhyZXF1aXJlZIFwc2FsdGVkRG9tYWluSGFzaGpwcm9wZXJ0aWVzoXBzYWx0ZWREb21haW5IYXNopWR0eXBlZWFycmF5aG1heEl0ZW1zGCBobWluSXRlbXMYIGlieXRlQXJyYXn1a2Rlc2NyaXB0aW9ueFlEb3VibGUgc2hhLTI1NiBvZiB0aGUgY29uY2F0ZW5hdGlvbiBvZiBhIDMyIGJ5dGUgcmFuZG9tIHNhbHQgYW5kIGEgbm9ybWFsaXplZCBkb21haW4gbmFtZXRhZGRpdGlvbmFsUHJvcGVydGllc/Q=\",\n  \"metadata\": {\n    \"height\": \"4253\",\n    \"coreChainLockedHeight\": 889435,\n    \"timeMs\": \"1684440772828\",\n    \"protocolVersion\": 1\n  }\n}\n```\n\n## getDocuments\n\n**Returns**: [Document](explanation-platform-protocol-document) information for the requested document(s)  \n**Parameters**:\n\n> \ud83d\udea7 - Parameter constraints\n> \n> The `where`, `order_by`, `limit`, `start_at`, and `start_after` parameters must comply with the limits defined on the [Query Syntax](reference-query-syntax) page.\n> \n> Additionally, note that `where` and `order_by` must be [CBOR](https://tools.ietf.org/html/rfc7049) encoded.\n\n| Name                    | Type    | Required | Description                                                                                      |\n| ----------------------- | ------- | -------- | ------------------------------------------------------------------------------------------------ |\n| `data_contract_id`      | Bytes   | Yes      | A data contract `id`                                                                             |\n| `document_type`         | String  | Yes      | A document type defined by the data contract (e.g. `preorder` or `domain` for the DPNS contract) |\n| `where` \\*              | Bytes   | No       | Where clause to filter the results (**must be CBOR encoded**)                                    |\n| `order_by` \\*           | Bytes   | No       | Sort records by the field(s) provided (**must be CBOR encoded**)                                 |\n| `limit`                 | Integer | No       | Maximum number of results to return                                                              |\n| ----------              |         |          |                                                                                                  |\n| _One_ of the following: |         |          |                                                                                                  |\n| `start_at`              | Integer | No       | Return records beginning with the index provided                                                 |\n| `start_after`           | Integer | No       | Return records beginning after the index provided                                                |\n| ----------              |         |          |                                                                                                  |\n| `prove`                 | Boolean | No       | Set to `true` to receive a proof that contains the requested document(s)                         |\n\n> \ud83d\udcd8 \n> \n> **Note**: When requesting proofs, the data requested will be encoded as part of the proof in the response.\n\n** Example Request and Response **\n\n```javascript JavaScript (dapi-client)\nconst DAPIClient = require('@dashevo/dapi-client');\nconst Identifier = require('@dashevo/dpp/lib/Identifier');\nconst cbor = require('cbor');\nconst varint = require('varint');\n\nconst client = new DAPIClient();\n\nconst contractId = Identifier.from('GWRSAVFMjXx8HpQFaNJMqBV7MBgMK4br5UESsB4S31Ec');\nclient.platform.getDocuments(contractId, 'domain', { limit: 10 }).then((response) => {\n  for (const rawData of response.documents) {\n    // Strip off protocol version (leading varint) and decode\n    const documentBuffer = Buffer.from(rawData);\n    const protocolVersion = varint.decode(documentBuffer);\n    const document = cbor.decode(\n      documentBuffer.slice(varint.encodingLength(protocolVersion), documentBuffer.length),\n    );\n    console.log(document);\n  }\n});\n```\n```javascript JavaScript (dapi-grpc)\nconst {\n  v0: { PlatformPromiseClient, GetDocumentsRequest },\n} = require('@dashevo/dapi-grpc');\nconst cbor = require('cbor');\nconst Identifier = require('@dashevo/dpp/lib/Identifier');\nconst varint = require('varint');\n\nconst platformPromiseClient = new PlatformPromiseClient(\n  'https://seed-1.testnet.networks.dash.org:1443',\n);\n\nconst contractId = Identifier.from('GWRSAVFMjXx8HpQFaNJMqBV7MBgMK4br5UESsB4S31Ec');\nconst contractIdBuffer = Buffer.from(contractId);\nconst getDocumentsRequest = new GetDocumentsRequest();\nconst type = 'domain';\nconst limit = 10;\n\ngetDocumentsRequest.setDataContractId(contractIdBuffer);\ngetDocumentsRequest.setDocumentType(type);\n// getDocumentsRequest.setWhere(whereSerialized);\n// getDocumentsRequest.setOrderBy(orderBySerialized);\ngetDocumentsRequest.setLimit(limit);\n// getDocumentsRequest.setStartAfter(startAfter);\n// getDocumentsRequest.setStartAt(startAt);\n\nplatformPromiseClient.getDocuments(getDocumentsRequest)\n  .then((response) => {\n    for (const document of response.getDocumentsList()) {\n      // Strip off protocol version (leading varint) and decode\n      const documentBuffer = Buffer.from(document);\n      const protocolVersion = varint.decode(documentBuffer);\n      const decodedDocument = cbor.decode(\n        documentBuffer.slice(varint.encodingLength(protocolVersion), documentBuffer.length),\n      );\n      console.log(decodedDocument);      \n    }\n  })\n  .catch((e) => console.error(e));\n```\n```shell Request (gRPCurl)\n# Request documents\n# `id` must be represented in base64\ngrpcurl -proto protos/platform/v0/platform.proto \\\n  -d '{\n    \"data_contract_id\":\"5mjGWa9mruHnLBht3ntbfgodcSoJxA1XIfYiv1PFMVU=\",\n    \"document_type\":\"domain\",\n    \"limit\":1\n    }' \\\n  seed-1.testnet.networks.dash.org:1443 \\\n  org.dash.platform.dapi.v0.Platform/getDocuments\n```\n\n```json Response (JavaScript)\n{\n  \"$id\": \"<Buffer 01 a0 7c 69 43 82 cf fe 93 97 be c9 f4 be cd 67 81 8f 60 d2 a7 56 48 08 11 80 49 84 0b 2e 2c 5d>\",\n  \"$type\": \"domain\",\n  \"label\": \"Dash01\",\n  \"records\": {\n    \"dashUniqueIdentityId\": \"<Buffer f5 50 ed 37 1a 12 3f 54 00 59 31 84 f7 f7 37 f1 f4 b1 5d 05 6f 9c a8 0e 5f 00 52 82 08 77 7c 4a>\"\n  },\n  \"$ownerId\": \"<Buffer f5 50 ed 37 1a 12 3f 54 00 59 31 84 f7 f7 37 f1 f4 b1 5d 05 6f 9c a8 0e 5f 00 52 82 08 77 7c 4a>\",\n  \"$revision\": 1,\n  \"preorderSalt\": \"<Buffer 2c b4 1b e9 f4 40 03 9b 47 2f 31 74 46 df 7f 4f 43 fe 14 80 be ca 84 0d 63 0f a6 65 23 b9 9c a1>\",\n  \"subdomainRules\": { \"allowSubdomains\": false },\n  \"$dataContractId\": \"<Buffer e6 68 c6 59 af 66 ae e1 e7 2c 18 6d de 7b 5b 7e 0a 1d 71 2a 09 c4 0d 57 21 f6 22 bf 53 c5 31 55>\",\n  \"normalizedLabel\": \"dash01\",\n  \"normalizedParentDomainName\": \"dash\"\n}\n```\n```json Response (gRPCurl)\n{\n  \"documents\": [\n    \"AatjJGlkWCACod79ik2tILNnybx5VepoaX2cceXDSogwSgxdWi9zYmUkdHlwZWZkb21haW5lbGFiZWx0Yzg4OWMyM2FiY2ZkYzU3NGNmZWJncmVjb3Jkc6FzZGFzaEFsaWFzSWRlbnRpdHlJZFggMBLBm5jsADOt2zbNZLf1EGcPKjUaQwS19plBRChu/axoJG93bmVySWRYIDASwZuY7AAzrds2zWS39RBnDyo1GkMEtfaZQUQobv2saSRyZXZpc2lvbgFscHJlb3JkZXJTYWx0WCAkJyav6iQVX7hFrUFagKC+xddHsyA5Wo/NdvejXt6aSG5zdWJkb21haW5SdWxlc6FvYWxsb3dTdWJkb21haW5z9W8kZGF0YUNvbnRyYWN0SWRYIOZoxlmvZq7h5ywYbd57W34KHXEqCcQNVyH2Ir9TxTFVb25vcm1hbGl6ZWRMYWJlbHRjODg5YzIzYWJjZmRjNTc0Y2ZlYngabm9ybWFsaXplZFBhcmVudERvbWFpbk5hbWVg\"\n  ],\n  \"metadata\": {\n    \"height\": \"4254\",\n    \"coreChainLockedHeight\": 889435,\n    \"timeMs\": \"1684440970270\",\n    \"protocolVersion\": 1\n  }\n}\n```\n\n## waitForStateTransitionResult\n\n**Returns**: The state transition hash and either a proof that the state transition was confirmed in a block or an error.  \n**Parameters**:\n\n| Name                    | Type    | Required | Description                      |\n| ----------------------- | ------- | -------- | -------------------------------- |\n| `state_transition_hash` | Bytes   | Yes      | Hash of the state transition     |\n| `prove`                 | Boolean | Yes      | Set to `true` to request a proof |\n\n> \ud83d\udcd8 \n> \n> **Note**: When requesting proofs, the data requested will be encoded as part of the proof in the response.\n\n** Example Request**\n\n[block:html]\n{\n  \"html\": \"<!--\\nJavaScript (dapi-client) example (old)\\nconst DAPIClient = require('@dashevo/dapi-client');\\nconst DashPlatformProtocol = require('@dashevo/dpp');\\nconst crypto = require('crypto');\\n\\nconst client = new DAPIClient();\\nconst dpp = new DashPlatformProtocol();\\n\\n// Replace with your own state transition object before running\\nconst stateTransitionObject = {\\n  protocolVersion: 0,\\n  type: 0,\\n  signature: 'HxAipUsLWQBE++C1suSRNQiQh91rI1LZbblvQhk2erUaIvRneAagxGYYsXXYNvEeO+lBzlF1a9KHGGTHgnO/8Ts=',\\n  signaturePublicKeyId: 0,\\n  dataContract: {\\n    protocolVersion: 0,\\n    '$id': 'CMc7RghKkHeHtFdwfSX5Hzy7CUdpCEJnwsbfHdsbmJ32',\\n    '$schema': 'https://schema.dash.org/dpp-0-4-0/meta/data-contract',\\n    ownerId: '8Z3ps3tNoGoPEDYerUNCd4yi7zDwgBh2ejgSMExxvkfD',\\n    documents: {\\n      note: {\\n        properties: { message: { type: 'string' } },\\n        additionalProperties: false,\\n      },\\n    },\\n  },\\n  entropy: '+RqUArypdL8f/gCMAo4b6c3CoQvxHzsQG0BdYrT5QT0=',\\n};\\n\\n// Convert signature and entropy to buffer\\nstateTransitionObject.signature = Buffer.from(stateTransitionObject.signature, 'base64');\\nstateTransitionObject.entropy = Buffer.from(stateTransitionObject.entropy, 'base64');\\n\\ndpp.stateTransition.createFromObject(stateTransitionObject, { skipValidation: true })\\n  .then((stateTransition) => {\\n    //  Calculate state transition hash\\n    const hash = crypto.createHash('sha256')\\n      .update(stateTransition.toBuffer())\\n      .digest();\\n\\n    console.log(`Requesting proof of state transition with hash:\\\\n\\\\t${hash.toString('hex')}`);\\n\\n    client.platform.waitForStateTransitionResult(hash, { prove: true })\\n      .then((response) => {\\n        console.log(response);\\n      });\\n  });\\n-->\\n\\n<!--\\nJavaScript (dapi-grpc) example (old)\\nconst {\\n  v0: {\\n    PlatformPromiseClient,\\n    WaitForStateTransitionResultRequest,\\n  },\\n} = require('@dashevo/dapi-grpc');\\nconst DashPlatformProtocol = require('@dashevo/dpp');\\nconst crypto = require('crypto');\\n\\nconst platformPromiseClient = new PlatformPromiseClient(\\n  'https://seed-1.testnet.networks.dash.org:1443',\\n);\\n\\nconst dpp = new DashPlatformProtocol();\\n\\n// Replace with your own state transition object before running\\nconst stateTransitionObject = {\\n  protocolVersion: 0,\\n  type: 0,\\n  signature: 'HxAipUsLWQBE++C1suSRNQiQh91rI1LZbblvQhk2erUaIvRneAagxGYYsXXYNvEeO+lBzlF1a9KHGGTHgnO/8Ts=',\\n  signaturePublicKeyId: 0,\\n  dataContract: {\\n    protocolVersion: 0,\\n    '$id': 'CMc7RghKkHeHtFdwfSX5Hzy7CUdpCEJnwsbfHdsbmJ32',\\n    '$schema': 'https://schema.dash.org/dpp-0-4-0/meta/data-contract',\\n    ownerId: '8Z3ps3tNoGoPEDYerUNCd4yi7zDwgBh2ejgSMExxvkfD',\\n    documents: {\\n      note: {\\n        properties: { message: { type: 'string' } },\\n        additionalProperties: false,\\n      },\\n    },\\n  },\\n  entropy: '+RqUArypdL8f/gCMAo4b6c3CoQvxHzsQG0BdYrT5QT0=',\\n};\\n\\n// Convert signature and entropy to buffer\\nstateTransitionObject.signature = Buffer.from(stateTransitionObject.signature, 'base64');\\nstateTransitionObject.entropy = Buffer.from(stateTransitionObject.entropy, 'base64');\\n\\ndpp.stateTransition.createFromObject(stateTransitionObject, { skipValidation: true })\\n  .then((stateTransition) => {\\n    //  Calculate state transition hash\\n    const hash = crypto.createHash('sha256')\\n      .update(stateTransition.toBuffer())\\n      .digest();\\n\\n    const waitForStateTransitionResultRequest = new WaitForStateTransitionResultRequest();\\n    waitForStateTransitionResultRequest.setStateTransitionHash(hash);\\n    waitForStateTransitionResultRequest.setProve(true);\\n\\n    console.log(`Requesting proof of state transition with hash:\\\\n\\\\t${hash.toString('hex')}`);\\n\\n    platformPromiseClient.waitForStateTransitionResult(waitForStateTransitionResultRequest)\\n      .then((response) => {\\n        const rootTreeProof = Buffer.from(response.getProof().getRootTreeProof());\\n        const storeTreeProof = Buffer.from(response.getProof().getStoreTreeProof());\\n        console.log(`Root tree proof: ${rootTreeProof.toString('hex')}`);\\n        console.log(`Store tree proof: ${storeTreeProof.toString('hex')}`);\\n      })\\n  \\t\\t.catch((e) => console.error(e));\\n  });\\n-->\\n\\n<!--\\ngRPCurl example (old)\\n# `state_transition_hash` must be represented in base64\\n# Replace `state_transition_hash` with your own before running\\ngrpcurl -proto protos/platform/v0/platform.proto \\\\\\n  -d '{\\n    \\\"state_transition_hash\\\":\\\"wEiwFu9WvAtylrwTph5v0uXQm743N+75C+C9DhmZBkw=\\\",\\n    \\\"prove\\\": \\\"true\\\"\\n    }' \\\\\\n  seed-1.testnet.networks.dash.org:1443 \\\\\\n  org.dash.platform.dapi.v0.Platform/waitForStateTransitionResult\\n-->\"\n}\n[/block]\n\n```javascript JavaScript (dapi-client)\nconst DAPIClient = require('@dashevo/dapi-client');\n\nconst client = new DAPIClient();\n\n// Replace <YOUR_STATE_TRANSITION_HASH> with your actual hash\nconst hash = <YOUR_STATE_TRANSITION_HASH>;\nclient.platform.waitForStateTransitionResult(hash, { prove: true })\n  .then((response) => {\n    console.log(response);\n  });\n\n```\n```shell Request (gRPCurl)\n# Replace `your_state_transition_hash` with your own before running\n# `your_state_transition_hash` must be represented in base64\n#    Example: wEiwFu9WvAtylrwTph5v0uXQm743N+75C+C9DhmZBkw=\ngrpcurl -proto protos/platform/v0/platform.proto \\\n  -d '{\n    \"state_transition_hash\":your_state_transition_hash,\n    \"prove\": \"true\"\n    }' \\\n  seed-1.testnet.networks.dash.org:1443 \\\n  org.dash.platform.dapi.v0.Platform/waitForStateTransitionResult\n```\n\n[block:html]\n{\n  \"html\": \"<!--\\ndapi-client\\n{\\n  proof: {\\n    rootTreeProof: <Buffer 01 00 00 00 03 26 e0 35 e0 31 82 7e 7c 27 b0 91 23 41 ed d2 11 bf 3b 90 54 70 11 2c 68 5a 8e 76 8c 68 bb 39 21 3d cf 46 6d 09 d0 7a 28 e3 e9 0b 2b 0e ... 17 more bytes>,\\n    storeTreeProof: <Buffer 01 0b ee 31 ce ca 2a bd 44 6a db d4 9f 13 4a 7d 70 25 96 a9 b9 02 6e c4 e1 90 95 f7 a1 b4 c9 de 1f e4 63 e6 ce f7 58 3a 5b c3 10 01 78 9b 4f 98 9a c9 ... 526 more bytes>\\n  }\\n}\\n-->\\n<!--\\ndapi-grpc\\nRequesting proof of state transition with hash:\\n        8ae93b89c272455f3ce8d01dba99a3a28c9550262a602c6ba44de08e545d3aa9\\nRoot tree proof: 010000000326e035e031827e7c27b0912341edd211bf3b905470112c685a8e768c68bb39213dcf466d09d07a28e3e90b2b0e1d1510dede30214f68e32f8cf498220101\\nStore tree proof: 010bee31ceca2abd446adbd49f134a7d702596a9b9026ec4e19095f7a1b4c9de1fe463e6cef7583a5bc31001789b4f989ac9f8f524f1247fed372502d8c54a3c026072d5239f074422621673c250d1c74eadbb304a10013fb54a99ef641b9a7585d6d28dd443875e435a35022d92a0711f56ae23bc13f4a630a1455970451e3f1001fe2b060fca69ce2eb3d784cec28c0f575690f131026df252af068635bdf08f5448ea67c23d9a9a02831001a7df0a9f392682d7d7d0a29bd43d932c16b0d6530320a8b7df4cadb6cdfd5b5d1bb31cbb488d241e91d60cc1341cd686a3fbb6291f19e800a5632469645820a8b7df4cadb6cdfd5b5d1bb31cbb488d241e91d60cc1341cd686a3fbb6291f196724736368656d61783468747470733a2f2f736368656d612e646173682e6f72672f6470702d302d342d302f6d6574612f646174612d636f6e7472616374676f776e657249645820703796bfd3e2bbd54505a8e04929bb05b8aecfb1cd5c013ef8a8b84511770e0c69646f63756d656e7473a1646e6f7465a26a70726f70657274696573a1676d657373616765a1647479706566737472696e67746164646974696f6e616c50726f70657274696573f46f70726f746f636f6c56657273696f6e001001d94cd40044b8485e962d80e57c1992c77a182a1611111102abe7e3f7231ed71b8c4fd7ee09d4a1f970a51cd4100139312feadce145313ef34f720e940892d0ed2405111102245c6aaaf192b51207333be85ab77c9c9393af47100128ef7d4479e4f488373d92280fe8e52a9a48a6621111\\n-->\\n<!--\\ngRPCurl\\n{\\n  \\\"proof\\\": {\\n    \\\"merkleProof\\\": \\\"AQAAAAAAAAJHAV8NeFRgf0cWRiCIIVsbJcNs+bALwShVQEkXV2jRCueIAkeoHTKeU60+Jm2oiHbGSkOL8ui06Nj27SLz2raMF29iEAHKnCrDvO67hcJV79tfQwqQSFcxJOek9Fa/x3oYvwQrQQL8lxVOSAkZSC1qhI8LJa6PtR+u8TifMMmRCRY2dXrSUBABihjPBDgD9SM/d9JgWkYyT+sUp4FdgotmwHhZIB1rJVUCkaeftxRkQ/B0FU26ojDJirY/SwZ8RcU1/3pnbJbA+5EQBCBkeRNzJuVLjOKnDOmG48wnSzjHg5lLdlA5JSBD79rQxQAFAgEBAAAYUfu7+1iqqIwjkszndZ6Vm8pli6pjt4XxvvgKCcE3ygI+G8nIsflGKoZQOaWGcFBmXDzAwJqjGlMxSIWNSEgoQBACAQd7xuP4BzKoaf75MNyQQC6Q7e94Vg2IdQe2LFJysA4QAZ2mq+ad/rNJ7n2fPiJgHi4NMT9Wht6Kb5J8qF20hajJEQKz2VnGsgYNwMjY9kadWb63Tjk3nTqFttgjLnoz4PCpQBABpdWVJ9sfU+o+OEcUuFcDOV+y4gYFoao3kVNLZ+Yz7Y4RAuVHBoF21TyNc9DUDHmAfcaJf6K+/VzqIzfnJ7iGqXN+EAGvNlkFsWw+DjFg+MLjzo2MzUaWk7sA63+rG3FQJ7LO2hERERECPImih8uZnpEfew+qLeKrdEig5TR6g5VsfuHI9U2WuvsQAU7qdWenHDisDf3TNzJQytKJYaeyhmy2LEo11zZVwsoREQIAAAAAAAAA/wMBAAD6APcBAAAApGJpZFggZHkTcyblS4zipwzphuPMJ0s4x4OZS3ZQOSUgQ+/a0MVnYmFsYW5jZRo7mmxAaHJldmlzaW9uAGpwdWJsaWNLZXlzgqZiaWQAZGRhdGFYIQLlz7I9IuqDAf1fp2xiyvGiApsvgANo2ldfmrWv6MsfG2R0eXBlAGdwdXJwb3NlAGhyZWFkT25sefRtc2VjdXJpdHlMZXZlbACmYmlkAWRkYXRhWCECrq7odM9OoHGEyM1D19ZAaEPf50OKLwsxL2D4SpnLZllkdHlwZQBncHVycG9zZQBocmVhZE9ubHn0bXNlY3VyaXR5TGV2ZWwCAAEAAAAAAAAA0QQBAAAkAgEgbaBpE46QX8+EXS6Sl5CG4r+JuiXVDhxZeZy/TS8qnQEAUw2uiB7scatAs99mQfB5VfVb0lMSywDMHXpmUgNfONsC4OEPflWGlZAqBSOhaKD0/SfPJHbOOMEfCjTtBV1jjgwQARdKA3tf2c8gP3H7tRKcRMHXfljTH/4L8L63tbZk5FX/EQL+TedZ8kFHQEuNY8e9pfmaLI36Y7rHe1hAjVBSh9U95BABfPfYq74T0N0ygKE4spKvSQkekrnH0Ge8Ot0FEDsq2rcR\\\",\\n    \\\"signatureLlmqHash\\\": \\\"AAAA1h0X9yUNsXpD0/iKlsPvVb+VezkZAIkQIzmGqoc=\\\",\\n    \\\"signature\\\": \\\"jeByZ8qlZvID/C3LVVy/mZGHlRu2QhN3MZO09hCOjAH0gn1tqrAX6BXaJf6qRLw9APv0+nInObRF3JhstvsByPK8QOHCCl9M3NpcgI/HCECpqMMG8S9DPtJYI6HwQO5I\\\"\\n  },\\n  \\\"metadata\\\": {\\n    \\\"height\\\": \\\"1221\\\",\\n    \\\"coreChainLockedHeight\\\": 802939\\n  }\\n}\\n-->\"\n}\n[/block]\n\n# Deprecated Endpoints\n\nNo endpoints were deprecated in Dash Platform v0.24, but the previous version of documentation can be [viewed here](https://dashplatform.readme.io/v0.23.0/docs/reference-dapi-endpoints-platform-endpoints).\n\n# Code Reference\n\nImplementation details related to the information on this page can be found in:\n\n- The [Platform repository](https://github.com/dashevo/platform/tree/master/packages/dapi) `packages/dapi/lib/grpcServer/handlers/core` folder\n- The [Platform repository](https://github.com/dashevo/platform/tree/master/packages/dapi-grpc) `packages/dapi-grpc/protos` folder",
 "order": 3,
 "isReference": false,
 "deprecated": false,
 "hidden": false,
 "sync_unique": "",
 "link_url": "",
 "link_external": false,
 "reusableContent": [],
 "previousSlug": "",
 "slugUpdatedAt": "2020-09-03T18:20:20.690Z",
 "revision": 81,
 "_id": "64f8a9df750465004742adb3",
 "version": "64f8a9df750465004742ae1d",
 "project": "5bda01cad172e200499a20a9",
 "user": "5b8400d7185d5e00036dcc3b",
 "parentDoc": "64f8a9df750465004742adaf",
 "category": "64f8a9df750465004742ad70",
 "updatedAt": "2023-09-13T20:07:35.313Z",
 "createdAt": "2020-02-13T00:55:13.290Z",
 "__v": 1,
 "pendingAlgoliaPublish": false,
 "isApi": false,
 "id": "64f8a9df750465004742adb3",
 "body_html": "<p>Please refer to the <a href=\"reference-dapi-endpoints-grpc-overview\" target=\"\" title=\"\">gRPC Overview</a> for details regarding running the examples shown below, encoding/decoding the request/response data, and clients available for several languages.</p>\n<h1 class=\"heading heading-1 header-scroll\" align=\"\"><div class=\"heading-anchor anchor waypoint\" id=\"data-proofs-and-metadata\"></div><div class=\"heading-text\"><div id=\"section-data-proofs-and-metadata\" class=\"heading-anchor_backwardsCompatibility\"></div>Data Proofs and Metadata</div><a aria-label=\"Skip link to Data Proofs and Metadata\" class=\"heading-anchor-icon fa fa-anchor\" href=\"#data-proofs-and-metadata\"></a></h1>\n<p>Since Dash Platform 0.20.0, Platform gRPC endpoints can provide <a href=\"https://github.com/dashpay/platform/blob/master/packages/dapi-grpc/protos/platform/v0/platform.proto#L17-L22\" target=\"\" title=\"\">proofs</a> so the data returned for a request can be verified as being valid. Full support is not yet available in the JavaScript client, but can be used via the low level <a href=\"https://github.com/dashevo/platform/tree/master/packages/dapi-grpc\" target=\"\" title=\"\">dapi-grpc library</a>.</p>\n<p>Some <a href=\"https://github.com/dashevo/platform/blob/master/packages/dapi-grpc/protos/platform/v0/platform.proto#L30-L33\" target=\"\" title=\"\">additional metadata</a> is also provided with responses:</p>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n<div class=\"rdmd-table\"><div class=\"rdmd-table-inner\"><table><thead><tr><th style=\"text-align:left\">Metadata field</th><th style=\"text-align:left\">Description</th></tr></thead><tbody><tr><td style=\"text-align:left\"><button aria-label=\"Copy Code\" class=\"rdmd-code-copy fa\"></button><code class=\"rdmd-code lang- theme-light\" data-lang=\"\" name=\"\" tabindex=\"0\">height</code></td><td style=\"text-align:left\">Last committed platform chain height</td></tr><tr><td style=\"text-align:left\"><button aria-label=\"Copy Code\" class=\"rdmd-code-copy fa\"></button><code class=\"rdmd-code lang- theme-light\" data-lang=\"\" name=\"\" tabindex=\"0\">coreChainLockedHeight</code></td><td style=\"text-align:left\">Height of the most recent ChainLock on the core chain</td></tr><tr><td style=\"text-align:left\"><button aria-label=\"Copy Code\" class=\"rdmd-code-copy fa\"></button><code class=\"rdmd-code lang- theme-light\" data-lang=\"\" name=\"\" tabindex=\"0\">timeMs</code></td><td style=\"text-align:left\">Unix timestamp in milliseconds for the response</td></tr><tr><td style=\"text-align:left\"><button aria-label=\"Copy Code\" class=\"rdmd-code-copy fa\"></button><code class=\"rdmd-code lang- theme-light\" data-lang=\"\" name=\"\" tabindex=\"0\">protocolVersion</code></td><td style=\"text-align:left\">Platform protocol version</td></tr></tbody></table></div></div>\n<h1 class=\"heading heading-1 header-scroll\" align=\"\"><div class=\"heading-anchor anchor waypoint\" id=\"endpoint-details\"></div><div class=\"heading-text\"><div id=\"section-endpoint-details\" class=\"heading-anchor_backwardsCompatibility\"></div>Endpoint Details</div><a aria-label=\"Skip link to Endpoint Details\" class=\"heading-anchor-icon fa fa-anchor\" href=\"#endpoint-details\"></a></h1>\n<h2 class=\"heading heading-2 header-scroll\" align=\"\"><div class=\"heading-anchor anchor waypoint\" id=\"broadcaststatetransition\"></div><div class=\"heading-text\"><div id=\"section-broadcast-state-transition\" class=\"heading-anchor_backwardsCompatibility\"></div>broadcastStateTransition</div><a aria-label=\"Skip link to broadcastStateTransition\" class=\"heading-anchor-icon fa fa-anchor\" href=\"#broadcaststatetransition\"></a></h2>\n<blockquote class=\"callout callout_info\" theme=\"\ud83d\udcd8\"><h2 class=\"callout-heading empty\"><span class=\"callout-icon\">\ud83d\udcd8</span></h2><p><strong>Note:</strong> The <a href=\"#waitforstatetransitionresult\" target=\"\" title=\"\"><button aria-label=\"Copy Code\" class=\"rdmd-code-copy fa\"></button><code class=\"rdmd-code lang- theme-light\" data-lang=\"\" name=\"\" tabindex=\"0\">waitForStateTransitionResult</code> endpoint</a> should be used in conjunction with this one for instances where proof of block confirmation is required.</p></blockquote>\n<p>Broadcasts a <a href=\"explanation-platform-protocol-state-transition\" target=\"\" title=\"\">state transition</a> to the platform via DAPI to make a change to layer 2 data. The <button aria-label=\"Copy Code\" class=\"rdmd-code-copy fa\"></button><code class=\"rdmd-code lang- theme-light\" data-lang=\"\" name=\"\" tabindex=\"0\">broadcastStateTransition</code> call returns once the state transition has been accepted into the mempool. </p>\n<p><strong>Returns</strong>: Nothing or error</p>\n<p><strong>Parameters</strong>:</p>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n<div class=\"rdmd-table\"><div class=\"rdmd-table-inner\"><table><thead><tr><th>Name</th><th>Type</th><th>Required</th><th>Description</th></tr></thead><tbody><tr><td><button aria-label=\"Copy Code\" class=\"rdmd-code-copy fa\"></button><code class=\"rdmd-code lang- theme-light\" data-lang=\"\" name=\"\" tabindex=\"0\">state_transition</code></td><td>Bytes (Base64)</td><td>Yes</td><td>A <a href=\"explanation-platform-protocol-state-transition\" target=\"\" title=\"\">state transition</a></td></tr></tbody></table></div></div>\n<div class=\"rdmd-html\"><!--\nJavaScript (dapi-client) example (old)\nconst DAPIClient = require('@dashevo/dapi-client');\nconst DashPlatformProtocol = require('@dashevo/dpp');\n\nconst client = new DAPIClient();\nconst dpp = new DashPlatformProtocol();\n\n// Data Contract Create State Transition (JSON)\n// Replace with your own state transition object before running\nconst stateTransitionObject = {\n  protocolVersion: 0,\n  type: 0,\n  signature: 'HxAipUsLWQBE++C1suSRNQiQh91rI1LZbblvQhk2erUaIvRneAagxGYYsXXYNvEeO+lBzlF1a9KHGGTHgnO/8Ts=',\n  signaturePublicKeyId: 0,\n  dataContract: {\n    protocolVersion: 0,\n    '$id': 'CMc7RghKkHeHtFdwfSX5Hzy7CUdpCEJnwsbfHdsbmJ32',\n    '$schema': 'https://schema.dash.org/dpp-0-4-0/meta/data-contract',\n    ownerId: '8Z3ps3tNoGoPEDYerUNCd4yi7zDwgBh2ejgSMExxvkfD',\n    documents: {\n      note: {\n        properties: { message: { type: 'string' } },\n        additionalProperties: false,\n      },\n    },\n  },\n  entropy: '+RqUArypdL8f/gCMAo4b6c3CoQvxHzsQG0BdYrT5QT0=',\n};\n\n// Convert signature and entropy to buffer\nstateTransitionObject.signature = Buffer.from(stateTransitionObject.signature, 'base64');\nstateTransitionObject.entropy = Buffer.from(stateTransitionObject.entropy, 'base64');\n\ndpp.stateTransition.createFromObject(stateTransitionObject, { skipValidation: true })\n  .then((stateTransition) => {\n    client.platform.broadcastStateTransition(stateTransition.toBuffer())\n      .then(() => console.log('State Transition broadcast successfully'));\n  });\n-->\n\n<!--\nJavaScript (dapi-grpc) example (old)\nconst {\n  v0: {\n    PlatformPromiseClient,\n    BroadcastStateTransitionRequest,\n  },\n} = require('@dashevo/dapi-grpc');\nconst DashPlatformProtocol = require('@dashevo/dpp');\n\nconst platformPromiseClient = new PlatformPromiseClient(\n  'https://seed-1.testnet.networks.dash.org:1443',\n);\n\nconst dpp = new DashPlatformProtocol();\n\n// Data Contract Create State Transition (JSON)\n// Replace with your own state transition object before running\nconst stateTransitionObject = {\n  protocolVersion: 0,\n  type: 0,\n  signature: 'HxAipUsLWQBE++C1suSRNQiQh91rI1LZbblvQhk2erUaIvRneAagxGYYsXXYNvEeO+lBzlF1a9KHGGTHgnO/8Ts=',\n  signaturePublicKeyId: 0,\n  dataContract: {\n    protocolVersion: 0,\n    '$id': 'CMc7RghKkHeHtFdwfSX5Hzy7CUdpCEJnwsbfHdsbmJ32',\n    '$schema': 'https://schema.dash.org/dpp-0-4-0/meta/data-contract',\n    ownerId: '8Z3ps3tNoGoPEDYerUNCd4yi7zDwgBh2ejgSMExxvkfD',\n    documents: {\n      note: {\n        properties: { message: { type: 'string' } },\n        additionalProperties: false,\n      },\n    },\n  },\n  entropy: '+RqUArypdL8f/gCMAo4b6c3CoQvxHzsQG0BdYrT5QT0=',\n};\n\n// Convert signature and entropy to buffer\nstateTransitionObject.signature = Buffer.from(stateTransitionObject.signature, 'base64');\nstateTransitionObject.entropy = Buffer.from(stateTransitionObject.entropy, 'base64');\n\nconst broadcastStateTransitionRequest = new BroadcastStateTransitionRequest();\n\ndpp.stateTransition.createFromObject(stateTransitionObject, { skipValidation: true })\n  .then((stateTransition) => {\n    console.log(stateTransition);\n    broadcastStateTransitionRequest.setStateTransition(stateTransition.toBuffer());\n\n    platformPromiseClient.broadcastStateTransition(broadcastStateTransitionRequest)\n      .then(() => console.log('State Transition broadcast successfully'))\n      .catch((e) => {\n        console.error(e);\n        console.error(e.metadata);\n      });\n  })\n  .catch((e) => console.error(e));\n-->\n\n<!--\ngRPCurl example (old)\n# Submit an identity create State Transition\n# `state_transition` must be represented in base64\n# Replace `state_transition` with your own state transition object before running\ngrpcurl -proto protos/platform/v0/platform.proto \\\n  -d '{\n    \"state_transition\":\"pWR0eXBlAmlzaWduYXR1cmV4WEg3TWhFWDQ0Z3JzMVIwTE9XTU5IZjAxWFNpYVFQcUlVZ1JLRXQyMkxHVERsUlUrZ1BwQUlUZk5JUmhXd3IvYTVHd0lzWm1idGdYVVFxcVhjbW9lQWtUOD1qcHVibGljS2V5c4GkYmlkAGRkYXRheCxBdzh2UmYxeFFCTlVLbzNiY2llaHlaR2NhM0hBSThkY0ZvVWJTK3hLb0lITmR0eXBlAGlpc0VuYWJsZWT1bmxvY2tlZE91dFBvaW50eDBLT1VUSHB5YnFPek9DNnhEVUhFWm9uc1lNSVpqcGppTHFZNnkxYmlWNWxRQUFBQUFvcHJvdG9jb2xWZXJzaW9uAA==\"\n\n    }' \\\n  seed-1.testnet.networks.dash.org:1443 \\\n  org.dash.platform.dapi.v0.Platform/broadcastStateTransition\n--></div>\n<p><strong>Response</strong>: No response except on error</p>\n<h2 class=\"heading heading-2 header-scroll\" align=\"\"><div class=\"heading-anchor anchor waypoint\" id=\"getidentity\"></div><div class=\"heading-text\"><div id=\"section-get-identity\" class=\"heading-anchor_backwardsCompatibility\"></div>getIdentity</div><a aria-label=\"Skip link to getIdentity\" class=\"heading-anchor-icon fa fa-anchor\" href=\"#getidentity\"></a></h2>\n<blockquote class=\"callout callout_warn\" theme=\"\ud83d\udea7\"><h2 class=\"callout-heading\"><span class=\"callout-icon\">\ud83d\udea7</span><p>Breaking changes</p></h2><p>As of Dash Platform 0.24 the <button aria-label=\"Copy Code\" class=\"rdmd-code-copy fa\"></button><code class=\"rdmd-code lang- theme-light\" data-lang=\"\" name=\"\" tabindex=\"0\">protocolVersion</code> is no longer included in the CBOR-encoded data. It is instead prepended as a varint to the data following CBOR encoding.</p></blockquote>\n<p><strong>Returns</strong>: <a href=\"explanation-identity\" target=\"\" title=\"\">Identity</a> information for the requested identity<br/>\n<strong>Parameters</strong>:</p>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n<div class=\"rdmd-table\"><div class=\"rdmd-table-inner\"><table><thead><tr><th>Name</th><th>Type</th><th>Required</th><th>Description</th></tr></thead><tbody><tr><td><button aria-label=\"Copy Code\" class=\"rdmd-code-copy fa\"></button><code class=\"rdmd-code lang- theme-light\" data-lang=\"\" name=\"\" tabindex=\"0\">id</code></td><td>Bytes</td><td>Yes</td><td>An identity <button aria-label=\"Copy Code\" class=\"rdmd-code-copy fa\"></button><code class=\"rdmd-code lang- theme-light\" data-lang=\"\" name=\"\" tabindex=\"0\">id</code></td></tr><tr><td><button aria-label=\"Copy Code\" class=\"rdmd-code-copy fa\"></button><code class=\"rdmd-code lang- theme-light\" data-lang=\"\" name=\"\" tabindex=\"0\">prove</code></td><td>Boolean</td><td>No</td><td>Set to <button aria-label=\"Copy Code\" class=\"rdmd-code-copy fa\"></button><code class=\"rdmd-code lang- theme-light\" data-lang=\"\" name=\"\" tabindex=\"0\">true</code> to receive a proof that contains the requested identity</td></tr></tbody></table></div></div>\n<blockquote class=\"callout callout_info\" theme=\"\ud83d\udcd8\"><h2 class=\"callout-heading empty\"><span class=\"callout-icon\">\ud83d\udcd8</span></h2><p><strong>Note</strong>: When requesting proofs, the data requested will be encoded as part of the proof in the response.</p></blockquote>\n<p><strong> Example Request and Response </strong></p>\n<div class=\"CodeTabs CodeTabs_initial theme-light\"><div class=\"CodeTabs-toolbar\" role=\"tablist\"><button aria-selected=\"true\" class=\"CodeTabs_active\" role=\"tab\" type=\"button\">JavaScript (dapi-client)</button><button aria-selected=\"false\" class=\"\" role=\"tab\" type=\"button\">JavaScript (dapi-grpc)</button><button aria-selected=\"false\" class=\"\" role=\"tab\" type=\"button\">gRPCurl</button></div><div class=\"CodeTabs-inner\" role=\"tabpanel\"><pre><button aria-label=\"Copy Code\" class=\"rdmd-code-copy fa\"></button><code class=\"rdmd-code lang-javascript theme-light\" data-lang=\"javascript\" name=\"JavaScript (dapi-client)\" tabindex=\"0\">const DAPIClient = require(&#x27;@dashevo/dapi-client&#x27;);\nconst Identifier = require(&#x27;@dashevo/dpp/lib/Identifier&#x27;);\nconst cbor = require(&#x27;cbor&#x27;);\nconst varint = require(&#x27;varint&#x27;);\n\nconst client = new DAPIClient();\n\nconst identityId = Identifier.from(&#x27;4EfA9Jrvv3nnCFdSf7fad59851iiTRZ6Wcu6YVJ4iSeF&#x27;);\nclient.platform.getIdentity(identityId).then((response) =&gt; {\n  // Strip off protocol version (leading varint) and decode\n  const identityBuffer = Buffer.from(response.getIdentity());\n  const protocolVersion = varint.decode(identityBuffer);\n  const identity = cbor.decode(\n    identityBuffer.slice(varint.encodingLength(protocolVersion), identityBuffer.length),\n  );\n  console.log(identity);\n});\n</code></pre><pre><button aria-label=\"Copy Code\" class=\"rdmd-code-copy fa\"></button><code class=\"rdmd-code lang-javascript theme-light\" data-lang=\"javascript\" name=\"JavaScript (dapi-grpc)\" tabindex=\"0\">const {\n  v0: { PlatformPromiseClient, GetIdentityRequest },\n} = require(&#x27;@dashevo/dapi-grpc&#x27;);\nconst Identifier = require(&#x27;@dashevo/dpp/lib/Identifier&#x27;);\nconst cbor = require(&#x27;cbor&#x27;);\nconst varint = require(&#x27;varint&#x27;);\n\nconst platformPromiseClient = new PlatformPromiseClient(\n  &#x27;https://seed-1.testnet.networks.dash.org:1443&#x27;,\n);\n\nconst id = Identifier.from(&#x27;4EfA9Jrvv3nnCFdSf7fad59851iiTRZ6Wcu6YVJ4iSeF&#x27;);\nconst idBuffer = Buffer.from(id);\nconst getIdentityRequest = new GetIdentityRequest();\ngetIdentityRequest.setId(idBuffer);\ngetIdentityRequest.setProve(false);\n\nplatformPromiseClient.getIdentity(getIdentityRequest)\n  .then((response) =&gt; {\n    // Strip off protocol version (leading varint) and decode\n    const identityBuffer = Buffer.from(response.getIdentity());\n    const protocolVersion = varint.decode(identityBuffer);\n    const decodedIdentity = cbor.decode(\n      identityBuffer.slice(varint.encodingLength(protocolVersion), identityBuffer.length),\n    );\n    console.log(decodedIdentity);  \n  })\n  .catch((e) =&gt; console.error(e));\n</code></pre><pre><button aria-label=\"Copy Code\" class=\"rdmd-code-copy fa\"></button><code class=\"rdmd-code lang-shell theme-light\" data-lang=\"shell\" name=\"gRPCurl\" tabindex=\"0\"># `id` must be represented in base64\ngrpcurl -proto protos/platform/v0/platform.proto \\\n  -d &#x27;{\n    &quot;id&quot;:&quot;MBLBm5jsADOt2zbNZLf1EGcPKjUaQwS19plBRChu/aw=&quot;\n    }&#x27; \\\n  seed-1.testnet.networks.dash.org:1443 \\\n  org.dash.platform.dapi.v0.Platform/getIdentity\n</code></pre></div></div>\n<div class=\"CodeTabs CodeTabs_initial theme-light\"><div class=\"CodeTabs-toolbar\" role=\"tablist\"><button aria-selected=\"true\" class=\"CodeTabs_active\" role=\"tab\" type=\"button\">Response (JavaScript)</button><button aria-selected=\"false\" class=\"\" role=\"tab\" type=\"button\">Response (gRPCurl)</button></div><div class=\"CodeTabs-inner\" role=\"tabpanel\"><pre><button aria-label=\"Copy Code\" class=\"rdmd-code-copy fa\"></button><code class=\"rdmd-code lang-json theme-light\" data-lang=\"json\" name=\"Response (JavaScript)\" tabindex=\"0\">{\n  &quot;id&quot;: &lt;Buffer 30 12 c1 9b 98 ec 00 33 ad db 36 cd 64 b7 f5 10 67 0f 2a 35 1a 43 04 b5 f6 99 41 44 28 6e fd ac&gt;,\n  &quot;balance&quot;: 5255234422,\n  &quot;revision&quot;: 0,\n  &quot;publicKeys&quot;: [\n    {\n      &quot;id&quot;: 0,\n      &quot;data&quot;: &lt;Buffer 02 c8 b4 74 7b 52 8c ac 5f dd f7 a6 cc 63 70 2e e0 4e d7 d1 33 29 04 e0 85 10 34 3e a0 0d ce 54 6a&gt;,\n      &quot;type&quot;: 0,\n      &quot;purpose&quot;: 0,\n      &quot;readOnly&quot;: false,\n      &quot;securityLevel&quot;: 0\n    },\n    {\n      &quot;id&quot;: 1,\n      &quot;data&quot;: &lt;Buffer 02 01 ee 28 f8 4f 54 85 39 05 67 e9 39 c2 b5 86 01 0b 63 a6 9e c9 2c ab 53 5d c9 6a 8c 71 91 36 02&gt;,\n      &quot;type&quot;: 0,\n      &quot;purpose&quot;: 0,\n      &quot;readOnly&quot;: false,\n      &quot;securityLevel&quot;: 2\n    }\n  ]\n}\n</code></pre><pre><button aria-label=\"Copy Code\" class=\"rdmd-code-copy fa\"></button><code class=\"rdmd-code lang-json theme-light\" data-lang=\"json\" name=\"Response (gRPCurl)\" tabindex=\"0\">{\n  &quot;identity&quot;: &quot;AaRiaWRYIDASwZuY7AAzrds2zWS39RBnDyo1GkMEtfaZQUQobv2sZ2JhbGFuY2UbAAAAATk8g3ZocmV2aXNpb24AanB1YmxpY0tleXOCpmJpZABkZGF0YVghAsi0dHtSjKxf3femzGNwLuBO19EzKQTghRA0PqANzlRqZHR5cGUAZ3B1cnBvc2UAaHJlYWRPbmx59G1zZWN1cml0eUxldmVsAKZiaWQBZGRhdGFYIQIB7ij4T1SFOQVn6TnCtYYBC2Omnsksq1NdyWqMcZE2AmR0eXBlAGdwdXJwb3NlAGhyZWFkT25sefRtc2VjdXJpdHlMZXZlbAI=&quot;,\n  &quot;metadata&quot;: {\n    &quot;height&quot;: &quot;4217&quot;,\n    &quot;coreChainLockedHeight&quot;: 858833,\n    &quot;timeMs&quot;: &quot;1688058824358&quot;,\n    &quot;protocolVersion&quot;: 1\n  }\n}\n</code></pre></div></div>\n<h2 class=\"heading heading-2 header-scroll\" align=\"\"><div class=\"heading-anchor anchor waypoint\" id=\"getidentitiesbypublickeyhashes\"></div><div class=\"heading-text\"><div id=\"section-get-identities-by-public-key-hashes\" class=\"heading-anchor_backwardsCompatibility\"></div>getIdentitiesByPublicKeyHashes</div><a aria-label=\"Skip link to getIdentitiesByPublicKeyHashes\" class=\"heading-anchor-icon fa fa-anchor\" href=\"#getidentitiesbypublickeyhashes\"></a></h2>\n<p><strong>Returns</strong>: <a href=\"explanation-identity\" target=\"\" title=\"\">Identity</a> an array of identities associated with the provided public key hashes<br/>\n<strong>Parameters</strong>:</p>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n<div class=\"rdmd-table\"><div class=\"rdmd-table-inner\"><table><thead><tr><th>Name</th><th>Type</th><th>Required</th><th>Description</th></tr></thead><tbody><tr><td><button aria-label=\"Copy Code\" class=\"rdmd-code-copy fa\"></button><code class=\"rdmd-code lang- theme-light\" data-lang=\"\" name=\"\" tabindex=\"0\">public_key_hashes</code></td><td>Bytes</td><td>Yes</td><td>Public key hashes (sha256-ripemd160) of identity public keys</td></tr><tr><td><button aria-label=\"Copy Code\" class=\"rdmd-code-copy fa\"></button><code class=\"rdmd-code lang- theme-light\" data-lang=\"\" name=\"\" tabindex=\"0\">prove</code></td><td>Boolean</td><td>No</td><td>Set to <button aria-label=\"Copy Code\" class=\"rdmd-code-copy fa\"></button><code class=\"rdmd-code lang- theme-light\" data-lang=\"\" name=\"\" tabindex=\"0\">true</code> to receive a proof that contains the requested identities</td></tr></tbody></table></div></div>\n<blockquote class=\"callout callout_info\" theme=\"\ud83d\udcd8\"><h2 class=\"callout-heading empty\"><span class=\"callout-icon\">\ud83d\udcd8</span></h2><p><strong>Note</strong>: When requesting proofs, the data requested will be encoded as part of the proof in the response.</p></blockquote>\n<blockquote class=\"callout callout_info\" theme=\"\ud83d\udcd8\"><h2 class=\"callout-heading\"><span class=\"callout-icon\">\ud83d\udcd8</span><p>Public key hash</p></h2><p>Note: the hash must be done using all fields of the identity public key object - e.g.</p><div class=\"CodeTabs CodeTabs_initial theme-light\"><div class=\"CodeTabs-toolbar\" role=\"tablist\"><button aria-selected=\"true\" class=\"CodeTabs_active\" role=\"tab\" type=\"button\">JSON</button></div><div class=\"CodeTabs-inner\" role=\"tabpanel\"><pre><button aria-label=\"Copy Code\" class=\"rdmd-code-copy fa\"></button><code class=\"rdmd-code lang-json theme-light\" data-lang=\"json\" name=\"\" tabindex=\"0\">{\n  &quot;id&quot;: 0,\n  &quot;type&quot;: 0,\n  &quot;purpose&quot;: 0,\n  &quot;securityLevel&quot;: 0,\n  &quot;data&quot;: &quot;A2GTAJk9eAWkMXVCb+rRKXH99POtR5OaW6zqZl7/yozp&quot;,\n  &quot;readOnly&quot;: false\n}\n</code></pre></div></div><p>When using the js-dpp library, the hash can be accessed via the <a href=\"https://github.com/dashevo/platform/blob/master/packages/js-dpp/lib/identity/IdentityPublicKey.js\" target=\"\" title=\"\">IdentityPublicKey object&#x27;s</a> <button aria-label=\"Copy Code\" class=\"rdmd-code-copy fa\"></button><code class=\"rdmd-code lang- theme-light\" data-lang=\"\" name=\"\" tabindex=\"0\">hash</code> method (e.g. <button aria-label=\"Copy Code\" class=\"rdmd-code-copy fa\"></button><code class=\"rdmd-code lang- theme-light\" data-lang=\"\" name=\"\" tabindex=\"0\">identity.getPublicKeyById(0).hash()</code>).</p></blockquote>\n<p><strong> Example Request and Response </strong></p>\n<div class=\"CodeTabs CodeTabs_initial theme-light\"><div class=\"CodeTabs-toolbar\" role=\"tablist\"><button aria-selected=\"true\" class=\"CodeTabs_active\" role=\"tab\" type=\"button\">JavaScript (dapi-client)</button><button aria-selected=\"false\" class=\"\" role=\"tab\" type=\"button\">JavaScript (dapi-grpc)</button><button aria-selected=\"false\" class=\"\" role=\"tab\" type=\"button\">gRPCurl</button></div><div class=\"CodeTabs-inner\" role=\"tabpanel\"><pre><button aria-label=\"Copy Code\" class=\"rdmd-code-copy fa\"></button><code class=\"rdmd-code lang-javascript theme-light\" data-lang=\"javascript\" name=\"JavaScript (dapi-client)\" tabindex=\"0\">const DAPIClient = require(&#x27;@dashevo/dapi-client&#x27;);\nconst {\n  default: loadDpp, DashPlatformProtocol,\n} = require(&#x27;@dashevo/wasm-dpp&#x27;);\n\nconst client = new DAPIClient();\nloadDpp();\nconst dpp = new DashPlatformProtocol();\n\nconst publicKeyHash = &#x27;b8d1591aa74d440e0af9c0be16c55bbc141847f7&#x27;;\nconst publicKeysBuffer = [Buffer.from(publicKeyHash, &#x27;hex&#x27;)];\n\nclient.platform.getIdentitiesByPublicKeyHashes(publicKeysBuffer)\n  .then((response) =&gt; {\n    const retrievedIdentity = dpp.identity.createFromBuffer(response.identities[0]);\n    console.log(retrievedIdentity.toJSON());\n  });\n</code></pre><pre><button aria-label=\"Copy Code\" class=\"rdmd-code-copy fa\"></button><code class=\"rdmd-code lang-javascript theme-light\" data-lang=\"javascript\" name=\"JavaScript (dapi-grpc)\" tabindex=\"0\">const {\n  v0: { PlatformPromiseClient, GetIdentitiesByPublicKeyHashesRequest },\n} = require(&#x27;@dashevo/dapi-grpc&#x27;);\nconst DashPlatformProtocol = require(&#x27;@dashevo/dpp&#x27;);\n\nconst dpp = new DashPlatformProtocol();\n\ndpp.initialize()\n  .then(() =&gt; {\n    const platformPromiseClient = new PlatformPromiseClient(\n      &#x27;https://seed-1.testnet.networks.dash.org:1443&#x27;,\n    );\n\n    const publicKeyHash = &#x27;b8d1591aa74d440e0af9c0be16c55bbc141847f7&#x27;;\n    const publicKeysBuffer = [Buffer.from(publicKeyHash, &#x27;hex&#x27;)];\n\n    const getIdentitiesByPublicKeyHashesRequest = new GetIdentitiesByPublicKeyHashesRequest();\n    getIdentitiesByPublicKeyHashesRequest.setPublicKeyHashesList(publicKeysBuffer);\n\n    platformPromiseClient.getIdentitiesByPublicKeyHashes(getIdentitiesByPublicKeyHashesRequest)\n      .then((response) =&gt; {\n        const identitiesResponse = response.getIdentitiesList();\n      \tconsole.log(dpp.identity.createFromBuffer(Buffer.from(identitiesResponse[0])).toJSON());\n      })\n      .catch((e) =&gt; console.error(e));\n  \t});\n</code></pre><pre><button aria-label=\"Copy Code\" class=\"rdmd-code-copy fa\"></button><code class=\"rdmd-code lang-shell theme-light\" data-lang=\"shell\" name=\"gRPCurl\" tabindex=\"0\"># `public_key_hashes` must be represented in base64\ngrpcurl -proto protos/platform/v0/platform.proto \\\n  -d &#x27;{\n      &quot;public_key_hashes&quot;:&quot;uNFZGqdNRA4K+cC+FsVbvBQYR/c=&quot;\n    }&#x27; \\\n  seed-1.testnet.networks.dash.org:1443 \\\n  org.dash.platform.dapi.v0.Platform/getIdentitiesByPublicKeyHashes\n</code></pre></div></div>\n<div class=\"CodeTabs CodeTabs_initial theme-light\"><div class=\"CodeTabs-toolbar\" role=\"tablist\"><button aria-selected=\"true\" class=\"CodeTabs_active\" role=\"tab\" type=\"button\">Response (JavaScript)</button><button aria-selected=\"false\" class=\"\" role=\"tab\" type=\"button\">Response (gRPCurl)</button></div><div class=\"CodeTabs-inner\" role=\"tabpanel\"><pre><button aria-label=\"Copy Code\" class=\"rdmd-code-copy fa\"></button><code class=\"rdmd-code lang-json theme-light\" data-lang=\"json\" name=\"Response (JavaScript)\" tabindex=\"0\">{\n  &quot;$version&quot;: &quot;0&quot;,\n  &quot;id&quot;: &quot;4EfA9Jrvv3nnCFdSf7fad59851iiTRZ6Wcu6YVJ4iSeF&quot;,\n  &quot;publicKeys&quot;: [\n    {\n      &quot;$version&quot;: &quot;0&quot;,\n      &quot;id&quot;: 0,\n      &quot;purpose&quot;: 0,\n      &quot;securityLevel&quot;: 0,\n      &quot;contractBounds&quot;: null,\n      &quot;type&quot;: 0,\n      &quot;readOnly&quot;: false,\n      &quot;data&quot;: &quot;Asi0dHtSjKxf3femzGNwLuBO19EzKQTghRA0PqANzlRq&quot;,\n      &quot;disabledAt&quot;: null\n    },\n    {\n      &quot;$version&quot;: &quot;0&quot;,\n      &quot;id&quot;: 1,\n      &quot;purpose&quot;: 0,\n      &quot;securityLevel&quot;: 2,\n      &quot;contractBounds&quot;: null,\n      &quot;type&quot;: 0,\n      &quot;readOnly&quot;: false,\n      &quot;data&quot;: &quot;AgHuKPhPVIU5BWfpOcK1hgELY6aeySyrU13JaoxxkTYC&quot;,\n      &quot;disabledAt&quot;: null\n    }\n  ],\n  &quot;balance&quot;: 2344694260,\n  &quot;revision&quot;: 0\n}\n</code></pre><pre><button aria-label=\"Copy Code\" class=\"rdmd-code-copy fa\"></button><code class=\"rdmd-code lang-json theme-light\" data-lang=\"json\" name=\"Response (gRPCurl)\" tabindex=\"0\">{\n  &quot;identities&quot;: [\n    &quot;AaRiaWRYIDASwZuY7AAzrds2zWS39RBnDyo1GkMEtfaZQUQobv2sZ2JhbGFuY2UbAAAAATk8g3ZocmV2aXNpb24AanB1YmxpY0tleXOCpmJpZABkZGF0YVghAsi0dHtSjKxf3femzGNwLuBO19EzKQTghRA0PqANzlRqZHR5cGUAZ3B1cnBvc2UAaHJlYWRPbmx59G1zZWN1cml0eUxldmVsAKZiaWQBZGRhdGFYIQIB7ij4T1SFOQVn6TnCtYYBC2Omnsksq1NdyWqMcZE2AmR0eXBlAGdwdXJwb3NlAGhyZWFkT25sefRtc2VjdXJpdHlMZXZlbAI=&quot;\n  ],\n  &quot;metadata&quot;: {\n    &quot;height&quot;: &quot;4216&quot;,\n    &quot;coreChainLockedHeight&quot;: 858832,\n    &quot;timeMs&quot;: &quot;1688058626337&quot;,\n    &quot;protocolVersion&quot;: 1\n  }\n}\n</code></pre></div></div>\n<h2 class=\"heading heading-2 header-scroll\" align=\"\"><div class=\"heading-anchor anchor waypoint\" id=\"getdatacontract\"></div><div class=\"heading-text\"><div id=\"section-get-data-contract\" class=\"heading-anchor_backwardsCompatibility\"></div>getDataContract</div><a aria-label=\"Skip link to getDataContract\" class=\"heading-anchor-icon fa fa-anchor\" href=\"#getdatacontract\"></a></h2>\n<p><strong>Returns</strong>: <a href=\"explanation-platform-protocol-data-contract\" target=\"\" title=\"\">Data Contract</a> information for the requested data contract<br/>\n<strong>Parameters</strong>:</p>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n<div class=\"rdmd-table\"><div class=\"rdmd-table-inner\"><table><thead><tr><th>Name</th><th>Type</th><th>Required</th><th>Description</th></tr></thead><tbody><tr><td><button aria-label=\"Copy Code\" class=\"rdmd-code-copy fa\"></button><code class=\"rdmd-code lang- theme-light\" data-lang=\"\" name=\"\" tabindex=\"0\">id</code></td><td>Bytes</td><td>Yes</td><td>A data contract <button aria-label=\"Copy Code\" class=\"rdmd-code-copy fa\"></button><code class=\"rdmd-code lang- theme-light\" data-lang=\"\" name=\"\" tabindex=\"0\">id</code></td></tr><tr><td><button aria-label=\"Copy Code\" class=\"rdmd-code-copy fa\"></button><code class=\"rdmd-code lang- theme-light\" data-lang=\"\" name=\"\" tabindex=\"0\">prove</code></td><td>Boolean</td><td>No</td><td>Set to <button aria-label=\"Copy Code\" class=\"rdmd-code-copy fa\"></button><code class=\"rdmd-code lang- theme-light\" data-lang=\"\" name=\"\" tabindex=\"0\">true</code> to receive a proof that contains the requested data contract</td></tr></tbody></table></div></div>\n<blockquote class=\"callout callout_info\" theme=\"\ud83d\udcd8\"><h2 class=\"callout-heading empty\"><span class=\"callout-icon\">\ud83d\udcd8</span></h2><p><strong>Note</strong>: When requesting proofs, the data requested will be encoded as part of the proof in the response.</p></blockquote>\n<p><strong> Example Request and Response </strong></p>\n<div class=\"CodeTabs CodeTabs_initial theme-light\"><div class=\"CodeTabs-toolbar\" role=\"tablist\"><button aria-selected=\"true\" class=\"CodeTabs_active\" role=\"tab\" type=\"button\">JavaScript (dapi-client)</button><button aria-selected=\"false\" class=\"\" role=\"tab\" type=\"button\">JavaScript (dapi-grpc)</button><button aria-selected=\"false\" class=\"\" role=\"tab\" type=\"button\">gRPCurl</button></div><div class=\"CodeTabs-inner\" role=\"tabpanel\"><pre><button aria-label=\"Copy Code\" class=\"rdmd-code-copy fa\"></button><code class=\"rdmd-code lang-javascript theme-light\" data-lang=\"javascript\" name=\"JavaScript (dapi-client)\" tabindex=\"0\">const DAPIClient = require(&#x27;@dashevo/dapi-client&#x27;);\nconst Identifier = require(&#x27;@dashevo/dpp/lib/Identifier&#x27;);\nconst cbor = require(&#x27;cbor&#x27;);\nconst varint = require(&#x27;varint&#x27;);\n\nconst client = new DAPIClient();\n\nconst contractId = Identifier.from(&#x27;GWRSAVFMjXx8HpQFaNJMqBV7MBgMK4br5UESsB4S31Ec&#x27;);\nclient.platform.getDataContract(contractId).then((response) =&gt; {\n    // Strip off protocol version (leading varint) and decode\n    const contractBuffer = Buffer.from(response.getDataContract());\n    const protocolVersion = varint.decode(contractBuffer);\n    const contract = cbor.decode(\n      contractBuffer.slice(varint.encodingLength(protocolVersion), contractBuffer.length),\n    );\n  console.dir(contract, { depth: 10 });\n});\n</code></pre><pre><button aria-label=\"Copy Code\" class=\"rdmd-code-copy fa\"></button><code class=\"rdmd-code lang-javascript theme-light\" data-lang=\"javascript\" name=\"JavaScript (dapi-grpc)\" tabindex=\"0\">const {\n  v0: { PlatformPromiseClient, GetDataContractRequest },\n} = require(&#x27;@dashevo/dapi-grpc&#x27;);\nconst Identifier = require(&#x27;@dashevo/dpp/lib/Identifier&#x27;);\nconst cbor = require(&#x27;cbor&#x27;);\nconst varint = require(&#x27;varint&#x27;);\n\nconst platformPromiseClient = new PlatformPromiseClient(\n  &#x27;https://seed-1.testnet.networks.dash.org:1443&#x27;,\n);\n\nconst contractId = Identifier.from(&#x27;GWRSAVFMjXx8HpQFaNJMqBV7MBgMK4br5UESsB4S31Ec&#x27;);\nconst contractIdBuffer = Buffer.from(contractId);\nconst getDataContractRequest = new GetDataContractRequest();\ngetDataContractRequest.setId(contractIdBuffer);\n\nplatformPromiseClient.getDataContract(getDataContractRequest)\n  .then((response) =&gt; {\n    // Strip off protocol version (leading varint) and decode\n    const contractBuffer = Buffer.from(response.getDataContract());\n    const protocolVersion = varint.decode(contractBuffer);\n    const decodedDataContract = cbor.decode(\n      contractBuffer.slice(varint.encodingLength(protocolVersion), contractBuffer.length),\n    );\n    console.dir(decodedDataContract, { depth: 5 });\n  })\n  .catch((e) =&gt; console.error(e));\n</code></pre><pre><button aria-label=\"Copy Code\" class=\"rdmd-code-copy fa\"></button><code class=\"rdmd-code lang-shell theme-light\" data-lang=\"shell\" name=\"gRPCurl\" tabindex=\"0\"># `id` must be represented in base64\ngrpcurl -proto protos/platform/v0/platform.proto \\\n  -d &#x27;{\n    &quot;id&quot;:&quot;5mjGWa9mruHnLBht3ntbfgodcSoJxA1XIfYiv1PFMVU=&quot;\n    }&#x27; \\\n  seed-1.testnet.networks.dash.org:1443 \\\n  org.dash.platform.dapi.v0.Platform/getDataContract\n</code></pre></div></div>\n<div class=\"CodeTabs CodeTabs_initial theme-light\"><div class=\"CodeTabs-toolbar\" role=\"tablist\"><button aria-selected=\"true\" class=\"CodeTabs_active\" role=\"tab\" type=\"button\">Response (JavaScript)</button><button aria-selected=\"false\" class=\"\" role=\"tab\" type=\"button\">Response (gRPCurl)</button></div><div class=\"CodeTabs-inner\" role=\"tabpanel\"><pre><button aria-label=\"Copy Code\" class=\"rdmd-code-copy fa\"></button><code class=\"rdmd-code lang-json theme-light\" data-lang=\"json\" name=\"Response (JavaScript)\" tabindex=\"0\">{\n  &quot;$id&quot;: &quot;Buffer(32) [Uint8Array] [\n    230, 104, 198,  89, 175, 102, 174, 225,\n    231,  44,  24, 109, 222, 123,  91, 126,\n     10,  29, 113,  42,   9, 196,  13,  87,\n     33, 246,  34, 191,  83, 197,  49,  85\n  ]&quot;,\n  &quot;$schema&quot;: &quot;https://schema.dash.org/dpp-0-4-0/meta/data-contract&quot;,\n  &quot;ownerId&quot;: &quot;Buffer(32) [Uint8Array] [\n     48,  18, 193, 155, 152, 236,   0,  51,\n    173, 219,  54, 205, 100, 183, 245,  16,\n    103,  15,  42,  53,  26,  67,   4, 181,\n    246, 153,  65,  68,  40, 110, 253, 172\n  ]&quot;,\n  &quot;version&quot;: 1,\n  &quot;documents&quot;: {\n    &quot;domain&quot;: {\n      &quot;type&quot;: &quot;object&quot;,\n      &quot;indices&quot;: [\n        {\n          &quot;name&quot;: &quot;parentNameAndLabel&quot;,\n          &quot;unique&quot;: true,\n          &quot;properties&quot;: [\n            { &quot;normalizedParentDomainName&quot;: &quot;asc&quot; },\n            { &quot;normalizedLabel&quot;: &quot;asc&quot; }\n          ]\n        },\n        {\n          &quot;name&quot;: &quot;dashIdentityId&quot;,\n          &quot;unique&quot;: true,\n          &quot;properties&quot;: [ { &quot;records.dashUniqueIdentityId&quot;: &quot;asc&quot; } ]\n        },\n        {\n          &quot;name&quot;: &quot;dashAlias&quot;,\n          &quot;properties&quot;: [ { &quot;records.dashAliasIdentityId&quot;: &quot;asc&quot; } ]\n        }\n      ],\n      &quot;$comment&quot;: &quot;In order to register a domain you need to create a preorder. The preorder step is needed to prevent man-in-the-middle attacks. normalizedLabel + &#x27;.&#x27; + normalizedParentDomain must not be longer than 253 chars length as defined by RFC 1035. Domain documents are immutable: modification and deletion are restricted&quot;,\n      &quot;required&quot;: [\n        &quot;label&quot;,\n        &quot;normalizedLabel&quot;,\n        &quot;normalizedParentDomainName&quot;,\n        &quot;preorderSalt&quot;,\n        &quot;records&quot;,\n        &quot;subdomainRules&quot;\n      ],\n      &quot;properties&quot;: {\n        &quot;label&quot;: {\n          &quot;type&quot;: &quot;string&quot;,\n          &quot;pattern&quot;: &quot;^[a-zA-Z0-9][a-zA-Z0-9-]{0,61}[a-zA-Z0-9]$&quot;,\n          &quot;maxLength&quot;: 63,\n          &quot;minLength&quot;: 3,\n          &quot;description&quot;: &quot;Domain label. e.g. &#x27;Bob&#x27;.&quot;\n        },\n        &quot;records&quot;: {\n          &quot;type&quot;: &quot;object&quot;,\n          &quot;$comment&quot;: &quot;Constraint with max and min properties ensure that only one identity record is used - either a `dashUniqueIdentityId` or a `dashAliasIdentityId`&quot;,\n          &quot;properties&quot;: {\n            &quot;dashAliasIdentityId&quot;: {\n              &quot;type&quot;: &quot;array&quot;,\n              &quot;$comment&quot;: &quot;Must be equal to the document owner&quot;,\n              &quot;maxItems&quot;: 32,\n              &quot;minItems&quot;: 32,\n              &quot;byteArray&quot;: true,\n              &quot;description&quot;: &quot;Identity ID to be used to create alias names for the Identity&quot;,\n              &quot;contentMediaType&quot;: &quot;application/x.dash.dpp.identifier&quot;\n            },\n            &quot;dashUniqueIdentityId&quot;: {\n              &quot;type&quot;: &quot;array&quot;,\n              &quot;$comment&quot;: &quot;Must be equal to the document owner&quot;,\n              &quot;maxItems&quot;: 32,\n              &quot;minItems&quot;: 32,\n              &quot;byteArray&quot;: true,\n              &quot;description&quot;: &quot;Identity ID to be used to create the primary name the Identity&quot;,\n              &quot;contentMediaType&quot;: &quot;application/x.dash.dpp.identifier&quot;\n            }\n          },\n          &quot;maxProperties&quot;: 1,\n          &quot;minProperties&quot;: 1,\n          &quot;additionalProperties&quot;: false\n        },\n        &quot;preorderSalt&quot;: {\n          &quot;type&quot;: &quot;array&quot;,\n          &quot;maxItems&quot;: 32,\n          &quot;minItems&quot;: 32,\n          &quot;byteArray&quot;: true,\n          &quot;description&quot;: &quot;Salt used in the preorder document&quot;\n        },\n        &quot;subdomainRules&quot;: {\n          &quot;type&quot;: &quot;object&quot;,\n          &quot;required&quot;: [ &quot;allowSubdomains&quot; ],\n          &quot;properties&quot;: {\n            &quot;allowSubdomains&quot;: {\n              &quot;type&quot;: &quot;boolean&quot;,\n              &quot;$comment&quot;: &quot;Only the domain owner is allowed to create subdomains for non top-level domains&quot;,\n              &quot;description&quot;: &quot;This option defines who can create subdomains: true - anyone; false - only the domain owner&quot;\n            }\n          },\n          &quot;description&quot;: &quot;Subdomain rules allow domain owners to define rules for subdomains&quot;,\n          &quot;additionalProperties&quot;: false\n        },\n        &quot;normalizedLabel&quot;: {\n          &quot;type&quot;: &quot;string&quot;,\n          &quot;pattern&quot;: &quot;^[a-z0-9][a-z0-9-]{0,61}[a-z0-9]$&quot;,\n          &quot;$comment&quot;: &quot;Must be equal to the label in lowercase. This property will be deprecated due to case insensitive indices&quot;,\n          &quot;maxLength&quot;: 63,\n          &quot;description&quot;: &quot;Domain label in lowercase for case-insensitive uniqueness validation. e.g. &#x27;bob&#x27;&quot;\n        },\n        &quot;normalizedParentDomainName&quot;: {\n          &quot;type&quot;: &quot;string&quot;,\n          &quot;pattern&quot;: &quot;^$|^[a-z0-9][a-z0-9-\\\\.]{0,61}[a-z0-9]$&quot;,\n          &quot;$comment&quot;: &quot;Must either be equal to an existing domain or empty to create a top level domain. Only the data contract owner can create top level domains.&quot;,\n          &quot;maxLength&quot;: 63,\n          &quot;minLength&quot;: 0,\n          &quot;description&quot;: &quot;A full parent domain name in lowercase for case-insensitive uniqueness validation. e.g. &#x27;dash&#x27;&quot;\n        }\n      },\n      &quot;additionalProperties&quot;: false\n    },\n    &quot;preorder&quot;: {\n      &quot;type&quot;: &quot;object&quot;,\n      &quot;indices&quot;: [\n        {\n          &quot;name&quot;: &quot;saltedHash&quot;,\n          &quot;unique&quot;: true,\n          &quot;properties&quot;: [ { &quot;saltedDomainHash&quot;: &quot;asc&quot; } ]\n        }\n      ],\n      &quot;$comment&quot;: &quot;Preorder documents are immutable: modification and deletion are restricted&quot;,\n      &quot;required&quot;: [ &quot;saltedDomainHash&quot; ],\n      &quot;properties&quot;: {\n        &quot;saltedDomainHash&quot;: {\n          &quot;type&quot;: &quot;array&quot;,\n          &quot;maxItems&quot;: 32,\n          &quot;minItems&quot;: 32,\n          &quot;byteArray&quot;: true,\n          &quot;description&quot;: &quot;Double sha-256 of the concatenation of a 32 byte random salt and a normalized domain name&quot;\n        }\n      },\n      &quot;additionalProperties&quot;: false\n    }\n  }\n}\n</code></pre><pre><button aria-label=\"Copy Code\" class=\"rdmd-code-copy fa\"></button><code class=\"rdmd-code lang-json theme-light\" data-lang=\"json\" name=\"Response (gRPCurl)\" tabindex=\"0\">{\n  &quot;dataContract&quot;: &quot;AaVjJGlkWCDmaMZZr2au4ecsGG3ee1t+Ch1xKgnEDVch9iK/U8UxVWckc2NoZW1heDRodHRwczovL3NjaGVtYS5kYXNoLm9yZy9kcHAtMC00LTAvbWV0YS9kYXRhLWNvbnRyYWN0Z293bmVySWRYIDASwZuY7AAzrds2zWS39RBnDyo1GkMEtfaZQUQobv2sZ3ZlcnNpb24BaWRvY3VtZW50c6JmZG9tYWlupmR0eXBlZm9iamVjdGdpbmRpY2Vzg6NkbmFtZXJwYXJlbnROYW1lQW5kTGFiZWxmdW5pcXVl9Wpwcm9wZXJ0aWVzgqF4Gm5vcm1hbGl6ZWRQYXJlbnREb21haW5OYW1lY2FzY6Fvbm9ybWFsaXplZExhYmVsY2FzY6NkbmFtZW5kYXNoSWRlbnRpdHlJZGZ1bmlxdWX1anByb3BlcnRpZXOBoXgccmVjb3Jkcy5kYXNoVW5pcXVlSWRlbnRpdHlJZGNhc2OiZG5hbWVpZGFzaEFsaWFzanByb3BlcnRpZXOBoXgbcmVjb3Jkcy5kYXNoQWxpYXNJZGVudGl0eUlkY2FzY2gkY29tbWVudHkBN0luIG9yZGVyIHRvIHJlZ2lzdGVyIGEgZG9tYWluIHlvdSBuZWVkIHRvIGNyZWF0ZSBhIHByZW9yZGVyLiBUaGUgcHJlb3JkZXIgc3RlcCBpcyBuZWVkZWQgdG8gcHJldmVudCBtYW4taW4tdGhlLW1pZGRsZSBhdHRhY2tzLiBub3JtYWxpemVkTGFiZWwgKyAnLicgKyBub3JtYWxpemVkUGFyZW50RG9tYWluIG11c3Qgbm90IGJlIGxvbmdlciB0aGFuIDI1MyBjaGFycyBsZW5ndGggYXMgZGVmaW5lZCBieSBSRkMgMTAzNS4gRG9tYWluIGRvY3VtZW50cyBhcmUgaW1tdXRhYmxlOiBtb2RpZmljYXRpb24gYW5kIGRlbGV0aW9uIGFyZSByZXN0cmljdGVkaHJlcXVpcmVkhmVsYWJlbG9ub3JtYWxpemVkTGFiZWx4Gm5vcm1hbGl6ZWRQYXJlbnREb21haW5OYW1lbHByZW9yZGVyU2FsdGdyZWNvcmRzbnN1YmRvbWFpblJ1bGVzanByb3BlcnRpZXOmZWxhYmVspWR0eXBlZnN0cmluZ2dwYXR0ZXJueCpeW2EtekEtWjAtOV1bYS16QS1aMC05LV17MCw2MX1bYS16QS1aMC05XSRpbWF4TGVuZ3RoGD9pbWluTGVuZ3RoA2tkZXNjcmlwdGlvbngZRG9tYWluIGxhYmVsLiBlLmcuICdCb2InLmdyZWNvcmRzpmR0eXBlZm9iamVjdGgkY29tbWVudHiQQ29uc3RyYWludCB3aXRoIG1heCBhbmQgbWluIHByb3BlcnRpZXMgZW5zdXJlIHRoYXQgb25seSBvbmUgaWRlbnRpdHkgcmVjb3JkIGlzIHVzZWQgLSBlaXRoZXIgYSBgZGFzaFVuaXF1ZUlkZW50aXR5SWRgIG9yIGEgYGRhc2hBbGlhc0lkZW50aXR5SWRganByb3BlcnRpZXOic2Rhc2hBbGlhc0lkZW50aXR5SWSnZHR5cGVlYXJyYXloJGNvbW1lbnR4I011c3QgYmUgZXF1YWwgdG8gdGhlIGRvY3VtZW50IG93bmVyaG1heEl0ZW1zGCBobWluSXRlbXMYIGlieXRlQXJyYXn1a2Rlc2NyaXB0aW9ueD1JZGVudGl0eSBJRCB0byBiZSB1c2VkIHRvIGNyZWF0ZSBhbGlhcyBuYW1lcyBmb3IgdGhlIElkZW50aXR5cGNvbnRlbnRNZWRpYVR5cGV4IWFwcGxpY2F0aW9uL3guZGFzaC5kcHAuaWRlbnRpZmllcnRkYXNoVW5pcXVlSWRlbnRpdHlJZKdkdHlwZWVhcnJheWgkY29tbWVudHgjTXVzdCBiZSBlcXVhbCB0byB0aGUgZG9jdW1lbnQgb3duZXJobWF4SXRlbXMYIGhtaW5JdGVtcxggaWJ5dGVBcnJhefVrZGVzY3JpcHRpb254PklkZW50aXR5IElEIHRvIGJlIHVzZWQgdG8gY3JlYXRlIHRoZSBwcmltYXJ5IG5hbWUgdGhlIElkZW50aXR5cGNvbnRlbnRNZWRpYVR5cGV4IWFwcGxpY2F0aW9uL3guZGFzaC5kcHAuaWRlbnRpZmllcm1tYXhQcm9wZXJ0aWVzAW1taW5Qcm9wZXJ0aWVzAXRhZGRpdGlvbmFsUHJvcGVydGllc/RscHJlb3JkZXJTYWx0pWR0eXBlZWFycmF5aG1heEl0ZW1zGCBobWluSXRlbXMYIGlieXRlQXJyYXn1a2Rlc2NyaXB0aW9ueCJTYWx0IHVzZWQgaW4gdGhlIHByZW9yZGVyIGRvY3VtZW50bnN1YmRvbWFpblJ1bGVzpWR0eXBlZm9iamVjdGhyZXF1aXJlZIFvYWxsb3dTdWJkb21haW5zanByb3BlcnRpZXOhb2FsbG93U3ViZG9tYWluc6NkdHlwZWdib29sZWFuaCRjb21tZW50eE9Pbmx5IHRoZSBkb21haW4gb3duZXIgaXMgYWxsb3dlZCB0byBjcmVhdGUgc3ViZG9tYWlucyBmb3Igbm9uIHRvcC1sZXZlbCBkb21haW5za2Rlc2NyaXB0aW9ueFtUaGlzIG9wdGlvbiBkZWZpbmVzIHdobyBjYW4gY3JlYXRlIHN1YmRvbWFpbnM6IHRydWUgLSBhbnlvbmU7IGZhbHNlIC0gb25seSB0aGUgZG9tYWluIG93bmVya2Rlc2NyaXB0aW9ueEJTdWJkb21haW4gcnVsZXMgYWxsb3cgZG9tYWluIG93bmVycyB0byBkZWZpbmUgcnVsZXMgZm9yIHN1YmRvbWFpbnN0YWRkaXRpb25hbFByb3BlcnRpZXP0b25vcm1hbGl6ZWRMYWJlbKVkdHlwZWZzdHJpbmdncGF0dGVybnghXlthLXowLTldW2EtejAtOS1dezAsNjF9W2EtejAtOV0kaCRjb21tZW50eGlNdXN0IGJlIGVxdWFsIHRvIHRoZSBsYWJlbCBpbiBsb3dlcmNhc2UuIFRoaXMgcHJvcGVydHkgd2lsbCBiZSBkZXByZWNhdGVkIGR1ZSB0byBjYXNlIGluc2Vuc2l0aXZlIGluZGljZXNpbWF4TGVuZ3RoGD9rZGVzY3JpcHRpb254UERvbWFpbiBsYWJlbCBpbiBsb3dlcmNhc2UgZm9yIGNhc2UtaW5zZW5zaXRpdmUgdW5pcXVlbmVzcyB2YWxpZGF0aW9uLiBlLmcuICdib2IneBpub3JtYWxpemVkUGFyZW50RG9tYWluTmFtZaZkdHlwZWZzdHJpbmdncGF0dGVybngmXiR8XlthLXowLTldW2EtejAtOS1cLl17MCw2MX1bYS16MC05XSRoJGNvbW1lbnR4jE11c3QgZWl0aGVyIGJlIGVxdWFsIHRvIGFuIGV4aXN0aW5nIGRvbWFpbiBvciBlbXB0eSB0byBjcmVhdGUgYSB0b3AgbGV2ZWwgZG9tYWluLiBPbmx5IHRoZSBkYXRhIGNvbnRyYWN0IG93bmVyIGNhbiBjcmVhdGUgdG9wIGxldmVsIGRvbWFpbnMuaW1heExlbmd0aBg/aW1pbkxlbmd0aABrZGVzY3JpcHRpb254XkEgZnVsbCBwYXJlbnQgZG9tYWluIG5hbWUgaW4gbG93ZXJjYXNlIGZvciBjYXNlLWluc2Vuc2l0aXZlIHVuaXF1ZW5lc3MgdmFsaWRhdGlvbi4gZS5nLiAnZGFzaCd0YWRkaXRpb25hbFByb3BlcnRpZXP0aHByZW9yZGVypmR0eXBlZm9iamVjdGdpbmRpY2VzgaNkbmFtZWpzYWx0ZWRIYXNoZnVuaXF1ZfVqcHJvcGVydGllc4GhcHNhbHRlZERvbWFpbkhhc2hjYXNjaCRjb21tZW50eEpQcmVvcmRlciBkb2N1bWVudHMgYXJlIGltbXV0YWJsZTogbW9kaWZpY2F0aW9uIGFuZCBkZWxldGlvbiBhcmUgcmVzdHJpY3RlZGhyZXF1aXJlZIFwc2FsdGVkRG9tYWluSGFzaGpwcm9wZXJ0aWVzoXBzYWx0ZWREb21haW5IYXNopWR0eXBlZWFycmF5aG1heEl0ZW1zGCBobWluSXRlbXMYIGlieXRlQXJyYXn1a2Rlc2NyaXB0aW9ueFlEb3VibGUgc2hhLTI1NiBvZiB0aGUgY29uY2F0ZW5hdGlvbiBvZiBhIDMyIGJ5dGUgcmFuZG9tIHNhbHQgYW5kIGEgbm9ybWFsaXplZCBkb21haW4gbmFtZXRhZGRpdGlvbmFsUHJvcGVydGllc/Q=&quot;,\n  &quot;metadata&quot;: {\n    &quot;height&quot;: &quot;4253&quot;,\n    &quot;coreChainLockedHeight&quot;: 889435,\n    &quot;timeMs&quot;: &quot;1684440772828&quot;,\n    &quot;protocolVersion&quot;: 1\n  }\n}\n</code></pre></div></div>\n<h2 class=\"heading heading-2 header-scroll\" align=\"\"><div class=\"heading-anchor anchor waypoint\" id=\"getdocuments\"></div><div class=\"heading-text\"><div id=\"section-get-documents\" class=\"heading-anchor_backwardsCompatibility\"></div>getDocuments</div><a aria-label=\"Skip link to getDocuments\" class=\"heading-anchor-icon fa fa-anchor\" href=\"#getdocuments\"></a></h2>\n<p><strong>Returns</strong>: <a href=\"explanation-platform-protocol-document\" target=\"\" title=\"\">Document</a> information for the requested document(s)<br/>\n<strong>Parameters</strong>:</p>\n<blockquote class=\"callout callout_warn\" theme=\"\ud83d\udea7\"><h2 class=\"callout-heading\"><span class=\"callout-icon\">\ud83d\udea7</span><ul>\n<li>Parameter constraints</li>\n</ul></h2><p>The <button aria-label=\"Copy Code\" class=\"rdmd-code-copy fa\"></button><code class=\"rdmd-code lang- theme-light\" data-lang=\"\" name=\"\" tabindex=\"0\">where</code>, <button aria-label=\"Copy Code\" class=\"rdmd-code-copy fa\"></button><code class=\"rdmd-code lang- theme-light\" data-lang=\"\" name=\"\" tabindex=\"0\">order_by</code>, <button aria-label=\"Copy Code\" class=\"rdmd-code-copy fa\"></button><code class=\"rdmd-code lang- theme-light\" data-lang=\"\" name=\"\" tabindex=\"0\">limit</code>, <button aria-label=\"Copy Code\" class=\"rdmd-code-copy fa\"></button><code class=\"rdmd-code lang- theme-light\" data-lang=\"\" name=\"\" tabindex=\"0\">start_at</code>, and <button aria-label=\"Copy Code\" class=\"rdmd-code-copy fa\"></button><code class=\"rdmd-code lang- theme-light\" data-lang=\"\" name=\"\" tabindex=\"0\">start_after</code> parameters must comply with the limits defined on the <a href=\"reference-query-syntax\" target=\"\" title=\"\">Query Syntax</a> page.</p><p>Additionally, note that <button aria-label=\"Copy Code\" class=\"rdmd-code-copy fa\"></button><code class=\"rdmd-code lang- theme-light\" data-lang=\"\" name=\"\" tabindex=\"0\">where</code> and <button aria-label=\"Copy Code\" class=\"rdmd-code-copy fa\"></button><code class=\"rdmd-code lang- theme-light\" data-lang=\"\" name=\"\" tabindex=\"0\">order_by</code> must be <a href=\"https://tools.ietf.org/html/rfc7049\" target=\"\" title=\"\">CBOR</a> encoded.</p></blockquote>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n<div class=\"rdmd-table\"><div class=\"rdmd-table-inner\"><table><thead><tr><th>Name</th><th>Type</th><th>Required</th><th>Description</th></tr></thead><tbody><tr><td><button aria-label=\"Copy Code\" class=\"rdmd-code-copy fa\"></button><code class=\"rdmd-code lang- theme-light\" data-lang=\"\" name=\"\" tabindex=\"0\">data_contract_id</code></td><td>Bytes</td><td>Yes</td><td>A data contract <button aria-label=\"Copy Code\" class=\"rdmd-code-copy fa\"></button><code class=\"rdmd-code lang- theme-light\" data-lang=\"\" name=\"\" tabindex=\"0\">id</code></td></tr><tr><td><button aria-label=\"Copy Code\" class=\"rdmd-code-copy fa\"></button><code class=\"rdmd-code lang- theme-light\" data-lang=\"\" name=\"\" tabindex=\"0\">document_type</code></td><td>String</td><td>Yes</td><td>A document type defined by the data contract (e.g. <button aria-label=\"Copy Code\" class=\"rdmd-code-copy fa\"></button><code class=\"rdmd-code lang- theme-light\" data-lang=\"\" name=\"\" tabindex=\"0\">preorder</code> or <button aria-label=\"Copy Code\" class=\"rdmd-code-copy fa\"></button><code class=\"rdmd-code lang- theme-light\" data-lang=\"\" name=\"\" tabindex=\"0\">domain</code> for the DPNS contract)</td></tr><tr><td><button aria-label=\"Copy Code\" class=\"rdmd-code-copy fa\"></button><code class=\"rdmd-code lang- theme-light\" data-lang=\"\" name=\"\" tabindex=\"0\">where</code> *</td><td>Bytes</td><td>No</td><td>Where clause to filter the results (<strong>must be CBOR encoded</strong>)</td></tr><tr><td><button aria-label=\"Copy Code\" class=\"rdmd-code-copy fa\"></button><code class=\"rdmd-code lang- theme-light\" data-lang=\"\" name=\"\" tabindex=\"0\">order_by</code> *</td><td>Bytes</td><td>No</td><td>Sort records by the field(s) provided (<strong>must be CBOR encoded</strong>)</td></tr><tr><td><button aria-label=\"Copy Code\" class=\"rdmd-code-copy fa\"></button><code class=\"rdmd-code lang- theme-light\" data-lang=\"\" name=\"\" tabindex=\"0\">limit</code></td><td>Integer</td><td>No</td><td>Maximum number of results to return</td></tr><tr><td>----------</td><td></td><td></td><td></td></tr><tr><td><em>One</em> of the following:</td><td></td><td></td><td></td></tr><tr><td><button aria-label=\"Copy Code\" class=\"rdmd-code-copy fa\"></button><code class=\"rdmd-code lang- theme-light\" data-lang=\"\" name=\"\" tabindex=\"0\">start_at</code></td><td>Integer</td><td>No</td><td>Return records beginning with the index provided</td></tr><tr><td><button aria-label=\"Copy Code\" class=\"rdmd-code-copy fa\"></button><code class=\"rdmd-code lang- theme-light\" data-lang=\"\" name=\"\" tabindex=\"0\">start_after</code></td><td>Integer</td><td>No</td><td>Return records beginning after the index provided</td></tr><tr><td>----------</td><td></td><td></td><td></td></tr><tr><td><button aria-label=\"Copy Code\" class=\"rdmd-code-copy fa\"></button><code class=\"rdmd-code lang- theme-light\" data-lang=\"\" name=\"\" tabindex=\"0\">prove</code></td><td>Boolean</td><td>No</td><td>Set to <button aria-label=\"Copy Code\" class=\"rdmd-code-copy fa\"></button><code class=\"rdmd-code lang- theme-light\" data-lang=\"\" name=\"\" tabindex=\"0\">true</code> to receive a proof that contains the requested document(s)</td></tr></tbody></table></div></div>\n<blockquote class=\"callout callout_info\" theme=\"\ud83d\udcd8\"><h2 class=\"callout-heading empty\"><span class=\"callout-icon\">\ud83d\udcd8</span></h2><p><strong>Note</strong>: When requesting proofs, the data requested will be encoded as part of the proof in the response.</p></blockquote>\n<p><strong> Example Request and Response </strong></p>\n<div class=\"CodeTabs CodeTabs_initial theme-light\"><div class=\"CodeTabs-toolbar\" role=\"tablist\"><button aria-selected=\"true\" class=\"CodeTabs_active\" role=\"tab\" type=\"button\">JavaScript (dapi-client)</button><button aria-selected=\"false\" class=\"\" role=\"tab\" type=\"button\">JavaScript (dapi-grpc)</button><button aria-selected=\"false\" class=\"\" role=\"tab\" type=\"button\">Request (gRPCurl)</button></div><div class=\"CodeTabs-inner\" role=\"tabpanel\"><pre><button aria-label=\"Copy Code\" class=\"rdmd-code-copy fa\"></button><code class=\"rdmd-code lang-javascript theme-light\" data-lang=\"javascript\" name=\"JavaScript (dapi-client)\" tabindex=\"0\">const DAPIClient = require(&#x27;@dashevo/dapi-client&#x27;);\nconst Identifier = require(&#x27;@dashevo/dpp/lib/Identifier&#x27;);\nconst cbor = require(&#x27;cbor&#x27;);\nconst varint = require(&#x27;varint&#x27;);\n\nconst client = new DAPIClient();\n\nconst contractId = Identifier.from(&#x27;GWRSAVFMjXx8HpQFaNJMqBV7MBgMK4br5UESsB4S31Ec&#x27;);\nclient.platform.getDocuments(contractId, &#x27;domain&#x27;, { limit: 10 }).then((response) =&gt; {\n  for (const rawData of response.documents) {\n    // Strip off protocol version (leading varint) and decode\n    const documentBuffer = Buffer.from(rawData);\n    const protocolVersion = varint.decode(documentBuffer);\n    const document = cbor.decode(\n      documentBuffer.slice(varint.encodingLength(protocolVersion), documentBuffer.length),\n    );\n    console.log(document);\n  }\n});\n</code></pre><pre><button aria-label=\"Copy Code\" class=\"rdmd-code-copy fa\"></button><code class=\"rdmd-code lang-javascript theme-light\" data-lang=\"javascript\" name=\"JavaScript (dapi-grpc)\" tabindex=\"0\">const {\n  v0: { PlatformPromiseClient, GetDocumentsRequest },\n} = require(&#x27;@dashevo/dapi-grpc&#x27;);\nconst cbor = require(&#x27;cbor&#x27;);\nconst Identifier = require(&#x27;@dashevo/dpp/lib/Identifier&#x27;);\nconst varint = require(&#x27;varint&#x27;);\n\nconst platformPromiseClient = new PlatformPromiseClient(\n  &#x27;https://seed-1.testnet.networks.dash.org:1443&#x27;,\n);\n\nconst contractId = Identifier.from(&#x27;GWRSAVFMjXx8HpQFaNJMqBV7MBgMK4br5UESsB4S31Ec&#x27;);\nconst contractIdBuffer = Buffer.from(contractId);\nconst getDocumentsRequest = new GetDocumentsRequest();\nconst type = &#x27;domain&#x27;;\nconst limit = 10;\n\ngetDocumentsRequest.setDataContractId(contractIdBuffer);\ngetDocumentsRequest.setDocumentType(type);\n// getDocumentsRequest.setWhere(whereSerialized);\n// getDocumentsRequest.setOrderBy(orderBySerialized);\ngetDocumentsRequest.setLimit(limit);\n// getDocumentsRequest.setStartAfter(startAfter);\n// getDocumentsRequest.setStartAt(startAt);\n\nplatformPromiseClient.getDocuments(getDocumentsRequest)\n  .then((response) =&gt; {\n    for (const document of response.getDocumentsList()) {\n      // Strip off protocol version (leading varint) and decode\n      const documentBuffer = Buffer.from(document);\n      const protocolVersion = varint.decode(documentBuffer);\n      const decodedDocument = cbor.decode(\n        documentBuffer.slice(varint.encodingLength(protocolVersion), documentBuffer.length),\n      );\n      console.log(decodedDocument);      \n    }\n  })\n  .catch((e) =&gt; console.error(e));\n</code></pre><pre><button aria-label=\"Copy Code\" class=\"rdmd-code-copy fa\"></button><code class=\"rdmd-code lang-shell theme-light\" data-lang=\"shell\" name=\"Request (gRPCurl)\" tabindex=\"0\"># Request documents\n# `id` must be represented in base64\ngrpcurl -proto protos/platform/v0/platform.proto \\\n  -d &#x27;{\n    &quot;data_contract_id&quot;:&quot;5mjGWa9mruHnLBht3ntbfgodcSoJxA1XIfYiv1PFMVU=&quot;,\n    &quot;document_type&quot;:&quot;domain&quot;,\n    &quot;limit&quot;:1\n    }&#x27; \\\n  seed-1.testnet.networks.dash.org:1443 \\\n  org.dash.platform.dapi.v0.Platform/getDocuments\n</code></pre></div></div>\n<div class=\"CodeTabs CodeTabs_initial theme-light\"><div class=\"CodeTabs-toolbar\" role=\"tablist\"><button aria-selected=\"true\" class=\"CodeTabs_active\" role=\"tab\" type=\"button\">Response (JavaScript)</button><button aria-selected=\"false\" class=\"\" role=\"tab\" type=\"button\">Response (gRPCurl)</button></div><div class=\"CodeTabs-inner\" role=\"tabpanel\"><pre><button aria-label=\"Copy Code\" class=\"rdmd-code-copy fa\"></button><code class=\"rdmd-code lang-json theme-light\" data-lang=\"json\" name=\"Response (JavaScript)\" tabindex=\"0\">{\n  &quot;$id&quot;: &quot;&lt;Buffer 01 a0 7c 69 43 82 cf fe 93 97 be c9 f4 be cd 67 81 8f 60 d2 a7 56 48 08 11 80 49 84 0b 2e 2c 5d&gt;&quot;,\n  &quot;$type&quot;: &quot;domain&quot;,\n  &quot;label&quot;: &quot;Dash01&quot;,\n  &quot;records&quot;: {\n    &quot;dashUniqueIdentityId&quot;: &quot;&lt;Buffer f5 50 ed 37 1a 12 3f 54 00 59 31 84 f7 f7 37 f1 f4 b1 5d 05 6f 9c a8 0e 5f 00 52 82 08 77 7c 4a&gt;&quot;\n  },\n  &quot;$ownerId&quot;: &quot;&lt;Buffer f5 50 ed 37 1a 12 3f 54 00 59 31 84 f7 f7 37 f1 f4 b1 5d 05 6f 9c a8 0e 5f 00 52 82 08 77 7c 4a&gt;&quot;,\n  &quot;$revision&quot;: 1,\n  &quot;preorderSalt&quot;: &quot;&lt;Buffer 2c b4 1b e9 f4 40 03 9b 47 2f 31 74 46 df 7f 4f 43 fe 14 80 be ca 84 0d 63 0f a6 65 23 b9 9c a1&gt;&quot;,\n  &quot;subdomainRules&quot;: { &quot;allowSubdomains&quot;: false },\n  &quot;$dataContractId&quot;: &quot;&lt;Buffer e6 68 c6 59 af 66 ae e1 e7 2c 18 6d de 7b 5b 7e 0a 1d 71 2a 09 c4 0d 57 21 f6 22 bf 53 c5 31 55&gt;&quot;,\n  &quot;normalizedLabel&quot;: &quot;dash01&quot;,\n  &quot;normalizedParentDomainName&quot;: &quot;dash&quot;\n}\n</code></pre><pre><button aria-label=\"Copy Code\" class=\"rdmd-code-copy fa\"></button><code class=\"rdmd-code lang-json theme-light\" data-lang=\"json\" name=\"Response (gRPCurl)\" tabindex=\"0\">{\n  &quot;documents&quot;: [\n    &quot;AatjJGlkWCACod79ik2tILNnybx5VepoaX2cceXDSogwSgxdWi9zYmUkdHlwZWZkb21haW5lbGFiZWx0Yzg4OWMyM2FiY2ZkYzU3NGNmZWJncmVjb3Jkc6FzZGFzaEFsaWFzSWRlbnRpdHlJZFggMBLBm5jsADOt2zbNZLf1EGcPKjUaQwS19plBRChu/axoJG93bmVySWRYIDASwZuY7AAzrds2zWS39RBnDyo1GkMEtfaZQUQobv2saSRyZXZpc2lvbgFscHJlb3JkZXJTYWx0WCAkJyav6iQVX7hFrUFagKC+xddHsyA5Wo/NdvejXt6aSG5zdWJkb21haW5SdWxlc6FvYWxsb3dTdWJkb21haW5z9W8kZGF0YUNvbnRyYWN0SWRYIOZoxlmvZq7h5ywYbd57W34KHXEqCcQNVyH2Ir9TxTFVb25vcm1hbGl6ZWRMYWJlbHRjODg5YzIzYWJjZmRjNTc0Y2ZlYngabm9ybWFsaXplZFBhcmVudERvbWFpbk5hbWVg&quot;\n  ],\n  &quot;metadata&quot;: {\n    &quot;height&quot;: &quot;4254&quot;,\n    &quot;coreChainLockedHeight&quot;: 889435,\n    &quot;timeMs&quot;: &quot;1684440970270&quot;,\n    &quot;protocolVersion&quot;: 1\n  }\n}\n</code></pre></div></div>\n<h2 class=\"heading heading-2 header-scroll\" align=\"\"><div class=\"heading-anchor anchor waypoint\" id=\"waitforstatetransitionresult\"></div><div class=\"heading-text\"><div id=\"section-wait-for-state-transition-result\" class=\"heading-anchor_backwardsCompatibility\"></div>waitForStateTransitionResult</div><a aria-label=\"Skip link to waitForStateTransitionResult\" class=\"heading-anchor-icon fa fa-anchor\" href=\"#waitforstatetransitionresult\"></a></h2>\n<p><strong>Returns</strong>: The state transition hash and either a proof that the state transition was confirmed in a block or an error.<br/>\n<strong>Parameters</strong>:</p>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n<div class=\"rdmd-table\"><div class=\"rdmd-table-inner\"><table><thead><tr><th>Name</th><th>Type</th><th>Required</th><th>Description</th></tr></thead><tbody><tr><td><button aria-label=\"Copy Code\" class=\"rdmd-code-copy fa\"></button><code class=\"rdmd-code lang- theme-light\" data-lang=\"\" name=\"\" tabindex=\"0\">state_transition_hash</code></td><td>Bytes</td><td>Yes</td><td>Hash of the state transition</td></tr><tr><td><button aria-label=\"Copy Code\" class=\"rdmd-code-copy fa\"></button><code class=\"rdmd-code lang- theme-light\" data-lang=\"\" name=\"\" tabindex=\"0\">prove</code></td><td>Boolean</td><td>Yes</td><td>Set to <button aria-label=\"Copy Code\" class=\"rdmd-code-copy fa\"></button><code class=\"rdmd-code lang- theme-light\" data-lang=\"\" name=\"\" tabindex=\"0\">true</code> to request a proof</td></tr></tbody></table></div></div>\n<blockquote class=\"callout callout_info\" theme=\"\ud83d\udcd8\"><h2 class=\"callout-heading empty\"><span class=\"callout-icon\">\ud83d\udcd8</span></h2><p><strong>Note</strong>: When requesting proofs, the data requested will be encoded as part of the proof in the response.</p></blockquote>\n<p><strong> Example Request</strong></p>\n<div class=\"rdmd-html\"><!--\nJavaScript (dapi-client) example (old)\nconst DAPIClient = require('@dashevo/dapi-client');\nconst DashPlatformProtocol = require('@dashevo/dpp');\nconst crypto = require('crypto');\n\nconst client = new DAPIClient();\nconst dpp = new DashPlatformProtocol();\n\n// Replace with your own state transition object before running\nconst stateTransitionObject = {\n  protocolVersion: 0,\n  type: 0,\n  signature: 'HxAipUsLWQBE++C1suSRNQiQh91rI1LZbblvQhk2erUaIvRneAagxGYYsXXYNvEeO+lBzlF1a9KHGGTHgnO/8Ts=',\n  signaturePublicKeyId: 0,\n  dataContract: {\n    protocolVersion: 0,\n    '$id': 'CMc7RghKkHeHtFdwfSX5Hzy7CUdpCEJnwsbfHdsbmJ32',\n    '$schema': 'https://schema.dash.org/dpp-0-4-0/meta/data-contract',\n    ownerId: '8Z3ps3tNoGoPEDYerUNCd4yi7zDwgBh2ejgSMExxvkfD',\n    documents: {\n      note: {\n        properties: { message: { type: 'string' } },\n        additionalProperties: false,\n      },\n    },\n  },\n  entropy: '+RqUArypdL8f/gCMAo4b6c3CoQvxHzsQG0BdYrT5QT0=',\n};\n\n// Convert signature and entropy to buffer\nstateTransitionObject.signature = Buffer.from(stateTransitionObject.signature, 'base64');\nstateTransitionObject.entropy = Buffer.from(stateTransitionObject.entropy, 'base64');\n\ndpp.stateTransition.createFromObject(stateTransitionObject, { skipValidation: true })\n  .then((stateTransition) => {\n    //  Calculate state transition hash\n    const hash = crypto.createHash('sha256')\n      .update(stateTransition.toBuffer())\n      .digest();\n\n    console.log(`Requesting proof of state transition with hash:\\n\\t${hash.toString('hex')}`);\n\n    client.platform.waitForStateTransitionResult(hash, { prove: true })\n      .then((response) => {\n        console.log(response);\n      });\n  });\n-->\n\n<!--\nJavaScript (dapi-grpc) example (old)\nconst {\n  v0: {\n    PlatformPromiseClient,\n    WaitForStateTransitionResultRequest,\n  },\n} = require('@dashevo/dapi-grpc');\nconst DashPlatformProtocol = require('@dashevo/dpp');\nconst crypto = require('crypto');\n\nconst platformPromiseClient = new PlatformPromiseClient(\n  'https://seed-1.testnet.networks.dash.org:1443',\n);\n\nconst dpp = new DashPlatformProtocol();\n\n// Replace with your own state transition object before running\nconst stateTransitionObject = {\n  protocolVersion: 0,\n  type: 0,\n  signature: 'HxAipUsLWQBE++C1suSRNQiQh91rI1LZbblvQhk2erUaIvRneAagxGYYsXXYNvEeO+lBzlF1a9KHGGTHgnO/8Ts=',\n  signaturePublicKeyId: 0,\n  dataContract: {\n    protocolVersion: 0,\n    '$id': 'CMc7RghKkHeHtFdwfSX5Hzy7CUdpCEJnwsbfHdsbmJ32',\n    '$schema': 'https://schema.dash.org/dpp-0-4-0/meta/data-contract',\n    ownerId: '8Z3ps3tNoGoPEDYerUNCd4yi7zDwgBh2ejgSMExxvkfD',\n    documents: {\n      note: {\n        properties: { message: { type: 'string' } },\n        additionalProperties: false,\n      },\n    },\n  },\n  entropy: '+RqUArypdL8f/gCMAo4b6c3CoQvxHzsQG0BdYrT5QT0=',\n};\n\n// Convert signature and entropy to buffer\nstateTransitionObject.signature = Buffer.from(stateTransitionObject.signature, 'base64');\nstateTransitionObject.entropy = Buffer.from(stateTransitionObject.entropy, 'base64');\n\ndpp.stateTransition.createFromObject(stateTransitionObject, { skipValidation: true })\n  .then((stateTransition) => {\n    //  Calculate state transition hash\n    const hash = crypto.createHash('sha256')\n      .update(stateTransition.toBuffer())\n      .digest();\n\n    const waitForStateTransitionResultRequest = new WaitForStateTransitionResultRequest();\n    waitForStateTransitionResultRequest.setStateTransitionHash(hash);\n    waitForStateTransitionResultRequest.setProve(true);\n\n    console.log(`Requesting proof of state transition with hash:\\n\\t${hash.toString('hex')}`);\n\n    platformPromiseClient.waitForStateTransitionResult(waitForStateTransitionResultRequest)\n      .then((response) => {\n        const rootTreeProof = Buffer.from(response.getProof().getRootTreeProof());\n        const storeTreeProof = Buffer.from(response.getProof().getStoreTreeProof());\n        console.log(`Root tree proof: ${rootTreeProof.toString('hex')}`);\n        console.log(`Store tree proof: ${storeTreeProof.toString('hex')}`);\n      })\n  \t\t.catch((e) => console.error(e));\n  });\n-->\n\n<!--\ngRPCurl example (old)\n# `state_transition_hash` must be represented in base64\n# Replace `state_transition_hash` with your own before running\ngrpcurl -proto protos/platform/v0/platform.proto \\\n  -d '{\n    \"state_transition_hash\":\"wEiwFu9WvAtylrwTph5v0uXQm743N+75C+C9DhmZBkw=\",\n    \"prove\": \"true\"\n    }' \\\n  seed-1.testnet.networks.dash.org:1443 \\\n  org.dash.platform.dapi.v0.Platform/waitForStateTransitionResult\n--></div>\n<div class=\"CodeTabs CodeTabs_initial theme-light\"><div class=\"CodeTabs-toolbar\" role=\"tablist\"><button aria-selected=\"true\" class=\"CodeTabs_active\" role=\"tab\" type=\"button\">JavaScript (dapi-client)</button><button aria-selected=\"false\" class=\"\" role=\"tab\" type=\"button\">Request (gRPCurl)</button></div><div class=\"CodeTabs-inner\" role=\"tabpanel\"><pre><button aria-label=\"Copy Code\" class=\"rdmd-code-copy fa\"></button><code class=\"rdmd-code lang-javascript theme-light\" data-lang=\"javascript\" name=\"JavaScript (dapi-client)\" tabindex=\"0\">const DAPIClient = require(&#x27;@dashevo/dapi-client&#x27;);\n\nconst client = new DAPIClient();\n\n// Replace &lt;YOUR_STATE_TRANSITION_HASH&gt; with your actual hash\nconst hash = &lt;YOUR_STATE_TRANSITION_HASH&gt;;\nclient.platform.waitForStateTransitionResult(hash, { prove: true })\n  .then((response) =&gt; {\n    console.log(response);\n  });\n\n</code></pre><pre><button aria-label=\"Copy Code\" class=\"rdmd-code-copy fa\"></button><code class=\"rdmd-code lang-shell theme-light\" data-lang=\"shell\" name=\"Request (gRPCurl)\" tabindex=\"0\"># Replace `your_state_transition_hash` with your own before running\n# `your_state_transition_hash` must be represented in base64\n#    Example: wEiwFu9WvAtylrwTph5v0uXQm743N+75C+C9DhmZBkw=\ngrpcurl -proto protos/platform/v0/platform.proto \\\n  -d &#x27;{\n    &quot;state_transition_hash&quot;:your_state_transition_hash,\n    &quot;prove&quot;: &quot;true&quot;\n    }&#x27; \\\n  seed-1.testnet.networks.dash.org:1443 \\\n  org.dash.platform.dapi.v0.Platform/waitForStateTransitionResult\n</code></pre></div></div>\n<div class=\"rdmd-html\"><!--\ndapi-client\n{\n  proof: {\n    rootTreeProof: <Buffer 01 00 00 00 03 26 e0 35 e0 31 82 7e 7c 27 b0 91 23 41 ed d2 11 bf 3b 90 54 70 11 2c 68 5a 8e 76 8c 68 bb 39 21 3d cf 46 6d 09 d0 7a 28 e3 e9 0b 2b 0e ... 17 more bytes>,\n    storeTreeProof: <Buffer 01 0b ee 31 ce ca 2a bd 44 6a db d4 9f 13 4a 7d 70 25 96 a9 b9 02 6e c4 e1 90 95 f7 a1 b4 c9 de 1f e4 63 e6 ce f7 58 3a 5b c3 10 01 78 9b 4f 98 9a c9 ... 526 more bytes>\n  }\n}\n-->\n<!--\ndapi-grpc\nRequesting proof of state transition with hash:\n        8ae93b89c272455f3ce8d01dba99a3a28c9550262a602c6ba44de08e545d3aa9\nRoot tree proof: 010000000326e035e031827e7c27b0912341edd211bf3b905470112c685a8e768c68bb39213dcf466d09d07a28e3e90b2b0e1d1510dede30214f68e32f8cf498220101\nStore tree proof: 010bee31ceca2abd446adbd49f134a7d702596a9b9026ec4e19095f7a1b4c9de1fe463e6cef7583a5bc31001789b4f989ac9f8f524f1247fed372502d8c54a3c026072d5239f074422621673c250d1c74eadbb304a10013fb54a99ef641b9a7585d6d28dd443875e435a35022d92a0711f56ae23bc13f4a630a1455970451e3f1001fe2b060fca69ce2eb3d784cec28c0f575690f131026df252af068635bdf08f5448ea67c23d9a9a02831001a7df0a9f392682d7d7d0a29bd43d932c16b0d6530320a8b7df4cadb6cdfd5b5d1bb31cbb488d241e91d60cc1341cd686a3fbb6291f19e800a5632469645820a8b7df4cadb6cdfd5b5d1bb31cbb488d241e91d60cc1341cd686a3fbb6291f196724736368656d61783468747470733a2f2f736368656d612e646173682e6f72672f6470702d302d342d302f6d6574612f646174612d636f6e7472616374676f776e657249645820703796bfd3e2bbd54505a8e04929bb05b8aecfb1cd5c013ef8a8b84511770e0c69646f63756d656e7473a1646e6f7465a26a70726f70657274696573a1676d657373616765a1647479706566737472696e67746164646974696f6e616c50726f70657274696573f46f70726f746f636f6c56657273696f6e001001d94cd40044b8485e962d80e57c1992c77a182a1611111102abe7e3f7231ed71b8c4fd7ee09d4a1f970a51cd4100139312feadce145313ef34f720e940892d0ed2405111102245c6aaaf192b51207333be85ab77c9c9393af47100128ef7d4479e4f488373d92280fe8e52a9a48a6621111\n-->\n<!--\ngRPCurl\n{\n  \"proof\": {\n    \"merkleProof\": \"AQAAAAAAAAJHAV8NeFRgf0cWRiCIIVsbJcNs+bALwShVQEkXV2jRCueIAkeoHTKeU60+Jm2oiHbGSkOL8ui06Nj27SLz2raMF29iEAHKnCrDvO67hcJV79tfQwqQSFcxJOek9Fa/x3oYvwQrQQL8lxVOSAkZSC1qhI8LJa6PtR+u8TifMMmRCRY2dXrSUBABihjPBDgD9SM/d9JgWkYyT+sUp4FdgotmwHhZIB1rJVUCkaeftxRkQ/B0FU26ojDJirY/SwZ8RcU1/3pnbJbA+5EQBCBkeRNzJuVLjOKnDOmG48wnSzjHg5lLdlA5JSBD79rQxQAFAgEBAAAYUfu7+1iqqIwjkszndZ6Vm8pli6pjt4XxvvgKCcE3ygI+G8nIsflGKoZQOaWGcFBmXDzAwJqjGlMxSIWNSEgoQBACAQd7xuP4BzKoaf75MNyQQC6Q7e94Vg2IdQe2LFJysA4QAZ2mq+ad/rNJ7n2fPiJgHi4NMT9Wht6Kb5J8qF20hajJEQKz2VnGsgYNwMjY9kadWb63Tjk3nTqFttgjLnoz4PCpQBABpdWVJ9sfU+o+OEcUuFcDOV+y4gYFoao3kVNLZ+Yz7Y4RAuVHBoF21TyNc9DUDHmAfcaJf6K+/VzqIzfnJ7iGqXN+EAGvNlkFsWw+DjFg+MLjzo2MzUaWk7sA63+rG3FQJ7LO2hERERECPImih8uZnpEfew+qLeKrdEig5TR6g5VsfuHI9U2WuvsQAU7qdWenHDisDf3TNzJQytKJYaeyhmy2LEo11zZVwsoREQIAAAAAAAAA/wMBAAD6APcBAAAApGJpZFggZHkTcyblS4zipwzphuPMJ0s4x4OZS3ZQOSUgQ+/a0MVnYmFsYW5jZRo7mmxAaHJldmlzaW9uAGpwdWJsaWNLZXlzgqZiaWQAZGRhdGFYIQLlz7I9IuqDAf1fp2xiyvGiApsvgANo2ldfmrWv6MsfG2R0eXBlAGdwdXJwb3NlAGhyZWFkT25sefRtc2VjdXJpdHlMZXZlbACmYmlkAWRkYXRhWCECrq7odM9OoHGEyM1D19ZAaEPf50OKLwsxL2D4SpnLZllkdHlwZQBncHVycG9zZQBocmVhZE9ubHn0bXNlY3VyaXR5TGV2ZWwCAAEAAAAAAAAA0QQBAAAkAgEgbaBpE46QX8+EXS6Sl5CG4r+JuiXVDhxZeZy/TS8qnQEAUw2uiB7scatAs99mQfB5VfVb0lMSywDMHXpmUgNfONsC4OEPflWGlZAqBSOhaKD0/SfPJHbOOMEfCjTtBV1jjgwQARdKA3tf2c8gP3H7tRKcRMHXfljTH/4L8L63tbZk5FX/EQL+TedZ8kFHQEuNY8e9pfmaLI36Y7rHe1hAjVBSh9U95BABfPfYq74T0N0ygKE4spKvSQkekrnH0Ge8Ot0FEDsq2rcR\",\n    \"signatureLlmqHash\": \"AAAA1h0X9yUNsXpD0/iKlsPvVb+VezkZAIkQIzmGqoc=\",\n    \"signature\": \"jeByZ8qlZvID/C3LVVy/mZGHlRu2QhN3MZO09hCOjAH0gn1tqrAX6BXaJf6qRLw9APv0+nInObRF3JhstvsByPK8QOHCCl9M3NpcgI/HCECpqMMG8S9DPtJYI6HwQO5I\"\n  },\n  \"metadata\": {\n    \"height\": \"1221\",\n    \"coreChainLockedHeight\": 802939\n  }\n}\n--></div>\n<h1 class=\"heading heading-1 header-scroll\" align=\"\"><div class=\"heading-anchor anchor waypoint\" id=\"deprecated-endpoints\"></div><div class=\"heading-text\"><div id=\"section-deprecated-endpoints\" class=\"heading-anchor_backwardsCompatibility\"></div>Deprecated Endpoints</div><a aria-label=\"Skip link to Deprecated Endpoints\" class=\"heading-anchor-icon fa fa-anchor\" href=\"#deprecated-endpoints\"></a></h1>\n<p>No endpoints were deprecated in Dash Platform v0.24, but the previous version of documentation can be <a href=\"https://dashplatform.readme.io/v0.23.0/docs/reference-dapi-endpoints-platform-endpoints\" target=\"\" title=\"\">viewed here</a>.</p>\n<h1 class=\"heading heading-1 header-scroll\" align=\"\"><div class=\"heading-anchor anchor waypoint\" id=\"code-reference\"></div><div class=\"heading-text\"><div id=\"section-code-reference\" class=\"heading-anchor_backwardsCompatibility\"></div>Code Reference</div><a aria-label=\"Skip link to Code Reference\" class=\"heading-anchor-icon fa fa-anchor\" href=\"#code-reference\"></a></h1>\n<p>Implementation details related to the information on this page can be found in:</p>\n<ul>\n<li>The <a href=\"https://github.com/dashevo/platform/tree/master/packages/dapi\" target=\"\" title=\"\">Platform repository</a> <button aria-label=\"Copy Code\" class=\"rdmd-code-copy fa\"></button><code class=\"rdmd-code lang- theme-light\" data-lang=\"\" name=\"\" tabindex=\"0\">packages/dapi/lib/grpcServer/handlers/core</code> folder</li>\n<li>The <a href=\"https://github.com/dashevo/platform/tree/master/packages/dapi-grpc\" target=\"\" title=\"\">Platform repository</a> <button aria-label=\"Copy Code\" class=\"rdmd-code-copy fa\"></button><code class=\"rdmd-code lang- theme-light\" data-lang=\"\" name=\"\" tabindex=\"0\">packages/dapi-grpc/protos</code> folder</li>\n</ul>"
}