{
 "parentDoc": null, 
 "excerpt": "", 
 "api": {
  "url": "", 
  "params": [], 
  "method": "get", 
  "auth": "required", 
  "results": {
   "codes": [
    {
     "status": 200, 
     "code": "{}", 
     "name": "", 
     "language": "json"
    }, 
    {
     "status": 400, 
     "code": "{}", 
     "name": "", 
     "language": "json"
    }
   ]
  }
 }, 
 "updatedAt": "2020-03-27T14:35:04.746Z", 
 "id": "5e57f67f1dc8d20057288ae4", 
 "sync_unique": "", 
 "isApi": false, 
 "createdAt": "2020-02-27T01:32:43.207Z", 
 "category": "5d6583437fe5090066c64397", 
 "title": "Data Contracts", 
 "next": {
  "description": "", 
  "pages": [
   {
    "type": "url", 
    "name": "Data Contract Explanation", 
    "value": "https://dashplatform.readme.io/docs/explanation-platform-protocol-data-contract", 
    "icon": "file-text-o"
   }
  ]
 }, 
 "version": "5d2374d8d238fb004e8f9243", 
 "hidden": false, 
 "type": "basic", 
 "metadata": {
  "image": [], 
  "description": "", 
  "title": ""
 }, 
 "body": "# Overview\n\nData contracts define the schema (structure) of data an application will store on Dash Platform. Contracts are described using [JSON Schema](https://json-schema.org/understanding-json-schema/) which allows the platform to validate the contract-related data submitted to it.\n\nThe following sections provide details that developers need to construct valid contracts: [documents](#section-documents) and [definitions](#section-definitions). All data contracts must define one or more documents, whereas definitions are optional and may not be used for simple contracts.\n\n# General Constraints\n[block:callout]\n{\n  \"type\": \"warning\",\n  \"body\": \"There are a variety of constraints currently defined for performance and security reasons. The following constraints are applicable to all aspects of data contracts. Unless otherwise noted, these constraints are defined in the platform's JSON Schema rules (e.g. [js-dpp data contract meta schema](https://github.com/dashevo/js-dpp/blob/master/schema/meta/data-contract.json)).\",\n  \"title\": \"Constraints\"\n}\n[/block]\n## Keyword\n\n| Keyword | Constraint |\n| - | - |\n| `default` | Restricted - cannot be used (defined in DPP logic) |\n| `propertyNames` | Restricted - cannot be used (defined in DPP logic) |\n| `uniqueItems: true` | `maxItems` must be defined (maximum: 100000) |\n| `pattern: <something>` | `maxLength` must be defined (maximum: 50000) |\n| `format: <something>` | `maxLength` must be defined (maximum: 100000) |\n| `$ref: <something>` | `$ref` can only reference `definitions` - <br> remote references not supported |\n\n## Data Size\nAdditionally, there are several constraints limiting the overall size of data contracts and related data as defined here:\n\n**Note:** These constraints are defined in the Dash Platform Protocol logic (not in JSON Schema).\n\n| Description | Constraint |\n| - | - |\n| Maximum size of serialized data contract | 15 KB |\n| Maximum size of CBOR-encoded data | 16 KB |\n\n# Documents\nThe `documents` object defines each type of document required by the data contract. At a minimum, a document must consist of 1 or more properties. Documents may also define [indices](#section-document-indices) and a list of [required properties](#section-required-properties).\n\nThe following example shows a minimal `documents` object defining a single document (`note`) that has one property (`message`).\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"{\\n  \\\"note\\\": {\\n    \\\"properties\\\": {\\n      \\\"message\\\": {\\n        \\\"type\\\": \\\"string\\\"\\n      }\\n    },\\n    \\\"additionalProperties\\\": false\\n  }\\n}\",\n      \"language\": \"json\",\n      \"name\": \"Minimal document definition\"\n    }\n  ]\n}\n[/block]\n## Document Properties\n\nThe `properties` object defines each field that will be used by a document. Each field consists of an object that, at a minimum, must define its data `type` (`string`, `number`, `integer`, `boolean`, `array`, `object`). Fields may also apply a variety of optional JSON Schema constraints related to the format, range, length, etc. of the data.\n[block:callout]\n{\n  \"type\": \"info\",\n  \"title\": \"JSON Schema\",\n  \"body\": \"A full explanation of the capabilities of JSON Schema is beyond the scope of this document. For more information regarding its data types and the constraints that can be applied, please refer to the [JSON Schema reference](https://json-schema.org/understanding-json-schema/reference/index.html) documentation.\"\n}\n[/block]\n### Property Constraints\nThere are a variety of constraints currently defined for performance and security reasons. \n\n| Description | Value |\n| - | - |\n| Minimum number of properties | 1 |\n| Maximum number of properties | 100 |\n| Minimum property name length | 1 |\n| Maximum property name length | 63 |\n| Property name first/last characters | ** Alphanumeric only (`A-Z`, `a-z`, `0-9`)**|\n| Property name characters | Alphanumeric (`A-Z`, `a-z`, `0-9`)<br>Hypen (`-`) <br>Underscore (`_`) |\n\n### Required Properties (Optional)\n\nEach document may have some fields that are required for the document to be valid and other fields that are optional. Required fields are defined via the `required` array which consists of a list of the field names from the document that must be present. The `required` object should be excluded for documents without any required properties.\n\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"\\\"required\\\": [\\n  \\\"<field name a>\\\",\\n  \\\"<field name b>\\\"\\n]\",\n      \"language\": \"json\",\n      \"name\": \"Syntax\"\n    }\n  ]\n}\n[/block]\n\n**Example**\nThe following example (excerpt from the DPNS contract's `domain` document) demonstrates a document that has 6 required fields:\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"\\\"required\\\": [\\n  \\\"nameHash\\\",\\n  \\\"label\\\",\\n  \\\"normalizedLabel\\\",\\n  \\\"normalizedParentDomainName\\\",\\n  \\\"preorderSalt\\\",\\n  \\\"records\\\"\\n],\",\n      \"language\": \"json\"\n    }\n  ]\n}\n[/block]\n## Document Indices\n[block:callout]\n{\n  \"type\": \"info\",\n  \"body\": \"The `indices` object should be excluded for documents that do not require indices.\"\n}\n[/block]\nDocument indices may be defined if indexing on document fields is required. \n\nThe `indices` array consists of:\n - One or more objects that each contain:\n  - A `properties` array composed of a `<field name: sort order>` object for each document field that is part of the index (sort order: `asc` or `desc`)\n  - An (optional) `unique` element that determines if duplicate values are allowed for the document\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"\\\"indices\\\": [ \\n  {\\n    \\\"properties\\\": [\\n      { \\\"<field name a>\\\": \\\"<asc\\\"|\\\"desc>\\\" },\\n      { \\\"<field name b>\\\": \\\"<asc\\\"|\\\"desc>\\\" }\\n    ], \\n    \\\"unique\\\": true|false\\n  },\\n  {\\n    \\\"properties\\\": [\\n      { \\\"<field name c>\\\": \\\"<asc\\\"|\\\"desc>\\\" },\\n    ], \\n  }    \\n]\",\n      \"language\": \"json\",\n      \"name\": \"Syntax\"\n    }\n  ]\n}\n[/block]\n### Index Constraints\n[block:callout]\n{\n  \"type\": \"warning\",\n  \"body\": \"For performance and security reasons, Evonet places the following constraints on indices. These constraints are subject to change over time.\"\n}\n[/block]\n| Description | Value |\n| - | - |\n| Maximum number of indices | 10 |\n| Maximum number of unique indices | 3 |\n| Maximum number of properties in a single index | 10 |\n\n**Example**\nThe following example (excerpt from the DPNS contract's `preorder` document) creates an index on `saltedDomainHash` that also enforces uniqueness across all documents of that type:\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"\\\"indices\\\": [\\n  {\\n    \\\"properties\\\": [\\n      { \\\"saltedDomainHash\\\": \\\"asc\\\" }\\n    ],\\n    \\\"unique\\\": true\\n  }\\n],\",\n      \"language\": \"json\",\n      \"name\": \"Example indices\"\n    }\n  ]\n}\n[/block]\n## Full Document Syntax\nThis example syntax shows the structure of a documents object that defines two documents, an index, and a required field.\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"{\\n  \\\"<document name a>\\\": {\\n    \\\"properties\\\": {\\n      \\\"<field name b>\\\": {\\n        \\\"type\\\": \\\"<field data type>\\\"\\n      },\\n      \\\"<field name c>\\\": {\\n        \\\"type\\\": \\\"<field data type>\\\"\\n      },\\n    },\\n    \\\"indices\\\": [\\n      {\\n        \\\"properties\\\": [\\n          {\\n            \\\"<field name c>\\\": \\\"<asc|desc>\\\"\\n          }\\n        ],\\n        \\\"unique\\\": true|false\\n      },\\n    ],\\n    \\\"required\\\": [\\n      \\\"<field name c>\\\"\\n    ]\\n    \\\"additionalProperties\\\": false\\n  },\\n  \\\"<document name x>\\\": {\\n    \\\"properties\\\": {\\n      \\\"<property name y>\\\": {\\n        \\\"type\\\": \\\"<property data type>\\\"\\n      },\\n      \\\"<property name z>\\\": {\\n        \\\"type\\\": \\\"<property data type>\\\"\\n      },\\n    },\\n    \\\"additionalProperties\\\": false\\n  },    \\n}\",\n      \"language\": \"json\"\n    }\n  ]\n}\n[/block]\n# Definitions\nThe optional `definitions` object enables definition of aspects of a schema that are used in multiple places. This is done using the JSON Schema support for [reuse](https://json-schema.org/understanding-json-schema/structuring.html#reuse). Items defined in `definitions` may then be referenced when defining `documents` through use of the `$ref` keyword.\n[block:callout]\n{\n  \"type\": \"info\",\n  \"body\": \"Properties defined in the `definitions` object must meet the same criteria as those defined in the `documents` object.\"\n}\n[/block]\n\n[block:callout]\n{\n  \"type\": \"danger\",\n  \"title\": \"Remote references blocked\",\n  \"body\": \"Data contracts can only use the `$ref` keyword to reference their own `definitions`. Referencing external definitions is not supported by the platform protocol.\"\n}\n[/block]\n**Example**\nThe following example shows a definition for a `message` object consisting of two properties:\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"{\\n  // Preceeding content truncated ...\\n  \\\"definitions\\\": {\\n    \\\"message\\\": {\\n      \\\"type\\\": \\\"object\\\",\\n      \\\"properties\\\": {\\n        \\\"timestamp\\\": {\\n          \\\"type\\\": \\\"number\\\"\\n        },\\n        \\\"description\\\": {\\n          \\\"type\\\": \\\"string\\\"\\n        }\\n      },\\n      \\\"additionalProperties\\\": false\\n    }\\n  }\\n}\",\n      \"language\": \"json\",\n      \"name\": \"Example definitions\"\n    }\n  ]\n}\n[/block]\n\n[block:callout]\n{\n  \"type\": \"info\",\n  \"body\": \"In the `js-dpp` reference implementation, definitions are added to a data contract via the `.setDefinitions()` method (e.g. `myContract.setDefinitions({\\\"message\\\": { ... }})`. This must be done prior to broadcasting the contract for registration.\",\n  \"title\": \"Adding definitions with js-dpp\"\n}\n[/block]\n# Additional Properties\nAlthough JSON Schema allows additional, undefined properties [by default](https://json-schema.org/understanding-json-schema/reference/object.html?#properties), they are not allowed in Dash Platform data contracts. Data contract validation will fail if they are not explicitly forbidden using the `additionalProperties` keyword anywhere `properties` are defined.\n\nInclude the following at the same level as the `properties` keyword to ensure proper validation:\n```json\n\"additionalProperties\": false\n```", 
 "link_external": false, 
 "body_html": "<div class=\"magic-block-textarea\"><h1 class=\"header-scroll\"><div class=\"anchor waypoint\" id=\"section-overview\"></div>Overview<a class=\"fa fa-anchor\" href=\"#section-overview\"></a></h1>\n<p>Data contracts define the schema (structure) of data an application will store on Dash Platform. Contracts are described using <a href=\"https://json-schema.org/understanding-json-schema/\">JSON Schema</a> which allows the platform to validate the contract-related data submitted to it.</p>\n<p>The following sections provide details that developers need to construct valid contracts: <a href=\"#section-documents\">documents</a> and <a href=\"#section-definitions\">definitions</a>. All data contracts must define one or more documents, whereas definitions are optional and may not be used for simple contracts.</p>\n<h1 class=\"header-scroll\"><div class=\"anchor waypoint\" id=\"section-general-constraints\"></div>General Constraints<a class=\"fa fa-anchor\" href=\"#section-general-constraints\"></a></h1>\n\n</div>\n<div class=\"magic-block-callout type-warning \">\n\t<h3><i title=\"Warning\" class=\"fa fa-exclamation-circle\"></i>Constraints\n\t</h3>\n\t<div class=\"callout-body\"><p>There are a variety of constraints currently defined for performance and security reasons. The following constraints are applicable to all aspects of data contracts. Unless otherwise noted, these constraints are defined in the platform&#39;s JSON Schema rules (e.g. <a href=\"https://github.com/dashevo/js-dpp/blob/master/schema/meta/data-contract.json\">js-dpp data contract meta schema</a>).</p>\n\n\t</div>\n</div>\n<div class=\"magic-block-textarea\"><h2 class=\"header-scroll\"><div class=\"anchor waypoint\" id=\"section-keyword\"></div>Keyword<a class=\"fa fa-anchor\" href=\"#section-keyword\"></a></h2>\n<div class=\"marked-table\"><table>\n<thead>\n<tr>\n<th>Keyword</th>\n<th>Constraint</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>default</code></td>\n<td>Restricted - cannot be used (defined in DPP logic)</td>\n</tr>\n<tr>\n<td><code>propertyNames</code></td>\n<td>Restricted - cannot be used (defined in DPP logic)</td>\n</tr>\n<tr>\n<td><code>uniqueItems: true</code></td>\n<td><code>maxItems</code> must be defined (maximum: 100000)</td>\n</tr>\n<tr>\n<td><code>pattern: &lt;something&gt;</code></td>\n<td><code>maxLength</code> must be defined (maximum: 50000)</td>\n</tr>\n<tr>\n<td><code>format: &lt;something&gt;</code></td>\n<td><code>maxLength</code> must be defined (maximum: 100000)</td>\n</tr>\n<tr>\n<td><code>$ref: &lt;something&gt;</code></td>\n<td><code>$ref</code> can only reference <code>definitions</code> - <br> remote references not supported</td>\n</tr>\n</tbody>\n</table></div>\n<h2 class=\"header-scroll\"><div class=\"anchor waypoint\" id=\"section-data-size\"></div>Data Size<a class=\"fa fa-anchor\" href=\"#section-data-size\"></a></h2>\n<p>Additionally, there are several constraints limiting the overall size of data contracts and related data as defined here:</p>\n<p><strong>Note:</strong> These constraints are defined in the Dash Platform Protocol logic (not in JSON Schema).</p>\n<div class=\"marked-table\"><table>\n<thead>\n<tr>\n<th>Description</th>\n<th>Constraint</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Maximum size of serialized data contract</td>\n<td>15 KB</td>\n</tr>\n<tr>\n<td>Maximum size of CBOR-encoded data</td>\n<td>16 KB</td>\n</tr>\n</tbody>\n</table></div>\n<h1 class=\"header-scroll\"><div class=\"anchor waypoint\" id=\"section-documents\"></div>Documents<a class=\"fa fa-anchor\" href=\"#section-documents\"></a></h1>\n<p>The <code>documents</code> object defines each type of document required by the data contract. At a minimum, a document must consist of 1 or more properties. Documents may also define <a href=\"#section-document-indices\">indices</a> and a list of <a href=\"#section-required-properties\">required properties</a>.</p>\n<p>The following example shows a minimal <code>documents</code> object defining a single document (<code>note</code>) that has one property (<code>message</code>).</p>\n\n</div>\n<div class=\"magic-block-code\">\n\t<ul class=\"block-code-header\">\n\t\t<li><a href=\"\" ng-click=\"showCode(0)\" ng-class=\"{active: (0 == tab)}\">Minimal document definition</a></li>\n\t</ul>\n\t<div class=\"block-code-code\"><span ng-if=\"tab == 0\">\n\t\t\t<button ng-click=\"copyCode(754)\" class=\"copy-code-button\"><span ng-show=\"!copied\" class=\"fa fa-clipboard\"></span><span ng-show=\"copied\" class=\"fa fa-check\"></span></button>\n\t\t\t<textarea ng-non-bindable=\"ng-non-bindable\" style=\"position: absolute; left: -10000px;\" id=\"text-code-754\">{\n  &quot;note&quot;: {\n    &quot;properties&quot;: {\n      &quot;message&quot;: {\n        &quot;type&quot;: &quot;string&quot;\n      }\n    },\n    &quot;additionalProperties&quot;: false\n  }\n}</textarea>\n\t\t\t<pre id=\"code-754\"><code><span class='cm-s-neo'>{\n  <span class=\"cm-property\">\"note\"</span>: {\n    <span class=\"cm-property\">\"properties\"</span>: {\n      <span class=\"cm-property\">\"message\"</span>: {\n        <span class=\"cm-property\">\"type\"</span>: <span class=\"cm-string\">\"string\"</span>\n      }\n    },\n    <span class=\"cm-property\">\"additionalProperties\"</span>: <span class=\"cm-atom\">false</span>\n  }\n}</span></code></pre></span>\n\t</div>\n</div>\n<div class=\"magic-block-textarea\"><h2 class=\"header-scroll\"><div class=\"anchor waypoint\" id=\"section-document-properties\"></div>Document Properties<a class=\"fa fa-anchor\" href=\"#section-document-properties\"></a></h2>\n<p>The <code>properties</code> object defines each field that will be used by a document. Each field consists of an object that, at a minimum, must define its data <code>type</code> (<code>string</code>, <code>number</code>, <code>integer</code>, <code>boolean</code>, <code>array</code>, <code>object</code>). Fields may also apply a variety of optional JSON Schema constraints related to the format, range, length, etc. of the data.</p>\n\n</div>\n<div class=\"magic-block-callout type-info \">\n\t<h3><i title=\"Info\" class=\"fa fa-info-circle\"></i>JSON Schema\n\t</h3>\n\t<div class=\"callout-body\"><p>A full explanation of the capabilities of JSON Schema is beyond the scope of this document. For more information regarding its data types and the constraints that can be applied, please refer to the <a href=\"https://json-schema.org/understanding-json-schema/reference/index.html\">JSON Schema reference</a> documentation.</p>\n\n\t</div>\n</div>\n<div class=\"magic-block-textarea\"><h3 class=\"header-scroll\"><div class=\"anchor waypoint\" id=\"section-property-constraints\"></div>Property Constraints<a class=\"fa fa-anchor\" href=\"#section-property-constraints\"></a></h3>\n<p>There are a variety of constraints currently defined for performance and security reasons. </p>\n<div class=\"marked-table\"><table>\n<thead>\n<tr>\n<th>Description</th>\n<th>Value</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Minimum number of properties</td>\n<td>1</td>\n</tr>\n<tr>\n<td>Maximum number of properties</td>\n<td>100</td>\n</tr>\n<tr>\n<td>Minimum property name length</td>\n<td>1</td>\n</tr>\n<tr>\n<td>Maximum property name length</td>\n<td>63</td>\n</tr>\n<tr>\n<td>Property name first/last characters</td>\n<td><strong> Alphanumeric only (<code>A-Z</code>, <code>a-z</code>, <code>0-9</code>)</strong></td>\n</tr>\n<tr>\n<td>Property name characters</td>\n<td>Alphanumeric (<code>A-Z</code>, <code>a-z</code>, <code>0-9</code>)<br>Hypen (<code>-</code>) <br>Underscore (<code>_</code>)</td>\n</tr>\n</tbody>\n</table></div>\n<h3 class=\"header-scroll\"><div class=\"anchor waypoint\" id=\"section-required-properties-optional\"></div>Required Properties (Optional)<a class=\"fa fa-anchor\" href=\"#section-required-properties-optional\"></a></h3>\n<p>Each document may have some fields that are required for the document to be valid and other fields that are optional. Required fields are defined via the <code>required</code> array which consists of a list of the field names from the document that must be present. The <code>required</code> object should be excluded for documents without any required properties.</p>\n\n</div>\n<div class=\"magic-block-code\">\n\t<ul class=\"block-code-header\">\n\t\t<li><a href=\"\" ng-click=\"showCode(0)\" ng-class=\"{active: (0 == tab)}\">Syntax</a></li>\n\t</ul>\n\t<div class=\"block-code-code\"><span ng-if=\"tab == 0\">\n\t\t\t<button ng-click=\"copyCode(276)\" class=\"copy-code-button\"><span ng-show=\"!copied\" class=\"fa fa-clipboard\"></span><span ng-show=\"copied\" class=\"fa fa-check\"></span></button>\n\t\t\t<textarea ng-non-bindable=\"ng-non-bindable\" style=\"position: absolute; left: -10000px;\" id=\"text-code-276\">&quot;required&quot;: [\n  &quot;&lt;field name a&gt;&quot;,\n  &quot;&lt;field name b&gt;&quot;\n]</textarea>\n\t\t\t<pre id=\"code-276\"><code><span class='cm-s-neo'><span class=\"cm-string\">\"required\"</span>: [\n  <span class=\"cm-string\">\"&lt;field name a&gt;\"</span>,\n  <span class=\"cm-string\">\"&lt;field name b&gt;\"</span>\n]</span></code></pre></span>\n\t</div>\n</div>\n<div class=\"magic-block-textarea\"><p><strong>Example</strong><br>The following example (excerpt from the DPNS contract&#39;s <code>domain</code> document) demonstrates a document that has 6 required fields:</p>\n\n</div>\n<div class=\"magic-block-code\">\n\t<ul class=\"block-code-header\">\n\t\t<li><a href=\"\" ng-click=\"showCode(0)\" ng-class=\"{active: (0 == tab)}\">JSON</a></li>\n\t</ul>\n\t<div class=\"block-code-code\"><span ng-if=\"tab == 0\">\n\t\t\t<button ng-click=\"copyCode(765)\" class=\"copy-code-button\"><span ng-show=\"!copied\" class=\"fa fa-clipboard\"></span><span ng-show=\"copied\" class=\"fa fa-check\"></span></button>\n\t\t\t<textarea ng-non-bindable=\"ng-non-bindable\" style=\"position: absolute; left: -10000px;\" id=\"text-code-765\">&quot;required&quot;: [\n  &quot;nameHash&quot;,\n  &quot;label&quot;,\n  &quot;normalizedLabel&quot;,\n  &quot;normalizedParentDomainName&quot;,\n  &quot;preorderSalt&quot;,\n  &quot;records&quot;\n],</textarea>\n\t\t\t<pre id=\"code-765\"><code><span class='cm-s-neo'><span class=\"cm-string\">\"required\"</span>: [\n  <span class=\"cm-string\">\"nameHash\"</span>,\n  <span class=\"cm-string\">\"label\"</span>,\n  <span class=\"cm-string\">\"normalizedLabel\"</span>,\n  <span class=\"cm-string\">\"normalizedParentDomainName\"</span>,\n  <span class=\"cm-string\">\"preorderSalt\"</span>,\n  <span class=\"cm-string\">\"records\"</span>\n],</span></code></pre></span>\n\t</div>\n</div>\n<div class=\"magic-block-textarea\"><h2 class=\"header-scroll\"><div class=\"anchor waypoint\" id=\"section-document-indices\"></div>Document Indices<a class=\"fa fa-anchor\" href=\"#section-document-indices\"></a></h2>\n\n</div>\n<div class=\"magic-block-callout type-info no-title\"><span class=\"noTitleIcon\"><i title=\"Info\" class=\"fa fa-info-circle\"></i></span>\n\t<div class=\"callout-body\"><p>The <code>indices</code> object should be excluded for documents that do not require indices.</p>\n\n\t</div>\n</div>\n<div class=\"magic-block-textarea\"><p>Document indices may be defined if indexing on document fields is required. </p>\n<p>The <code>indices</code> array consists of:</p>\n<ul>\n<li >One or more objects that each contain:<ul>\n<li >A <code>properties</code> array composed of a <code>&lt;field name: sort order&gt;</code> object for each document field that is part of the index (sort order: <code>asc</code> or <code>desc</code>)</li><li >An (optional) <code>unique</code> element that determines if duplicate values are allowed for the document</li></ul>\n</li></ul>\n\n</div>\n<div class=\"magic-block-code\">\n\t<ul class=\"block-code-header\">\n\t\t<li><a href=\"\" ng-click=\"showCode(0)\" ng-class=\"{active: (0 == tab)}\">Syntax</a></li>\n\t</ul>\n\t<div class=\"block-code-code\"><span ng-if=\"tab == 0\">\n\t\t\t<button ng-click=\"copyCode(716)\" class=\"copy-code-button\"><span ng-show=\"!copied\" class=\"fa fa-clipboard\"></span><span ng-show=\"copied\" class=\"fa fa-check\"></span></button>\n\t\t\t<textarea ng-non-bindable=\"ng-non-bindable\" style=\"position: absolute; left: -10000px;\" id=\"text-code-716\">&quot;indices&quot;: [ \n  {\n    &quot;properties&quot;: [\n      { &quot;&lt;field name a&gt;&quot;: &quot;&lt;asc&quot;|&quot;desc&gt;&quot; },\n      { &quot;&lt;field name b&gt;&quot;: &quot;&lt;asc&quot;|&quot;desc&gt;&quot; }\n    ], \n    &quot;unique&quot;: true|false\n  },\n  {\n    &quot;properties&quot;: [\n      { &quot;&lt;field name c&gt;&quot;: &quot;&lt;asc&quot;|&quot;desc&gt;&quot; },\n    ], \n  }    \n]</textarea>\n\t\t\t<pre id=\"code-716\"><code><span class='cm-s-neo'><span class=\"cm-string\">\"indices\"</span>: [ \n  {\n    <span class=\"cm-property\">\"properties\"</span>: [\n      { <span class=\"cm-property\">\"&lt;field name a&gt;\"</span>: <span class=\"cm-string\">\"&lt;asc\"</span><span class=\"cm-operator\">|</span><span class=\"cm-string\">\"desc&gt;\"</span> },\n      { <span class=\"cm-property\">\"&lt;field name b&gt;\"</span>: <span class=\"cm-string\">\"&lt;asc\"</span><span class=\"cm-operator\">|</span><span class=\"cm-string\">\"desc&gt;\"</span> }\n    ], \n    <span class=\"cm-property\">\"unique\"</span>: <span class=\"cm-atom\">true</span><span class=\"cm-operator\">|</span><span class=\"cm-atom\">false</span>\n  },\n  {\n    <span class=\"cm-property\">\"properties\"</span>: [\n      { <span class=\"cm-property\">\"&lt;field name c&gt;\"</span>: <span class=\"cm-string\">\"&lt;asc\"</span><span class=\"cm-operator\">|</span><span class=\"cm-string\">\"desc&gt;\"</span> },\n    ], \n  }    \n]</span></code></pre></span>\n\t</div>\n</div>\n<div class=\"magic-block-textarea\"><h3 class=\"header-scroll\"><div class=\"anchor waypoint\" id=\"section-index-constraints\"></div>Index Constraints<a class=\"fa fa-anchor\" href=\"#section-index-constraints\"></a></h3>\n\n</div>\n<div class=\"magic-block-callout type-warning no-title\"><span class=\"noTitleIcon\"><i title=\"Warning\" class=\"fa fa-exclamation-circle\"></i></span>\n\t<div class=\"callout-body\"><p>For performance and security reasons, Evonet places the following constraints on indices. These constraints are subject to change over time.</p>\n\n\t</div>\n</div>\n<div class=\"magic-block-textarea\"><div class=\"marked-table\"><table>\n<thead>\n<tr>\n<th>Description</th>\n<th>Value</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Maximum number of indices</td>\n<td>10</td>\n</tr>\n<tr>\n<td>Maximum number of unique indices</td>\n<td>3</td>\n</tr>\n<tr>\n<td>Maximum number of properties in a single index</td>\n<td>10</td>\n</tr>\n</tbody>\n</table></div>\n<p><strong>Example</strong><br>The following example (excerpt from the DPNS contract&#39;s <code>preorder</code> document) creates an index on <code>saltedDomainHash</code> that also enforces uniqueness across all documents of that type:</p>\n\n</div>\n<div class=\"magic-block-code\">\n\t<ul class=\"block-code-header\">\n\t\t<li><a href=\"\" ng-click=\"showCode(0)\" ng-class=\"{active: (0 == tab)}\">Example indices</a></li>\n\t</ul>\n\t<div class=\"block-code-code\"><span ng-if=\"tab == 0\">\n\t\t\t<button ng-click=\"copyCode(316)\" class=\"copy-code-button\"><span ng-show=\"!copied\" class=\"fa fa-clipboard\"></span><span ng-show=\"copied\" class=\"fa fa-check\"></span></button>\n\t\t\t<textarea ng-non-bindable=\"ng-non-bindable\" style=\"position: absolute; left: -10000px;\" id=\"text-code-316\">&quot;indices&quot;: [\n  {\n    &quot;properties&quot;: [\n      { &quot;saltedDomainHash&quot;: &quot;asc&quot; }\n    ],\n    &quot;unique&quot;: true\n  }\n],</textarea>\n\t\t\t<pre id=\"code-316\"><code><span class='cm-s-neo'><span class=\"cm-string\">\"indices\"</span>: [\n  {\n    <span class=\"cm-property\">\"properties\"</span>: [\n      { <span class=\"cm-property\">\"saltedDomainHash\"</span>: <span class=\"cm-string\">\"asc\"</span> }\n    ],\n    <span class=\"cm-property\">\"unique\"</span>: <span class=\"cm-atom\">true</span>\n  }\n],</span></code></pre></span>\n\t</div>\n</div>\n<div class=\"magic-block-textarea\"><h2 class=\"header-scroll\"><div class=\"anchor waypoint\" id=\"section-full-document-syntax\"></div>Full Document Syntax<a class=\"fa fa-anchor\" href=\"#section-full-document-syntax\"></a></h2>\n<p>This example syntax shows the structure of a documents object that defines two documents, an index, and a required field.</p>\n\n</div>\n<div class=\"magic-block-code\">\n\t<ul class=\"block-code-header\">\n\t\t<li><a href=\"\" ng-click=\"showCode(0)\" ng-class=\"{active: (0 == tab)}\">JSON</a></li>\n\t</ul>\n\t<div class=\"block-code-code\"><span ng-if=\"tab == 0\">\n\t\t\t<button ng-click=\"copyCode(123)\" class=\"copy-code-button\"><span ng-show=\"!copied\" class=\"fa fa-clipboard\"></span><span ng-show=\"copied\" class=\"fa fa-check\"></span></button>\n\t\t\t<textarea ng-non-bindable=\"ng-non-bindable\" style=\"position: absolute; left: -10000px;\" id=\"text-code-123\">{\n  &quot;&lt;document name a&gt;&quot;: {\n    &quot;properties&quot;: {\n      &quot;&lt;field name b&gt;&quot;: {\n        &quot;type&quot;: &quot;&lt;field data type&gt;&quot;\n      },\n      &quot;&lt;field name c&gt;&quot;: {\n        &quot;type&quot;: &quot;&lt;field data type&gt;&quot;\n      },\n    },\n    &quot;indices&quot;: [\n      {\n        &quot;properties&quot;: [\n          {\n            &quot;&lt;field name c&gt;&quot;: &quot;&lt;asc|desc&gt;&quot;\n          }\n        ],\n        &quot;unique&quot;: true|false\n      },\n    ],\n    &quot;required&quot;: [\n      &quot;&lt;field name c&gt;&quot;\n    ]\n    &quot;additionalProperties&quot;: false\n  },\n  &quot;&lt;document name x&gt;&quot;: {\n    &quot;properties&quot;: {\n      &quot;&lt;property name y&gt;&quot;: {\n        &quot;type&quot;: &quot;&lt;property data type&gt;&quot;\n      },\n      &quot;&lt;property name z&gt;&quot;: {\n        &quot;type&quot;: &quot;&lt;property data type&gt;&quot;\n      },\n    },\n    &quot;additionalProperties&quot;: false\n  },    \n}</textarea>\n\t\t\t<pre id=\"code-123\"><code><span class='cm-s-neo'>{\n  <span class=\"cm-property\">\"&lt;document name a&gt;\"</span>: {\n    <span class=\"cm-property\">\"properties\"</span>: {\n      <span class=\"cm-property\">\"&lt;field name b&gt;\"</span>: {\n        <span class=\"cm-property\">\"type\"</span>: <span class=\"cm-string\">\"&lt;field data type&gt;\"</span>\n      },\n      <span class=\"cm-property\">\"&lt;field name c&gt;\"</span>: {\n        <span class=\"cm-property\">\"type\"</span>: <span class=\"cm-string\">\"&lt;field data type&gt;\"</span>\n      },\n    },\n    <span class=\"cm-property\">\"indices\"</span>: [\n      {\n        <span class=\"cm-property\">\"properties\"</span>: [\n          {\n            <span class=\"cm-property\">\"&lt;field name c&gt;\"</span>: <span class=\"cm-string\">\"&lt;asc|desc&gt;\"</span>\n          }\n        ],\n        <span class=\"cm-property\">\"unique\"</span>: <span class=\"cm-atom\">true</span><span class=\"cm-operator\">|</span><span class=\"cm-atom\">false</span>\n      },\n    ],\n    <span class=\"cm-property\">\"required\"</span>: [\n      <span class=\"cm-string\">\"&lt;field name c&gt;\"</span>\n    ]\n    <span class=\"cm-string\">\"additionalProperties\"</span>: <span class=\"cm-atom\">false</span>\n  },\n  <span class=\"cm-property\">\"&lt;document name x&gt;\"</span>: {\n    <span class=\"cm-property\">\"properties\"</span>: {\n      <span class=\"cm-property\">\"&lt;property name y&gt;\"</span>: {\n        <span class=\"cm-property\">\"type\"</span>: <span class=\"cm-string\">\"&lt;property data type&gt;\"</span>\n      },\n      <span class=\"cm-property\">\"&lt;property name z&gt;\"</span>: {\n        <span class=\"cm-property\">\"type\"</span>: <span class=\"cm-string\">\"&lt;property data type&gt;\"</span>\n      },\n    },\n    <span class=\"cm-property\">\"additionalProperties\"</span>: <span class=\"cm-atom\">false</span>\n  },    \n}</span></code></pre></span>\n\t</div>\n</div>\n<div class=\"magic-block-textarea\"><h1 class=\"header-scroll\"><div class=\"anchor waypoint\" id=\"section-definitions\"></div>Definitions<a class=\"fa fa-anchor\" href=\"#section-definitions\"></a></h1>\n<p>The optional <code>definitions</code> object enables definition of aspects of a schema that are used in multiple places. This is done using the JSON Schema support for <a href=\"https://json-schema.org/understanding-json-schema/structuring.html#reuse\">reuse</a>. Items defined in <code>definitions</code> may then be referenced when defining <code>documents</code> through use of the <code>$ref</code> keyword.</p>\n\n</div>\n<div class=\"magic-block-callout type-info no-title\"><span class=\"noTitleIcon\"><i title=\"Info\" class=\"fa fa-info-circle\"></i></span>\n\t<div class=\"callout-body\"><p>Properties defined in the <code>definitions</code> object must meet the same criteria as those defined in the <code>documents</code> object.</p>\n\n\t</div>\n</div>\n<div class=\"magic-block-callout type-danger \">\n\t<h3><i title=\"Danger\" class=\"fa fa-exclamation-triangle\"></i>Remote references blocked\n\t</h3>\n\t<div class=\"callout-body\"><p>Data contracts can only use the <code>$ref</code> keyword to reference their own <code>definitions</code>. Referencing external definitions is not supported by the platform protocol.</p>\n\n\t</div>\n</div>\n<div class=\"magic-block-textarea\"><p><strong>Example</strong><br>The following example shows a definition for a <code>message</code> object consisting of two properties:</p>\n\n</div>\n<div class=\"magic-block-code\">\n\t<ul class=\"block-code-header\">\n\t\t<li><a href=\"\" ng-click=\"showCode(0)\" ng-class=\"{active: (0 == tab)}\">Example definitions</a></li>\n\t</ul>\n\t<div class=\"block-code-code\"><span ng-if=\"tab == 0\">\n\t\t\t<button ng-click=\"copyCode(967)\" class=\"copy-code-button\"><span ng-show=\"!copied\" class=\"fa fa-clipboard\"></span><span ng-show=\"copied\" class=\"fa fa-check\"></span></button>\n\t\t\t<textarea ng-non-bindable=\"ng-non-bindable\" style=\"position: absolute; left: -10000px;\" id=\"text-code-967\">{\n  // Preceeding content truncated ...\n  &quot;definitions&quot;: {\n    &quot;message&quot;: {\n      &quot;type&quot;: &quot;object&quot;,\n      &quot;properties&quot;: {\n        &quot;timestamp&quot;: {\n          &quot;type&quot;: &quot;number&quot;\n        },\n        &quot;description&quot;: {\n          &quot;type&quot;: &quot;string&quot;\n        }\n      },\n      &quot;additionalProperties&quot;: false\n    }\n  }\n}</textarea>\n\t\t\t<pre id=\"code-967\"><code><span class='cm-s-neo'>{\n  <span class=\"cm-comment\">&#47;&#47; Preceeding content truncated ...</span>\n  <span class=\"cm-property\">\"definitions\"</span>: {\n    <span class=\"cm-property\">\"message\"</span>: {\n      <span class=\"cm-property\">\"type\"</span>: <span class=\"cm-string\">\"object\"</span>,\n      <span class=\"cm-property\">\"properties\"</span>: {\n        <span class=\"cm-property\">\"timestamp\"</span>: {\n          <span class=\"cm-property\">\"type\"</span>: <span class=\"cm-string\">\"number\"</span>\n        },\n        <span class=\"cm-property\">\"description\"</span>: {\n          <span class=\"cm-property\">\"type\"</span>: <span class=\"cm-string\">\"string\"</span>\n        }\n      },\n      <span class=\"cm-property\">\"additionalProperties\"</span>: <span class=\"cm-atom\">false</span>\n    }\n  }\n}</span></code></pre></span>\n\t</div>\n</div>\n<div class=\"magic-block-callout type-info \">\n\t<h3><i title=\"Info\" class=\"fa fa-info-circle\"></i>Adding definitions with js-dpp\n\t</h3>\n\t<div class=\"callout-body\"><p>In the <code>js-dpp</code> reference implementation, definitions are added to a data contract via the <code>.setDefinitions()</code> method (e.g. <code>myContract.setDefinitions({&quot;message&quot;: { ... &#125;&#125;</span>)</code>. This must be done prior to broadcasting the contract for registration.</p>\n\n\t</div>\n</div>\n<div class=\"magic-block-textarea\"><h1 class=\"header-scroll\"><div class=\"anchor waypoint\" id=\"section-additional-properties\"></div>Additional Properties<a class=\"fa fa-anchor\" href=\"#section-additional-properties\"></a></h1>\n<p>Although JSON Schema allows additional, undefined properties <a href=\"https://json-schema.org/understanding-json-schema/reference/object.html?#properties\">by default</a>, they are not allowed in Dash Platform data contracts. Data contract validation will fail if they are not explicitly forbidden using the <code>additionalProperties</code> keyword anywhere <code>properties</code> are defined.</p>\n<p>Include the following at the same level as the <code>properties</code> keyword to ensure proper validation:</p>\n<pre><code class=\"lang-json\"><span class='cm-s-neo'><span class=\"cm-string\">\"additionalProperties\"</span>: <span class=\"cm-atom\">false</span></span>\n</code></pre>\n\n</div>", 
 "user": "5b8400d7185d5e00036dcc3b", 
 "isReference": false, 
 "slug": "reference-data-contracts", 
 "link_url": "", 
 "project": "5bda01cad172e200499a20a9", 
 "__v": 2, 
 "_id": "5e57f67f1dc8d20057288ae4", 
 "order": 1, 
 "updates": []
}