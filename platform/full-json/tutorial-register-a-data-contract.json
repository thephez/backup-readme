{
 "parentDoc": null, 
 "excerpt": "", 
 "api": {
  "url": "", 
  "params": [], 
  "results": {
   "codes": [
    {
     "status": 200, 
     "code": "{}", 
     "name": "", 
     "language": "json"
    }, 
    {
     "status": 400, 
     "code": "{}", 
     "name": "", 
     "language": "json"
    }
   ]
  }, 
  "auth": "required", 
  "method": "get"
 }, 
 "updatedAt": "2019-12-29T15:00:53.806Z", 
 "sync_unique": "", 
 "id": "5d9c6720a1de1f00618d6f6b", 
 "createdAt": "2019-10-08T10:38:24.143Z", 
 "category": "5d261b31d8f6ed004c24cbbe", 
 "title": "Register a Data Contract", 
 "next": {
  "pages": [], 
  "description": ""
 }, 
 "version": "5d2374d8d238fb004e8f9243", 
 "hidden": true, 
 "type": "basic", 
 "metadata": {
  "image": [], 
  "description": "", 
  "title": ""
 }, 
 "body": "# Overview\n\nIn this tutorial we will register a data contract.\n[block:callout]\n{\n  \"type\": \"warning\",\n  \"title\": \"EvoNet Limitation\",\n  \"body\": \"Registration of third-party data contracts is not enabled on the initial phase of EvoNet; however, the DPNS contracts is registered. To register data contracts without restriction, please create a devnet.\"\n}\n[/block]\n## Prerequisites\n- [node.js](https://nodejs.org/en/)\n- Basic familiarity with JavaScript asychronous functions using [async/await](https://developer.mozilla.org/en-US/docs/Learn/JavaScript/Asynchronous/Async_await)\n- The DashJS SDK is initialized (covered in [Connecting to EvoNet](tutorial-connecting-to-evonet))\n\n## Steps\n\nFirst we create the contract:\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"// const sdk = DashJS.sdk( your connection options );\\nconst myContract = sdk.platform.contracts.create( /* needs implementation */ );\",\n      \"language\": \"javascript\"\n    }\n  ]\n}\n[/block]\nThen we broadcast the data contract:\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"const txid = await sdk.platform.contracts.broadcast(myContract);\",\n      \"language\": \"javascript\"\n    }\n  ]\n}\n[/block]", 
 "link_external": false, 
 "body_html": "<div class=\"magic-block-textarea\"><h1 class=\"header-scroll\"><div class=\"anchor waypoint\" id=\"section-overview\"></div>Overview<a class=\"fa fa-anchor\" href=\"#section-overview\"></a></h1>\n<p>In this tutorial we will register a data contract.</p>\n\n</div>\n<div class=\"magic-block-callout type-warning \">\n\t<h3><i title=\"Warning\" class=\"fa fa-exclamation-circle\"></i>EvoNet Limitation\n\t</h3>\n\t<div class=\"callout-body\"><p>Registration of third-party data contracts is not enabled on the initial phase of EvoNet; however, the DPNS contracts is registered. To register data contracts without restriction, please create a devnet.</p>\n\n\t</div>\n</div>\n<div class=\"magic-block-textarea\"><h2 class=\"header-scroll\"><div class=\"anchor waypoint\" id=\"section-prerequisites\"></div>Prerequisites<a class=\"fa fa-anchor\" href=\"#section-prerequisites\"></a></h2>\n<ul>\n<li ><a href=\"https://nodejs.org/en/\">node.js</a></li><li >Basic familiarity with JavaScript asychronous functions using <a href=\"https://developer.mozilla.org/en-US/docs/Learn/JavaScript/Asynchronous/Async_await\">async/await</a></li><li >The DashJS SDK is initialized (covered in <a href=\"tutorial-connecting-to-evonet\">Connecting to EvoNet</a>)</li></ul>\n<h2 class=\"header-scroll\"><div class=\"anchor waypoint\" id=\"section-steps\"></div>Steps<a class=\"fa fa-anchor\" href=\"#section-steps\"></a></h2>\n<p>First we create the contract:</p>\n\n</div>\n<div class=\"magic-block-code\">\n\t<ul class=\"block-code-header\">\n\t\t<li><a href=\"\" ng-click=\"showCode(0)\" ng-class=\"{active: (0 == tab)}\">JavaScript</a></li>\n\t</ul>\n\t<div class=\"block-code-code\"><span ng-if=\"tab == 0\">\n\t\t\t<button ng-click=\"copyCode(121)\" class=\"copy-code-button\"><span ng-show=\"!copied\" class=\"fa fa-clipboard\"></span><span ng-show=\"copied\" class=\"fa fa-check\"></span></button>\n\t\t\t<textarea ng-non-bindable=\"ng-non-bindable\" style=\"position: absolute; left: -10000px;\" id=\"text-code-121\">// const sdk = DashJS.sdk( your connection options );\nconst myContract = sdk.platform.contracts.create( /* needs implementation */ );</textarea>\n\t\t\t<pre id=\"code-121\"><code><span class='cm-s-neo'><span class=\"cm-comment\">&#47;&#47; const sdk = DashJS.sdk( your connection options );</span>\n<span class=\"cm-keyword\">const</span> <span class=\"cm-def\">myContract</span> <span class=\"cm-operator\">=</span> <span class=\"cm-variable\">sdk</span>.<span class=\"cm-property\">platform</span>.<span class=\"cm-property\">contracts</span>.<span class=\"cm-property\">create</span>( <span class=\"cm-comment\">&#47;* needs implementation *&#47;</span> );</span></code></pre></span>\n\t</div>\n</div>\n<div class=\"magic-block-textarea\"><p>Then we broadcast the data contract:</p>\n\n</div>\n<div class=\"magic-block-code\">\n\t<ul class=\"block-code-header\">\n\t\t<li><a href=\"\" ng-click=\"showCode(0)\" ng-class=\"{active: (0 == tab)}\">JavaScript</a></li>\n\t</ul>\n\t<div class=\"block-code-code\"><span ng-if=\"tab == 0\">\n\t\t\t<button ng-click=\"copyCode(152)\" class=\"copy-code-button\"><span ng-show=\"!copied\" class=\"fa fa-clipboard\"></span><span ng-show=\"copied\" class=\"fa fa-check\"></span></button>\n\t\t\t<textarea ng-non-bindable=\"ng-non-bindable\" style=\"position: absolute; left: -10000px;\" id=\"text-code-152\">const txid = await sdk.platform.contracts.broadcast(myContract);</textarea>\n\t\t\t<pre id=\"code-152\"><code><span class='cm-s-neo'><span class=\"cm-keyword\">const</span> <span class=\"cm-def\">txid</span> <span class=\"cm-operator\">=</span> <span class=\"cm-keyword\">await</span> <span class=\"cm-variable\">sdk</span>.<span class=\"cm-property\">platform</span>.<span class=\"cm-property\">contracts</span>.<span class=\"cm-property\">broadcast</span>(<span class=\"cm-variable\">myContract</span>);</span></code></pre></span>\n\t</div>\n</div>", 
 "user": "5b8400d7185d5e00036dcc3b", 
 "isReference": false, 
 "slug": "tutorial-register-a-data-contract", 
 "link_url": "", 
 "isApi": false, 
 "project": "5bda01cad172e200499a20a9", 
 "__v": 0, 
 "_id": "5d9c6720a1de1f00618d6f6b", 
 "order": 8, 
 "updates": []
}