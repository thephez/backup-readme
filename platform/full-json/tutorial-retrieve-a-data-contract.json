{
 "metadata": {
  "image": [],
  "title": "",
  "description": ""
 },
 "api": {
  "method": "get",
  "url": "",
  "auth": "required",
  "results": {
   "codes": [
    {
     "status": 200,
     "language": "json",
     "code": "{}",
     "name": ""
    },
    {
     "status": 400,
     "language": "json",
     "code": "{}",
     "name": ""
    }
   ]
  },
  "params": []
 },
 "next": {
  "description": "",
  "pages": [
   {
    "type": "doc",
    "icon": "file-text-o",
    "name": "Submit Documents",
    "slug": "tutorial-submit-documents",
    "category": "Tutorials"
   },
   {
    "type": "doc",
    "icon": "file-text-o",
    "name": "Retrieve Documents",
    "slug": "tutorial-retrieve-documents",
    "category": "Tutorials"
   }
  ]
 },
 "title": "Retrieve a Data Contract",
 "updates": [
  "5f2cff96176be00014e5645c"
 ],
 "type": "basic",
 "slug": "tutorial-retrieve-a-data-contract",
 "excerpt": "Retrieve details for a Dash Platform data contract",
 "body": "# Overview\n\nIn this tutorial we will retrieve the data contract created in the [Register a Data Contract tutorial](tutorial-register-a-data-contract).\n\n## Prerequisites\n- [General prerequisites](tutorials-introduction#prerequisites) (Node.js / Dash SDK installed)\n- A Dash Platform Contract ID: [Tutorial: Register a Data Contract](tutorial-register-a-data-contract) \n\n# Code\n\n## Retrieving a data contract\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"const Dash = require('dash');\\n\\nconst client = new Dash.Client();\\n\\nconst retrieveContract = async () => {\\n  const contractId = '3iaEhdyAVbmSjd59CT6SCrqPjfAfMdPTc8ksydgqSaWE';\\n  return client.platform.contracts.get(contractId);\\n};\\n\\nretrieveContract()\\n  .then((d) => console.dir(d.toJSON(), { depth: 5 }))\\n  .catch((e) => console.error('Something went wrong:\\\\n', e))\\n  .finally(() => client.disconnect());\",\n      \"language\": \"javascript\"\n    }\n  ]\n}\n[/block]\n## Updating the client app list\n[block:callout]\n{\n  \"type\": \"info\",\n  \"body\": \"In many cases it may be desirable to work with a newly retrieved data contract using the `<contract name>.<contract document>` syntax (e.g. `dpns.domain`). Data contracts that were created after the client was initialized or not included in the initial client options can be added via `client.getApps().set(...)`.\"\n}\n[/block]\n\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"const Identifier = require('@dashevo/dpp/lib/Identifier');\\nconst myContractId = 'a contract ID';\\nconst myContract = await client.platform.contracts.get(myContractId);\\n\\nclient.getApps().set('myNewContract', {\\n  contractId: Identifier.from(myContractId),\\n  contract: myContract,\\n});\",\n      \"language\": \"javascript\"\n    }\n  ]\n}\n[/block]\n# Example Data Contract\n\nThe following example response shows a retrieved contract:\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"{\\n   \\\"protocolVersion\\\":0,\\n   \\\"$id\\\":\\\"C96rCVpck4RdBQXG3zzP5KH4RKzfKVTsmTauu8FQenJi\\\",\\n   \\\"$schema\\\":\\\"https://schema.dash.org/dpp-0-4-0/meta/data-contract\\\",\\n   \\\"ownerId\\\":\\\"FgPx8YHbWv4rMeiP52DfmnAXGtjiCiSaNKCbgT7eCRxh\\\",\\n   \\\"documents\\\":{\\n      \\\"note\\\":{\\n         \\\"properties\\\":{\\n            \\\"message\\\":{\\n               \\\"type\\\":\\\"string\\\"\\n            }\\n         },\\n         \\\"additionalProperties\\\":false\\n      }\\n   }\\n}\",\n      \"language\": \"json\"\n    }\n  ]\n}\n[/block]\n\n[block:callout]\n{\n  \"type\": \"info\",\n  \"body\": \"Please refer to the [data contract reference page](reference-data-contracts) for more comprehensive details related to contracts and documents.\"\n}\n[/block]\n# What's Happening\n\nAfter we initialize the Client, we request a contract. The `platform.contracts.get` method takes a single argument: a contract ID. After the contract is retrieved, it is displayed on the console.\n\nThe second code example shows how the contract could be assigned a name to make it easily accessible without initializing an additional client.",
 "order": 1,
 "isReference": false,
 "deprecated": false,
 "hidden": false,
 "sync_unique": "",
 "link_url": "",
 "link_external": false,
 "pendingAlgoliaPublish": false,
 "previousSlug": "",
 "slugUpdatedAt": "2020-07-22T19:52:07.679Z",
 "_id": "61d70ca155d45f0293817086",
 "createdAt": "2020-06-18T14:01:26.820Z",
 "updatedAt": "2022-04-21T13:05:26.149Z",
 "user": "5b8400d7185d5e00036dcc3b",
 "category": "61d70ca155d45f029381703b",
 "project": "5bda01cad172e200499a20a9",
 "version": "61d70ca155d45f02938170a3",
 "__v": 2,
 "parentDoc": "61d70ca155d45f0293817094",
 "isApi": false,
 "id": "61d70ca155d45f0293817086",
 "body_html": "<div class=\"magic-block-textarea\"><h1 class=\"header-scroll\"><div class=\"anchor waypoint\" id=\"section-overview\"></div>Overview<a class=\"fa fa-anchor\" href=\"#section-overview\"></a></h1>\n<p>In this tutorial we will retrieve the data contract created in the <a href=\"tutorial-register-a-data-contract\">Register a Data Contract tutorial</a>.</p>\n<h2 class=\"header-scroll\"><div class=\"anchor waypoint\" id=\"section-prerequisites\"></div>Prerequisites<a class=\"fa fa-anchor\" href=\"#section-prerequisites\"></a></h2>\n<ul>\n<li ><a href=\"tutorials-introduction#prerequisites\">General prerequisites</a> (Node.js / Dash SDK installed)</li><li >A Dash Platform Contract ID: <a href=\"tutorial-register-a-data-contract\">Tutorial: Register a Data Contract</a> </li></ul>\n<h1 class=\"header-scroll\"><div class=\"anchor waypoint\" id=\"section-code\"></div>Code<a class=\"fa fa-anchor\" href=\"#section-code\"></a></h1>\n<h2 class=\"header-scroll\"><div class=\"anchor waypoint\" id=\"section-retrieving-a-data-contract\"></div>Retrieving a data contract<a class=\"fa fa-anchor\" href=\"#section-retrieving-a-data-contract\"></a></h2>\n\n</div>\n<div class=\"magic-block-code\">\n\t<ul class=\"block-code-header\">\n\t\t<li><a href=\"\" ng-click=\"showCode(0)\" ng-class=\"{active: (0 == tab)}\">JavaScript</a></li>\n\t</ul>\n\t<div class=\"block-code-code\"><span ng-if=\"tab == 0\">\n\t\t\t<button ng-click=\"copyCode(691)\" class=\"copy-code-button\"><span ng-show=\"!copied\" class=\"fa fa-clipboard\"></span><span ng-show=\"copied\" class=\"fa fa-check\"></span></button>\n\t\t\t<textarea ng-non-bindable=\"ng-non-bindable\" style=\"position: absolute; left: -10000px;\" id=\"text-code-691\">const Dash = require('dash');\n\nconst client = new Dash.Client();\n\nconst retrieveContract = async () =&gt; {\n  const contractId = '3iaEhdyAVbmSjd59CT6SCrqPjfAfMdPTc8ksydgqSaWE';\n  return client.platform.contracts.get(contractId);\n};\n\nretrieveContract()\n  .then((d) =&gt; console.dir(d.toJSON(), { depth: 5 }))\n  .catch((e) =&gt; console.error('Something went wrong:\\n', e))\n  .finally(() =&gt; client.disconnect());</textarea>\n\t\t\t<pre id=\"code-691\"><code><span class='cm-s-neo'><span class=\"cm-keyword\">const</span> <span class=\"cm-def\">Dash</span> <span class=\"cm-operator\">=</span> <span class=\"cm-variable\">require</span>(<span class=\"cm-string\">'dash'</span>);\n\n<span class=\"cm-keyword\">const</span> <span class=\"cm-def\">client</span> <span class=\"cm-operator\">=</span> <span class=\"cm-keyword\">new</span> <span class=\"cm-variable\">Dash</span>.<span class=\"cm-property\">Client</span>();\n\n<span class=\"cm-keyword\">const</span> <span class=\"cm-def\">retrieveContract</span> <span class=\"cm-operator\">=</span> <span class=\"cm-keyword\">async</span> () <span class=\"cm-operator\">=&gt;</span> {\n  <span class=\"cm-keyword\">const</span> <span class=\"cm-def\">contractId</span> <span class=\"cm-operator\">=</span> <span class=\"cm-string\">'3iaEhdyAVbmSjd59CT6SCrqPjfAfMdPTc8ksydgqSaWE'</span>;\n  <span class=\"cm-keyword\">return</span> <span class=\"cm-variable\">client</span>.<span class=\"cm-property\">platform</span>.<span class=\"cm-property\">contracts</span>.<span class=\"cm-property\">get</span>(<span class=\"cm-variable-2\">contractId</span>);\n};\n\n<span class=\"cm-variable\">retrieveContract</span>()\n  .<span class=\"cm-property\">then</span>((<span class=\"cm-def\">d</span>) <span class=\"cm-operator\">=&gt;</span> <span class=\"cm-variable\">console</span>.<span class=\"cm-property\">dir</span>(<span class=\"cm-variable-2\">d</span>.<span class=\"cm-property\">toJSON</span>(), { <span class=\"cm-property\">depth</span>: <span class=\"cm-number\">5</span> }))\n  .<span class=\"cm-property\">catch</span>((<span class=\"cm-def\">e</span>) <span class=\"cm-operator\">=&gt;</span> <span class=\"cm-variable\">console</span>.<span class=\"cm-property\">error</span>(<span class=\"cm-string\">'Something went wrong:\\n'</span>, <span class=\"cm-variable-2\">e</span>))\n  .<span class=\"cm-property\">finally</span>(() <span class=\"cm-operator\">=&gt;</span> <span class=\"cm-variable\">client</span>.<span class=\"cm-property\">disconnect</span>());</span></code></pre></span>\n\t</div>\n</div>\n<div class=\"magic-block-textarea\"><h2 class=\"header-scroll\"><div class=\"anchor waypoint\" id=\"section-updating-the-client-app-list\"></div>Updating the client app list<a class=\"fa fa-anchor\" href=\"#section-updating-the-client-app-list\"></a></h2>\n\n</div>\n<div class=\"magic-block-callout type-info no-title\"><span class=\"noTitleIcon\"><i title=\"Info\" class=\"fa fa-info-circle\"></i></span>\n\t<div class=\"callout-body\"><p>In many cases it may be desirable to work with a newly retrieved data contract using the <code>&lt;contract name&gt;.&lt;contract document&gt;</code> syntax (e.g. <code>dpns.domain</code>). Data contracts that were created after the client was initialized or not included in the initial client options can be added via <code>client.getApps().set(...)</code>.</p>\n\n\t</div>\n</div>\n<div class=\"magic-block-code\">\n\t<ul class=\"block-code-header\">\n\t\t<li><a href=\"\" ng-click=\"showCode(0)\" ng-class=\"{active: (0 == tab)}\">JavaScript</a></li>\n\t</ul>\n\t<div class=\"block-code-code\"><span ng-if=\"tab == 0\">\n\t\t\t<button ng-click=\"copyCode(763)\" class=\"copy-code-button\"><span ng-show=\"!copied\" class=\"fa fa-clipboard\"></span><span ng-show=\"copied\" class=\"fa fa-check\"></span></button>\n\t\t\t<textarea ng-non-bindable=\"ng-non-bindable\" style=\"position: absolute; left: -10000px;\" id=\"text-code-763\">const Identifier = require('@dashevo/dpp/lib/Identifier');\nconst myContractId = 'a contract ID';\nconst myContract = await client.platform.contracts.get(myContractId);\n\nclient.getApps().set('myNewContract', {\n  contractId: Identifier.from(myContractId),\n  contract: myContract,\n});</textarea>\n\t\t\t<pre id=\"code-763\"><code><span class='cm-s-neo'><span class=\"cm-keyword\">const</span> <span class=\"cm-def\">Identifier</span> <span class=\"cm-operator\">=</span> <span class=\"cm-variable\">require</span>(<span class=\"cm-string\">'@dashevo&#47;dpp&#47;lib&#47;Identifier'</span>);\n<span class=\"cm-keyword\">const</span> <span class=\"cm-def\">myContractId</span> <span class=\"cm-operator\">=</span> <span class=\"cm-string\">'a contract ID'</span>;\n<span class=\"cm-keyword\">const</span> <span class=\"cm-def\">myContract</span> <span class=\"cm-operator\">=</span> <span class=\"cm-keyword\">await</span> <span class=\"cm-variable\">client</span>.<span class=\"cm-property\">platform</span>.<span class=\"cm-property\">contracts</span>.<span class=\"cm-property\">get</span>(<span class=\"cm-variable\">myContractId</span>);\n\n<span class=\"cm-variable\">client</span>.<span class=\"cm-property\">getApps</span>().<span class=\"cm-property\">set</span>(<span class=\"cm-string\">'myNewContract'</span>, {\n  <span class=\"cm-property\">contractId</span>: <span class=\"cm-variable\">Identifier</span>.<span class=\"cm-property\">from</span>(<span class=\"cm-variable\">myContractId</span>),\n  <span class=\"cm-property\">contract</span>: <span class=\"cm-variable\">myContract</span>,\n});</span></code></pre></span>\n\t</div>\n</div>\n<div class=\"magic-block-textarea\"><h1 class=\"header-scroll\"><div class=\"anchor waypoint\" id=\"section-example-data-contract\"></div>Example Data Contract<a class=\"fa fa-anchor\" href=\"#section-example-data-contract\"></a></h1>\n<p>The following example response shows a retrieved contract:</p>\n\n</div>\n<div class=\"magic-block-code\">\n\t<ul class=\"block-code-header\">\n\t\t<li><a href=\"\" ng-click=\"showCode(0)\" ng-class=\"{active: (0 == tab)}\">JSON</a></li>\n\t</ul>\n\t<div class=\"block-code-code\"><span ng-if=\"tab == 0\">\n\t\t\t<button ng-click=\"copyCode(616)\" class=\"copy-code-button\"><span ng-show=\"!copied\" class=\"fa fa-clipboard\"></span><span ng-show=\"copied\" class=\"fa fa-check\"></span></button>\n\t\t\t<textarea ng-non-bindable=\"ng-non-bindable\" style=\"position: absolute; left: -10000px;\" id=\"text-code-616\">{\n   &quot;protocolVersion&quot;:0,\n   &quot;$id&quot;:&quot;C96rCVpck4RdBQXG3zzP5KH4RKzfKVTsmTauu8FQenJi&quot;,\n   &quot;$schema&quot;:&quot;https://schema.dash.org/dpp-0-4-0/meta/data-contract&quot;,\n   &quot;ownerId&quot;:&quot;FgPx8YHbWv4rMeiP52DfmnAXGtjiCiSaNKCbgT7eCRxh&quot;,\n   &quot;documents&quot;:{\n      &quot;note&quot;:{\n         &quot;properties&quot;:{\n            &quot;message&quot;:{\n               &quot;type&quot;:&quot;string&quot;\n            }\n         },\n         &quot;additionalProperties&quot;:false\n      }\n   }\n}</textarea>\n\t\t\t<pre id=\"code-616\"><code><span class='cm-s-neo'>{\n   <span class=\"cm-property\">\"protocolVersion\"</span>:<span class=\"cm-number\">0</span>,\n   <span class=\"cm-property\">\"$id\"</span>:<span class=\"cm-string\">\"C96rCVpck4RdBQXG3zzP5KH4RKzfKVTsmTauu8FQenJi\"</span>,\n   <span class=\"cm-property\">\"$schema\"</span>:<span class=\"cm-string\">\"https:&#47;&#47;schema.dash.org&#47;dpp-0-4-0&#47;meta&#47;data-contract\"</span>,\n   <span class=\"cm-property\">\"ownerId\"</span>:<span class=\"cm-string\">\"FgPx8YHbWv4rMeiP52DfmnAXGtjiCiSaNKCbgT7eCRxh\"</span>,\n   <span class=\"cm-property\">\"documents\"</span>:{\n      <span class=\"cm-property\">\"note\"</span>:{\n         <span class=\"cm-property\">\"properties\"</span>:{\n            <span class=\"cm-property\">\"message\"</span>:{\n               <span class=\"cm-property\">\"type\"</span>:<span class=\"cm-string\">\"string\"</span>\n            }\n         },\n         <span class=\"cm-property\">\"additionalProperties\"</span>:<span class=\"cm-atom\">false</span>\n      }\n   }\n}</span></code></pre></span>\n\t</div>\n</div>\n<div class=\"magic-block-callout type-info no-title\"><span class=\"noTitleIcon\"><i title=\"Info\" class=\"fa fa-info-circle\"></i></span>\n\t<div class=\"callout-body\"><p>Please refer to the <a href=\"reference-data-contracts\">data contract reference page</a> for more comprehensive details related to contracts and documents.</p>\n\n\t</div>\n</div>\n<div class=\"magic-block-textarea\"><h1 class=\"header-scroll\"><div class=\"anchor waypoint\" id=\"section-whats-happening\"></div>What&#39;s Happening<a class=\"fa fa-anchor\" href=\"#section-whats-happening\"></a></h1>\n<p>After we initialize the Client, we request a contract. The <code>platform.contracts.get</code> method takes a single argument: a contract ID. After the contract is retrieved, it is displayed on the console.</p>\n<p>The second code example shows how the contract could be assigned a name to make it easily accessible without initializing an additional client.</p>\n\n</div>"
}