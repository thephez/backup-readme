{
 "metadata": {
  "keywords": "",
  "robots": "index",
  "image": [],
  "title": "",
  "description": ""
 },
 "mdx": {
  "altBody": "",
  "status": "rdmd"
 },
 "api": {
  "method": "get",
  "url": "",
  "auth": "required",
  "results": {
   "codes": [
    {
     "status": 200,
     "language": "json",
     "code": "{}",
     "name": ""
    },
    {
     "status": 400,
     "language": "json",
     "code": "{}",
     "name": ""
    }
   ]
  },
  "params": [],
  "examples": {
   "codes": []
  }
 },
 "next": {
  "description": "",
  "pages": []
 },
 "algolia": {
  "translationFailure": false,
  "publishPending": false,
  "recordCount": 5,
  "updatedAt": "2023-09-12T12:55:18.292Z"
 },
 "reusableContent": [],
 "_id": "64f8a9df750465004742adbb",
 "title": "Retrieve a Name",
 "updates": [],
 "type": "basic",
 "slug": "tutorial-retrieve-a-name",
 "excerpt": "Search for a name in the Dash Platform Name Service (DPNS)",
 "body": "In this tutorial we will retrieve the name created in the [Register a Name for an Identity tutorial](tutorial-register-a-name-for-an-identity). Additional details regarding identities can be found in the [Identity description](explanation-identity).\n\n## Prerequisites\n\n- [General prerequisites](tutorials-introduction#prerequisites) (Node.js / Dash SDK installed)\n\n# Code\n\n```javascript JavaScript - Resolve by Name\nconst Dash = require('dash');\n\nconst client = new Dash.Client({ network: 'testnet' });\n\nconst retrieveName = async () => {\n  // Retrieve by full name (e.g., myname.dash)\n  return client.platform.names.resolve('<identity name>.dash');\n};\n\nretrieveName()\n  .then((d) => console.log('Name retrieved:\\n', d.getData()))\n  .catch((e) => console.error('Something went wrong:\\n', e))\n  .finally(() => client.disconnect());\n```\n```javascript JavaScript - Revolve by Record\nconst Dash = require('dash');\n\nconst client = new Dash.Client({ network: 'testnet' });\n\nconst retrieveNameByRecord = async () => {\n  // Retrieve by a name's identity ID\n  return client.platform.names.resolveByRecord(\n    'dashUniqueIdentityId',\n    '<identity id>',\n  );\n};\n\nretrieveNameByRecord()\n  .then((d) => console.log('Name retrieved:\\n', d[0].getData()))\n  .catch((e) => console.error('Something went wrong:\\n', e))\n  .finally(() => client.disconnect());\n```\n```javascript JavaScript - Search for Name\nconst Dash = require('dash');\n\nconst client = new Dash.Client({ network: 'testnet' });\n\nconst retrieveNameBySearch = async () => {\n  // Search for names (e.g. `user*`)\n  return client.platform.names.search('user', 'dash');\n};\n\nretrieveNameBySearch()\n  .then((d) => {\n    for (const name of d) {\n      console.log('Name retrieved:\\n', name.getData());\n    }\n  })\n  .catch((e) => console.error('Something went wrong:\\n', e))\n  .finally(() => client.disconnect());\n```\n\n# Example Name\n\nThe following example response shows a retrieved name (`user-9999.dash`):\n\n```json\n{\n  \"label\": \"Alice\",\n  \"normalizedLabel\": \"alice\",\n  \"normalizedParentDomainName\": \"dash\",\n  \"preorderSalt\": \"lQEiixHMO5TJmbKwKtavg6eAkxuXzvSlrs/OX9glcYI=\",\n  \"records\": {\n    \"dashAliasIdentityId\": null,\n    \"dashUniqueIdentityId\": \"YhCPn6pSbZ11hCiFmFL6WJkmC3GSwuUSzhS4QAy84EF\"\n  },\n  \"subdomainRules\": {\n    \"allowSubdomains\": false\n  }\n}\n```\n\n# What's Happening\n\nAfter we initialize the Client, we request a name. The [code examples](#code) demonstrate the three ways to request a name:\n\n1. Resolve by name. The `platform.names.resolve` method takes a single argument: a fully-qualified name (e.g., `user-9999.dash`). \n2. Resolve by record. The `platform.names.resolveByRecord` method takes two arguments: the record type (e.g., `dashUniqueIdentityId`) and the record value to resolve. \n3. Search. The `platform.names.search` method takes two arguments: the leading characters of the name to search for and the domain to search (e.g., `dash` for names in the `*.dash` domain). The search will return names that begin the with string provided in the first parameter.\n\nAfter the name is retrieved, it is displayed on the console.",
 "order": 6,
 "isReference": false,
 "hidden": false,
 "sync_unique": "",
 "link_url": "",
 "link_external": false,
 "pendingAlgoliaPublish": false,
 "previousSlug": "retrieve-a-name",
 "slugUpdatedAt": "2020-08-27T14:12:15.080Z",
 "createdAt": "2020-08-27T14:08:17.006Z",
 "updatedAt": "2023-09-12T12:55:18.115Z",
 "user": "5b8400d7185d5e00036dcc3b",
 "category": "64f8a9df750465004742ad6e",
 "project": "5bda01cad172e200499a20a9",
 "version": "64f8a9df750465004742ae1d",
 "__v": 0,
 "parentDoc": "64f8a9df750465004742adc9",
 "deprecated": false,
 "icon": "",
 "revision": 6,
 "isApi": false,
 "id": "64f8a9df750465004742adbb",
 "body_html": "<p>In this tutorial we will retrieve the name created in the <a href=\"tutorial-register-a-name-for-an-identity\" target=\"\" title=\"\">Register a Name for an Identity tutorial</a>. Additional details regarding identities can be found in the <a href=\"explanation-identity\" target=\"\" title=\"\">Identity description</a>.</p>\n<h2 class=\"heading heading-2 header-scroll\" align=\"\"><div class=\"heading-anchor anchor waypoint\" id=\"prerequisites\"></div><div class=\"heading-text\"><div id=\"section-prerequisites\" class=\"heading-anchor_backwardsCompatibility\"></div>Prerequisites</div><a aria-label=\"Skip link to Prerequisites\" class=\"heading-anchor-icon fa fa-anchor\" href=\"#prerequisites\"></a></h2>\n<ul>\n<li><a href=\"tutorials-introduction#prerequisites\" target=\"\" title=\"\">General prerequisites</a> (Node.js / Dash SDK installed)</li>\n</ul>\n<h1 class=\"heading heading-1 header-scroll\" align=\"\"><div class=\"heading-anchor anchor waypoint\" id=\"code\"></div><div class=\"heading-text\"><div id=\"section-code\" class=\"heading-anchor_backwardsCompatibility\"></div>Code</div><a aria-label=\"Skip link to Code\" class=\"heading-anchor-icon fa fa-anchor\" href=\"#code\"></a></h1>\n<div class=\"CodeTabs CodeTabs_initial theme-light\"><div class=\"CodeTabs-toolbar\" role=\"tablist\"><button aria-selected=\"true\" class=\"CodeTabs_active\" role=\"tab\" type=\"button\">JavaScript - Resolve by Name</button><button aria-selected=\"false\" class=\"\" role=\"tab\" type=\"button\">JavaScript - Revolve by Record</button><button aria-selected=\"false\" class=\"\" role=\"tab\" type=\"button\">JavaScript - Search for Name</button></div><div class=\"CodeTabs-inner\" role=\"tabpanel\"><pre><button aria-label=\"Copy Code\" class=\"rdmd-code-copy fa\"></button><code class=\"rdmd-code lang-javascript theme-light\" data-lang=\"javascript\" name=\"JavaScript - Resolve by Name\" tabindex=\"0\">const Dash = require(&#x27;dash&#x27;);\n\nconst client = new Dash.Client({ network: &#x27;testnet&#x27; });\n\nconst retrieveName = async () =&gt; {\n  // Retrieve by full name (e.g., myname.dash)\n  return client.platform.names.resolve(&#x27;&lt;identity name&gt;.dash&#x27;);\n};\n\nretrieveName()\n  .then((d) =&gt; console.log(&#x27;Name retrieved:\\n&#x27;, d.getData()))\n  .catch((e) =&gt; console.error(&#x27;Something went wrong:\\n&#x27;, e))\n  .finally(() =&gt; client.disconnect());\n</code></pre><pre><button aria-label=\"Copy Code\" class=\"rdmd-code-copy fa\"></button><code class=\"rdmd-code lang-javascript theme-light\" data-lang=\"javascript\" name=\"JavaScript - Revolve by Record\" tabindex=\"0\">const Dash = require(&#x27;dash&#x27;);\n\nconst client = new Dash.Client({ network: &#x27;testnet&#x27; });\n\nconst retrieveNameByRecord = async () =&gt; {\n  // Retrieve by a name&#x27;s identity ID\n  return client.platform.names.resolveByRecord(\n    &#x27;dashUniqueIdentityId&#x27;,\n    &#x27;&lt;identity id&gt;&#x27;,\n  );\n};\n\nretrieveNameByRecord()\n  .then((d) =&gt; console.log(&#x27;Name retrieved:\\n&#x27;, d[0].getData()))\n  .catch((e) =&gt; console.error(&#x27;Something went wrong:\\n&#x27;, e))\n  .finally(() =&gt; client.disconnect());\n</code></pre><pre><button aria-label=\"Copy Code\" class=\"rdmd-code-copy fa\"></button><code class=\"rdmd-code lang-javascript theme-light\" data-lang=\"javascript\" name=\"JavaScript - Search for Name\" tabindex=\"0\">const Dash = require(&#x27;dash&#x27;);\n\nconst client = new Dash.Client({ network: &#x27;testnet&#x27; });\n\nconst retrieveNameBySearch = async () =&gt; {\n  // Search for names (e.g. `user*`)\n  return client.platform.names.search(&#x27;user&#x27;, &#x27;dash&#x27;);\n};\n\nretrieveNameBySearch()\n  .then((d) =&gt; {\n    for (const name of d) {\n      console.log(&#x27;Name retrieved:\\n&#x27;, name.getData());\n    }\n  })\n  .catch((e) =&gt; console.error(&#x27;Something went wrong:\\n&#x27;, e))\n  .finally(() =&gt; client.disconnect());\n</code></pre></div></div>\n<h1 class=\"heading heading-1 header-scroll\" align=\"\"><div class=\"heading-anchor anchor waypoint\" id=\"example-name\"></div><div class=\"heading-text\"><div id=\"section-example-name\" class=\"heading-anchor_backwardsCompatibility\"></div>Example Name</div><a aria-label=\"Skip link to Example Name\" class=\"heading-anchor-icon fa fa-anchor\" href=\"#example-name\"></a></h1>\n<p>The following example response shows a retrieved name (<button aria-label=\"Copy Code\" class=\"rdmd-code-copy fa\"></button><code class=\"rdmd-code lang- theme-light\" data-lang=\"\" name=\"\" tabindex=\"0\">user-9999.dash</code>):</p>\n<div class=\"CodeTabs CodeTabs_initial theme-light\"><div class=\"CodeTabs-toolbar\" role=\"tablist\"><button aria-selected=\"true\" class=\"CodeTabs_active\" role=\"tab\" type=\"button\">JSON</button></div><div class=\"CodeTabs-inner\" role=\"tabpanel\"><pre><button aria-label=\"Copy Code\" class=\"rdmd-code-copy fa\"></button><code class=\"rdmd-code lang-json theme-light\" data-lang=\"json\" name=\"\" tabindex=\"0\">{\n  &quot;label&quot;: &quot;Alice&quot;,\n  &quot;normalizedLabel&quot;: &quot;alice&quot;,\n  &quot;normalizedParentDomainName&quot;: &quot;dash&quot;,\n  &quot;preorderSalt&quot;: &quot;lQEiixHMO5TJmbKwKtavg6eAkxuXzvSlrs/OX9glcYI=&quot;,\n  &quot;records&quot;: {\n    &quot;dashAliasIdentityId&quot;: null,\n    &quot;dashUniqueIdentityId&quot;: &quot;YhCPn6pSbZ11hCiFmFL6WJkmC3GSwuUSzhS4QAy84EF&quot;\n  },\n  &quot;subdomainRules&quot;: {\n    &quot;allowSubdomains&quot;: false\n  }\n}\n</code></pre></div></div>\n<h1 class=\"heading heading-1 header-scroll\" align=\"\"><div class=\"heading-anchor anchor waypoint\" id=\"whats-happening\"></div><div class=\"heading-text\"><div id=\"section-whats-happening\" class=\"heading-anchor_backwardsCompatibility\"></div>What&#x27;s Happening</div><a aria-label=\"Skip link to What&#x27;s Happening\" class=\"heading-anchor-icon fa fa-anchor\" href=\"#whats-happening\"></a></h1>\n<p>After we initialize the Client, we request a name. The <a href=\"#code\" target=\"\" title=\"\">code examples</a> demonstrate the three ways to request a name:</p>\n<ol>\n<li>Resolve by name. The <button aria-label=\"Copy Code\" class=\"rdmd-code-copy fa\"></button><code class=\"rdmd-code lang- theme-light\" data-lang=\"\" name=\"\" tabindex=\"0\">platform.names.resolve</code> method takes a single argument: a fully-qualified name (e.g., <button aria-label=\"Copy Code\" class=\"rdmd-code-copy fa\"></button><code class=\"rdmd-code lang- theme-light\" data-lang=\"\" name=\"\" tabindex=\"0\">user-9999.dash</code>). </li>\n<li>Resolve by record. The <button aria-label=\"Copy Code\" class=\"rdmd-code-copy fa\"></button><code class=\"rdmd-code lang- theme-light\" data-lang=\"\" name=\"\" tabindex=\"0\">platform.names.resolveByRecord</code> method takes two arguments: the record type (e.g., <button aria-label=\"Copy Code\" class=\"rdmd-code-copy fa\"></button><code class=\"rdmd-code lang- theme-light\" data-lang=\"\" name=\"\" tabindex=\"0\">dashUniqueIdentityId</code>) and the record value to resolve. </li>\n<li>Search. The <button aria-label=\"Copy Code\" class=\"rdmd-code-copy fa\"></button><code class=\"rdmd-code lang- theme-light\" data-lang=\"\" name=\"\" tabindex=\"0\">platform.names.search</code> method takes two arguments: the leading characters of the name to search for and the domain to search (e.g., <button aria-label=\"Copy Code\" class=\"rdmd-code-copy fa\"></button><code class=\"rdmd-code lang- theme-light\" data-lang=\"\" name=\"\" tabindex=\"0\">dash</code> for names in the <button aria-label=\"Copy Code\" class=\"rdmd-code-copy fa\"></button><code class=\"rdmd-code lang- theme-light\" data-lang=\"\" name=\"\" tabindex=\"0\">*.dash</code> domain). The search will return names that begin the with string provided in the first parameter.</li>\n</ol>\n<p>After the name is retrieved, it is displayed on the console.</p>"
}