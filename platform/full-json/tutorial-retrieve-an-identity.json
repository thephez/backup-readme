{
 "metadata": {
  "image": [],
  "title": "",
  "description": ""
 },
 "api": {
  "method": "get",
  "url": "",
  "auth": "required",
  "results": {
   "codes": [
    {
     "name": "",
     "code": "{}",
     "language": "json",
     "status": 200
    },
    {
     "name": "",
     "code": "{}",
     "language": "json",
     "status": 400
    }
   ]
  },
  "params": []
 },
 "next": {
  "description": "",
  "pages": [
   {
    "type": "doc",
    "icon": "file-text-o",
    "name": "Register a Name for an Identity",
    "slug": "tutorial-register-a-name-for-an-identity",
    "category": "Tutorials"
   },
   {
    "type": "doc",
    "icon": "file-text-o",
    "name": "Topup an Identity's Balance",
    "slug": "tutorial-topup-an-identity-balance",
    "category": "Tutorials"
   }
  ]
 },
 "algolia": {
  "recordCount": 5,
  "publishPending": false,
  "updatedAt": "2023-09-06T16:36:46.513Z"
 },
 "title": "Retrieve an Identity",
 "icon": "",
 "updates": [],
 "type": "basic",
 "slug": "tutorial-retrieve-an-identity",
 "excerpt": "Retrieve details for a Dash Platform Identity",
 "body": "# Overview\n\nIn this tutorial we will retrieve the identity created in the [Register an Identity tutorial](tutorial-register-an-identity).\n\n## Prerequisites\n- [General prerequisites](tutorials-introduction#prerequisites) (Node.js / Dash SDK installed)\n- A Dash Platform Identity: [Tutorial: Register an Identity](tutorial-register-an-identity) \n\n# Code\n\n```javascript\nconst Dash = require('dash');\n\nconst client = new Dash.Client({ network: 'testnet' });\n\nconst retrieveIdentity = async () => {\n  return client.platform.identities.get('an identity ID goes here');\n};\n\nretrieveIdentity()\n  .then((d) => console.log('Identity retrieved:\\n', d.toJSON()))\n  .catch((e) => console.error('Something went wrong:\\n', e))\n  .finally(() => client.disconnect());\n``` \n\n# Example Identity\n\nThe following example response shows a retrieved identity:\n\n```json\n{\n   \"protocolVersion\":0,\n   \"id\":\"6Jz8pFZFhssKSTacgQmZP14zGZNnFYZFKSbx4WVAJFy3\",\n   \"publicKeys\":[\n      {\n         \"id\":0,\n         \"type\":0,\n         \"data\":\"A4zZl0EaRBB6IlDbyR80YUM2l02qqNUCoIizkQxubtxi\"\n      }\n   ],\n   \"balance\":10997588,\n   \"revision\":0\n}\n``` \n\n# What's Happening\n\nAfter we initialize the Client, we request an identity. The `platform.identities.get` method takes a single argument: an identity ID. After the identity is retrieved, it is displayed on the console.",
 "order": 1,
 "isReference": false,
 "deprecated": false,
 "hidden": false,
 "sync_unique": "",
 "link_url": "",
 "link_external": false,
 "previousSlug": "identity-retrieve-an-identity",
 "slugUpdatedAt": "2021-03-11T18:07:07.511Z",
 "revision": 3,
 "_id": "64f8a9df750465004742add0",
 "pendingAlgoliaPublish": false,
 "createdAt": "2021-03-11T18:06:49.085Z",
 "updatedAt": "2023-01-22T17:09:35.818Z",
 "user": "62b2101422da70001ee51d95",
 "parentDoc": "64f8a9df750465004742adc9",
 "category": "64f8a9df750465004742ad6e",
 "project": "5bda01cad172e200499a20a9",
 "version": "64f8a9df750465004742ae1d",
 "__v": 2,
 "isApi": false,
 "id": "64f8a9df750465004742add0",
 "body_html": "<div class=\"magic-block-textarea\"><h1 class=\"header-scroll\"><div class=\"anchor waypoint\" id=\"section-overview\"></div>Overview<a class=\"fa fa-anchor\" href=\"#section-overview\"></a></h1>\n<p>In this tutorial we will retrieve the identity created in the <a href=\"tutorial-register-an-identity\">Register an Identity tutorial</a>.</p>\n<h2 class=\"header-scroll\"><div class=\"anchor waypoint\" id=\"section-prerequisites\"></div>Prerequisites<a class=\"fa fa-anchor\" href=\"#section-prerequisites\"></a></h2>\n<ul>\n<li ><a href=\"tutorials-introduction#prerequisites\">General prerequisites</a> (Node.js / Dash SDK installed)</li><li >A Dash Platform Identity: <a href=\"tutorial-register-an-identity\">Tutorial: Register an Identity</a> </li></ul>\n<h1 class=\"header-scroll\"><div class=\"anchor waypoint\" id=\"section-code\"></div>Code<a class=\"fa fa-anchor\" href=\"#section-code\"></a></h1>\n<pre><code class=\"lang-javascript\"><span class='cm-s-neo'><span class=\"cm-keyword\">const</span> <span class=\"cm-def\">Dash</span> <span class=\"cm-operator\">=</span> <span class=\"cm-variable\">require</span>(<span class=\"cm-string\">'dash'</span>);\n\n<span class=\"cm-keyword\">const</span> <span class=\"cm-def\">client</span> <span class=\"cm-operator\">=</span> <span class=\"cm-keyword\">new</span> <span class=\"cm-variable\">Dash</span>.<span class=\"cm-property\">Client</span>({ <span class=\"cm-property\">network</span>: <span class=\"cm-string\">'testnet'</span> });\n\n<span class=\"cm-keyword\">const</span> <span class=\"cm-def\">retrieveIdentity</span> <span class=\"cm-operator\">=</span> <span class=\"cm-keyword\">async</span> () <span class=\"cm-operator\">=&gt;</span> {\n  <span class=\"cm-keyword\">return</span> <span class=\"cm-variable\">client</span>.<span class=\"cm-property\">platform</span>.<span class=\"cm-property\">identities</span>.<span class=\"cm-property\">get</span>(<span class=\"cm-string\">'an identity ID goes here'</span>);\n};\n\n<span class=\"cm-variable\">retrieveIdentity</span>()\n  .<span class=\"cm-property\">then</span>((<span class=\"cm-def\">d</span>) <span class=\"cm-operator\">=&gt;</span> <span class=\"cm-variable\">console</span>.<span class=\"cm-property\">log</span>(<span class=\"cm-string\">'Identity retrieved:\\n'</span>, <span class=\"cm-variable-2\">d</span>.<span class=\"cm-property\">toJSON</span>()))\n  .<span class=\"cm-property\">catch</span>((<span class=\"cm-def\">e</span>) <span class=\"cm-operator\">=&gt;</span> <span class=\"cm-variable\">console</span>.<span class=\"cm-property\">error</span>(<span class=\"cm-string\">'Something went wrong:\\n'</span>, <span class=\"cm-variable-2\">e</span>))\n  .<span class=\"cm-property\">finally</span>(() <span class=\"cm-operator\">=&gt;</span> <span class=\"cm-variable\">client</span>.<span class=\"cm-property\">disconnect</span>());</span>\n</code></pre>\n<h1 class=\"header-scroll\"><div class=\"anchor waypoint\" id=\"section-example-identity\"></div>Example Identity<a class=\"fa fa-anchor\" href=\"#section-example-identity\"></a></h1>\n<p>The following example response shows a retrieved identity:</p>\n<pre><code class=\"lang-json\"><span class='cm-s-neo'>{\n   <span class=\"cm-property\">\"protocolVersion\"</span>:<span class=\"cm-number\">0</span>,\n   <span class=\"cm-property\">\"id\"</span>:<span class=\"cm-string\">\"6Jz8pFZFhssKSTacgQmZP14zGZNnFYZFKSbx4WVAJFy3\"</span>,\n   <span class=\"cm-property\">\"publicKeys\"</span>:[\n      {\n         <span class=\"cm-property\">\"id\"</span>:<span class=\"cm-number\">0</span>,\n         <span class=\"cm-property\">\"type\"</span>:<span class=\"cm-number\">0</span>,\n         <span class=\"cm-property\">\"data\"</span>:<span class=\"cm-string\">\"A4zZl0EaRBB6IlDbyR80YUM2l02qqNUCoIizkQxubtxi\"</span>\n      }\n   ],\n   <span class=\"cm-property\">\"balance\"</span>:<span class=\"cm-number\">10997588</span>,\n   <span class=\"cm-property\">\"revision\"</span>:<span class=\"cm-number\">0</span>\n}</span>\n</code></pre>\n<h1 class=\"header-scroll\"><div class=\"anchor waypoint\" id=\"section-whats-happening\"></div>What&#39;s Happening<a class=\"fa fa-anchor\" href=\"#section-whats-happening\"></a></h1>\n<p>After we initialize the Client, we request an identity. The <code>platform.identities.get</code> method takes a single argument: an identity ID. After the identity is retrieved, it is displayed on the console.</p>\n\n</div>"
}