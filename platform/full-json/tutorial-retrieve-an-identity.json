{
 "pendingAlgoliaPublish": false, 
 "parentDoc": "60e604b4762bd40057ebe135", 
 "excerpt": "Retrieve details for a Dash Platform Identity", 
 "api": {
  "url": "", 
  "params": [], 
  "method": "get", 
  "auth": "required", 
  "results": {
   "codes": [
    {
     "status": 200, 
     "code": "{}", 
     "name": "", 
     "language": "json"
    }, 
    {
     "status": 400, 
     "code": "{}", 
     "name": "", 
     "language": "json"
    }
   ]
  }
 }, 
 "previousSlug": "identity-retrieve-an-identity", 
 "updatedAt": "2021-07-26T13:51:16.876Z", 
 "id": "60e604b4762bd40057ebe13e", 
 "sync_unique": "", 
 "isApi": false, 
 "createdAt": "2021-03-11T18:06:49.085Z", 
 "category": "60e604b4762bd40057ebe0da", 
 "title": "Retrieve an Identity", 
 "next": {
  "description": "", 
  "pages": [
   {
    "category": "Tutorials", 
    "slug": "tutorial-register-a-name-for-an-identity", 
    "type": "doc", 
    "name": "Register a Name for an Identity", 
    "icon": "file-text-o"
   }, 
   {
    "category": "Tutorials", 
    "slug": "tutorial-topup-an-identity-balance", 
    "type": "doc", 
    "name": "Topup an Identity's Balance", 
    "icon": "file-text-o"
   }
  ]
 }, 
 "version": "60e604b4762bd40057ebe142", 
 "slugUpdatedAt": "2021-03-11T18:07:07.511Z", 
 "hidden": false, 
 "type": "basic", 
 "metadata": {
  "image": [], 
  "description": "", 
  "title": ""
 }, 
 "body": "# Overview\n\nIn this tutorial we will retrieve the identity created in the [Register an Identity tutorial](tutorial-register-an-identity).\n\n## Prerequisites\n- [node.js](https://nodejs.org/en/) (v12+)\n- Basic familiarity with JavaScript asychronous functions using [async/await](https://developer.mozilla.org/en-US/docs/Learn/JavaScript/Asynchronous/Async_await)\n- The Dash JavaScript SDK is initialized (covered in [Connecting to a Network](tutorial-connecting-to-testnet))\n- A Dash Platform Identity: [Tutorial: Register an Identity](tutorial-register-an-identity) \n\n# Code\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"const Dash = require('dash');\\n\\nconst client = new Dash.Client();\\n\\nconst retrieveIdentity = async () => {\\n  return client.platform.identities.get('an identity ID goes here');\\n};\\n\\nretrieveIdentity()\\n  .then((d) => console.log('Identity retrieved:\\\\n', d.toJSON()))\\n  .catch((e) => console.error('Something went wrong:\\\\n', e))\\n  .finally(() => client.disconnect());\",\n      \"language\": \"javascript\"\n    }\n  ]\n}\n[/block]\n# Example Identity\n\nThe following example response shows a retrieved identity:\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"{\\n   \\\"protocolVersion\\\":0,\\n   \\\"id\\\":\\\"6Jz8pFZFhssKSTacgQmZP14zGZNnFYZFKSbx4WVAJFy3\\\",\\n   \\\"publicKeys\\\":[\\n      {\\n         \\\"id\\\":0,\\n         \\\"type\\\":0,\\n         \\\"data\\\":\\\"A4zZl0EaRBB6IlDbyR80YUM2l02qqNUCoIizkQxubtxi\\\"\\n      }\\n   ],\\n   \\\"balance\\\":10997588,\\n   \\\"revision\\\":0\\n}\",\n      \"language\": \"json\"\n    }\n  ]\n}\n[/block]\n# What's Happening\n\nAfter we initialize the Client, we request an identity. The `platform.identities.get` method takes a single argument: an identity ID. After the identity is retrieved, it is displayed on the console.", 
 "link_external": false, 
 "body_html": "<div class=\"magic-block-textarea\"><h1 class=\"header-scroll\"><div class=\"anchor waypoint\" id=\"section-overview\"></div>Overview<a class=\"fa fa-anchor\" href=\"#section-overview\"></a></h1>\n<p>In this tutorial we will retrieve the identity created in the <a href=\"tutorial-register-an-identity\">Register an Identity tutorial</a>.</p>\n<h2 class=\"header-scroll\"><div class=\"anchor waypoint\" id=\"section-prerequisites\"></div>Prerequisites<a class=\"fa fa-anchor\" href=\"#section-prerequisites\"></a></h2>\n<ul>\n<li ><a href=\"https://nodejs.org/en/\">node.js</a> (v12+)</li><li >Basic familiarity with JavaScript asychronous functions using <a href=\"https://developer.mozilla.org/en-US/docs/Learn/JavaScript/Asynchronous/Async_await\">async/await</a></li><li >The Dash JavaScript SDK is initialized (covered in <a href=\"tutorial-connecting-to-testnet\">Connecting to a Network</a>)</li><li >A Dash Platform Identity: <a href=\"tutorial-register-an-identity\">Tutorial: Register an Identity</a> </li></ul>\n<h1 class=\"header-scroll\"><div class=\"anchor waypoint\" id=\"section-code\"></div>Code<a class=\"fa fa-anchor\" href=\"#section-code\"></a></h1>\n\n</div>\n<div class=\"magic-block-code\">\n\t<ul class=\"block-code-header\">\n\t\t<li><a href=\"\" ng-click=\"showCode(0)\" ng-class=\"{active: (0 == tab)}\">JavaScript</a></li>\n\t</ul>\n\t<div class=\"block-code-code\"><span ng-if=\"tab == 0\">\n\t\t\t<button ng-click=\"copyCode(528)\" class=\"copy-code-button\"><span ng-show=\"!copied\" class=\"fa fa-clipboard\"></span><span ng-show=\"copied\" class=\"fa fa-check\"></span></button>\n\t\t\t<textarea ng-non-bindable=\"ng-non-bindable\" style=\"position: absolute; left: -10000px;\" id=\"text-code-528\">const Dash = require('dash');\n\nconst client = new Dash.Client();\n\nconst retrieveIdentity = async () =&gt; {\n  return client.platform.identities.get('an identity ID goes here');\n};\n\nretrieveIdentity()\n  .then((d) =&gt; console.log('Identity retrieved:\\n', d.toJSON()))\n  .catch((e) =&gt; console.error('Something went wrong:\\n', e))\n  .finally(() =&gt; client.disconnect());</textarea>\n\t\t\t<pre id=\"code-528\"><code><span class='cm-s-neo'><span class=\"cm-keyword\">const</span> <span class=\"cm-def\">Dash</span> <span class=\"cm-operator\">=</span> <span class=\"cm-variable\">require</span>(<span class=\"cm-string\">'dash'</span>);\n\n<span class=\"cm-keyword\">const</span> <span class=\"cm-def\">client</span> <span class=\"cm-operator\">=</span> <span class=\"cm-keyword\">new</span> <span class=\"cm-variable\">Dash</span>.<span class=\"cm-property\">Client</span>();\n\n<span class=\"cm-keyword\">const</span> <span class=\"cm-def\">retrieveIdentity</span> <span class=\"cm-operator\">=</span> <span class=\"cm-keyword\">async</span> () <span class=\"cm-operator\">=&gt;</span> {\n  <span class=\"cm-keyword\">return</span> <span class=\"cm-variable\">client</span>.<span class=\"cm-property\">platform</span>.<span class=\"cm-property\">identities</span>.<span class=\"cm-property\">get</span>(<span class=\"cm-string\">'an identity ID goes here'</span>);\n};\n\n<span class=\"cm-variable\">retrieveIdentity</span>()\n  .<span class=\"cm-property\">then</span>((<span class=\"cm-def\">d</span>) <span class=\"cm-operator\">=&gt;</span> <span class=\"cm-variable\">console</span>.<span class=\"cm-property\">log</span>(<span class=\"cm-string\">'Identity retrieved:\\n'</span>, <span class=\"cm-variable-2\">d</span>.<span class=\"cm-property\">toJSON</span>()))\n  .<span class=\"cm-property\">catch</span>((<span class=\"cm-def\">e</span>) <span class=\"cm-operator\">=&gt;</span> <span class=\"cm-variable\">console</span>.<span class=\"cm-property\">error</span>(<span class=\"cm-string\">'Something went wrong:\\n'</span>, <span class=\"cm-variable-2\">e</span>))\n  .<span class=\"cm-property\">finally</span>(() <span class=\"cm-operator\">=&gt;</span> <span class=\"cm-variable\">client</span>.<span class=\"cm-property\">disconnect</span>());</span></code></pre></span>\n\t</div>\n</div>\n<div class=\"magic-block-textarea\"><h1 class=\"header-scroll\"><div class=\"anchor waypoint\" id=\"section-example-identity\"></div>Example Identity<a class=\"fa fa-anchor\" href=\"#section-example-identity\"></a></h1>\n<p>The following example response shows a retrieved identity:</p>\n\n</div>\n<div class=\"magic-block-code\">\n\t<ul class=\"block-code-header\">\n\t\t<li><a href=\"\" ng-click=\"showCode(0)\" ng-class=\"{active: (0 == tab)}\">JSON</a></li>\n\t</ul>\n\t<div class=\"block-code-code\"><span ng-if=\"tab == 0\">\n\t\t\t<button ng-click=\"copyCode(237)\" class=\"copy-code-button\"><span ng-show=\"!copied\" class=\"fa fa-clipboard\"></span><span ng-show=\"copied\" class=\"fa fa-check\"></span></button>\n\t\t\t<textarea ng-non-bindable=\"ng-non-bindable\" style=\"position: absolute; left: -10000px;\" id=\"text-code-237\">{\n   &quot;protocolVersion&quot;:0,\n   &quot;id&quot;:&quot;6Jz8pFZFhssKSTacgQmZP14zGZNnFYZFKSbx4WVAJFy3&quot;,\n   &quot;publicKeys&quot;:[\n      {\n         &quot;id&quot;:0,\n         &quot;type&quot;:0,\n         &quot;data&quot;:&quot;A4zZl0EaRBB6IlDbyR80YUM2l02qqNUCoIizkQxubtxi&quot;\n      }\n   ],\n   &quot;balance&quot;:10997588,\n   &quot;revision&quot;:0\n}</textarea>\n\t\t\t<pre id=\"code-237\"><code><span class='cm-s-neo'>{\n   <span class=\"cm-property\">\"protocolVersion\"</span>:<span class=\"cm-number\">0</span>,\n   <span class=\"cm-property\">\"id\"</span>:<span class=\"cm-string\">\"6Jz8pFZFhssKSTacgQmZP14zGZNnFYZFKSbx4WVAJFy3\"</span>,\n   <span class=\"cm-property\">\"publicKeys\"</span>:[\n      {\n         <span class=\"cm-property\">\"id\"</span>:<span class=\"cm-number\">0</span>,\n         <span class=\"cm-property\">\"type\"</span>:<span class=\"cm-number\">0</span>,\n         <span class=\"cm-property\">\"data\"</span>:<span class=\"cm-string\">\"A4zZl0EaRBB6IlDbyR80YUM2l02qqNUCoIizkQxubtxi\"</span>\n      }\n   ],\n   <span class=\"cm-property\">\"balance\"</span>:<span class=\"cm-number\">10997588</span>,\n   <span class=\"cm-property\">\"revision\"</span>:<span class=\"cm-number\">0</span>\n}</span></code></pre></span>\n\t</div>\n</div>\n<div class=\"magic-block-textarea\"><h1 class=\"header-scroll\"><div class=\"anchor waypoint\" id=\"section-whats-happening\"></div>What&#39;s Happening<a class=\"fa fa-anchor\" href=\"#section-whats-happening\"></a></h1>\n<p>After we initialize the Client, we request an identity. The <code>platform.identities.get</code> method takes a single argument: an identity ID. After the identity is retrieved, it is displayed on the console.</p>\n\n</div>", 
 "user": "5b8400d7185d5e00036dcc3b", 
 "isReference": false, 
 "slug": "tutorial-retrieve-an-identity", 
 "link_url": "", 
 "project": "5bda01cad172e200499a20a9", 
 "__v": 2, 
 "_id": "60e604b4762bd40057ebe13e", 
 "order": 1, 
 "updates": []
}