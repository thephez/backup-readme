{
 "metadata": {
  "keywords": "",
  "robots": "index",
  "description": "",
  "title": "",
  "image": []
 },
 "mdx": {
  "altBody": "",
  "status": "rdmd"
 },
 "api": {
  "results": {
   "codes": [
    {
     "status": 200,
     "language": "json",
     "code": "{}",
     "name": ""
    },
    {
     "status": 400,
     "language": "json",
     "code": "{}",
     "name": ""
    }
   ]
  },
  "auth": "required",
  "params": [],
  "url": "",
  "method": "get",
  "examples": {
   "codes": []
  }
 },
 "next": {
  "pages": [
   {
    "type": "doc",
    "icon": "file-text-o",
    "name": "Update Documents",
    "slug": "tutorial-update-documents",
    "category": "Tutorials"
   },
   {
    "type": "doc",
    "icon": "file-text-o",
    "name": "Delete Documents",
    "slug": "tutorial-delete-documents",
    "category": "Tutorials"
   }
  ],
  "description": ""
 },
 "algolia": {
  "translationFailure": false,
  "publishPending": false,
  "recordCount": 6,
  "updatedAt": "2023-09-12T13:19:14.700Z"
 },
 "reusableContent": [],
 "_id": "64f8a9df750465004742ad97",
 "version": "64f8a9df750465004742ae1d",
 "updatedAt": "2023-09-12T13:19:14.503Z",
 "createdAt": "2019-11-05T13:49:33.553Z",
 "project": "5bda01cad172e200499a20a9",
 "user": "5b8400d7185d5e00036dcc3b",
 "category": "64f8a9df750465004742ad6e",
 "updates": [
  "5e1396e7516ae8002e0054da",
  "5f2cffbcf04e9a005fc43d44"
 ],
 "link_external": false,
 "link_url": "",
 "sync_unique": "",
 "hidden": false,
 "isReference": false,
 "order": 4,
 "body": "# Overview\n\nIn this tutorial we will retrieve some of the current data from a data contract. Data is stored in the form of documents as described in the Dash Platform Protocol [Document explanation](explanation-platform-protocol-document).\n\n## Prerequisites\n\n- [General prerequisites](tutorials-introduction#prerequisites) (Node.js / Dash SDK installed)\n- A Dash Platform Contract ID: [Tutorial: Register a Data Contract](tutorial-register-a-data-contract) \n\n# Code\n\n```javascript\nconst Dash = require('dash');\n\nconst clientOpts = {\n  network: 'testnet',\n  apps: {\n    tutorialContract: {\n      contractId: '8cvMFwa2YbEsNNoc1PXfTacy2PVq2SzVnkZLeQSzjfi6',\n    },\n  },\n};\nconst client = new Dash.Client(clientOpts);\n\nconst getDocuments = async () => {\n  return client.platform.documents.get('tutorialContract.note', {\n    limit: 2, // Only retrieve 2 document\n  });\n};\n\ngetDocuments()\n  .then((d) => {\n    for (const n of d) {\n      console.log('Document:\\n', n.toJSON());\n    }\n  })\n  .catch((e) => console.error('Something went wrong:\\n', e))\n  .finally(() => client.disconnect());\n```\n\n> \ud83d\udc4d Initializing the Client with a contract identity\n> \n> The example above shows how access to contract documents via `<contract name>.<contract document>` syntax (e.g. `tutorialContract.note`) can be enabled by passing a contract identity to the constructor. Please refer to the [Dash SDK documentation](https://github.com/dashevo/platform/blob/master/packages/js-dash-sdk/docs/getting-started/multiple-apps.md) for details.\n\n## Queries\n\nThe example code uses a very basic query to return only one result. More extensive querying capabilities are covered in the [query syntax reference](reference-query-syntax).\n\n# Example Document\n\nThe following examples show the structure of a `note` document (from the data contract registered in the tutorial) returned from the SDK when retrieved with various methods. \n\nThe values returned by `.toJSON()` include the base document properties (prefixed with `$`) present in all documents along with the data contract defined properties.\n\n> \ud83d\udcd8 \n> \n> Note: When using `.toJSON()`, binary data is displayed as a base64 string (since JSON is a text-based format).\n\nThe values returned by `.getData()` (and also shown in the console.dir() `data` property) represent _only_ the properties defined in the `note` document described by the [tutorial data contract](tutorial-register-a-data-contract#code).\n\n```json .toJSON()\n{\n  \"$protocolVersion\": 0,\n  \"$id\": \"6LpCQhkXYV2vqkv1UWByew4xQ6BaxxnGkhfMZsN3SV9u\",\n  \"$type\": \"note\",\n  \"$dataContractId\": \"3iaEhdyAVbmSjd59CT6SCrqPjfAfMdPTc8ksydgqSaWE\",\n  \"$ownerId\": \"CEPMcuBgAWeaCXiP2gJJaStANRHW6b158UPvL1C8zw2W\",\n  \"$revision\": 1,\n  \"message\": \"Tutorial CI Test @ Fri, 23 Jul 2021 13:12:13 GMT\"\n}\n```\n```json .getData()\n{\n  \"Tutorial CI Test @ Fri, 23 Jul 2021 13:12:13 GMT\"\n}\n```\n```text .data.message\nTutorial CI Test @ Fri, 23 Jul 2021 13:12:13 GMT\n```\n```json console.dir(document)\nDocument {\n  dataContract: DataContract {\n    protocolVersion: 0,\n    id: Identifier(32) [Uint8Array] [\n       40,  93, 196, 112,  38, 188,  51, 122,\n      149,  59,  21,  39, 147, 119,  87,  53,\n      236,  60,  97,  42,  31,  82, 135, 120,\n       68, 188,  55, 153, 226, 198, 181, 139\n    ],\n    ownerId: Identifier(32) [Uint8Array] [\n      166, 222,  98,  87, 193,  19,  82,  37,\n       50, 118, 210,  64, 103, 122,  28, 155,\n      168,  21, 198, 134, 142, 151, 153, 136,\n       46,  64, 223,  74, 215, 153, 158, 167\n    ],\n    schema: 'https://schema.dash.org/dpp-0-4-0/meta/data-contract',\n    documents: { note: [Object] },\n    '$defs': undefined,\n    binaryProperties: { note: {} },\n    metadata: Metadata { blockHeight: 526, coreChainLockedHeight: 542795 }\n  },\n  entropy: undefined,\n  protocolVersion: 0,\n  id: Identifier(32) [Uint8Array] [\n     79,  93, 213, 226,  76,  79, 205, 191,\n    165, 190,  68,  28,   8,  83,  61, 226,\n    222, 248,  48, 235, 147, 110, 181, 229,\n      7,  66,  65, 230, 100, 194, 192, 156\n  ],\n  type: 'note',\n  dataContractId: Identifier(32) [Uint8Array] [\n     40,  93, 196, 112,  38, 188,  51, 122,\n    149,  59,  21,  39, 147, 119,  87,  53,\n    236,  60,  97,  42,  31,  82, 135, 120,\n     68, 188,  55, 153, 226, 198, 181, 139\n  ],\n  ownerId: Identifier(32) [Uint8Array] [\n    166, 222,  98,  87, 193,  19,  82,  37,\n     50, 118, 210,  64, 103, 122,  28, 155,\n    168,  21, 198, 134, 142, 151, 153, 136,\n     46,  64, 223,  74, 215, 153, 158, 167\n  ],\n  revision: 1,\n  data: { message: 'Tutorial CI Test @ Fri, 23 Jul 2021 13:12:13 GMT' },\n  metadata: Metadata { blockHeight: 526, coreChainLockedHeight: 542795 }\n}\n```\n\n# What's happening\n\nAfter we initialize the Client, we request some documents. The `client.platform.documents.get` method takes two arguments: a record locator and a query object. The records locator consists of an app name (e.g. `tutorialContract`) and the top-level document type requested, (e.g. `note`).\n\n> \ud83d\udcd8 DPNS Contract\n> \n> Note: Access to the DPNS contract is built into the Dash SDK. DPNS documents may be accessed via the `dpns` app name (e.g. `dpns.domain`).\n\nIf you need more than the first 100 documents, you'll have to make additional requests with `startAt` incremented by 100 each time. In the future, the Dash SDK may return documents with paging information to make this easier and reveal how many documents are returned in total.",
 "excerpt": "Retrieve data from Dash Platform",
 "slug": "tutorial-retrieve-documents",
 "type": "basic",
 "title": "Retrieve Documents",
 "__v": 3,
 "parentDoc": "64f8a9df750465004742adc8",
 "pendingAlgoliaPublish": false,
 "previousSlug": "",
 "slugUpdatedAt": "2020-07-22T19:28:34.026Z",
 "deprecated": false,
 "icon": "",
 "revision": 6,
 "isApi": false,
 "id": "64f8a9df750465004742ad97",
 "body_html": "<h1 class=\"heading heading-1 header-scroll\" align=\"\"><div class=\"heading-anchor anchor waypoint\" id=\"overview\"></div><div class=\"heading-text\"><div id=\"section-overview\" class=\"heading-anchor_backwardsCompatibility\"></div>Overview</div><a aria-label=\"Skip link to Overview\" class=\"heading-anchor-icon fa fa-anchor\" href=\"#overview\"></a></h1>\n<p>In this tutorial we will retrieve some of the current data from a data contract. Data is stored in the form of documents as described in the Dash Platform Protocol <a href=\"explanation-platform-protocol-document\" target=\"\" title=\"\">Document explanation</a>.</p>\n<h2 class=\"heading heading-2 header-scroll\" align=\"\"><div class=\"heading-anchor anchor waypoint\" id=\"prerequisites\"></div><div class=\"heading-text\"><div id=\"section-prerequisites\" class=\"heading-anchor_backwardsCompatibility\"></div>Prerequisites</div><a aria-label=\"Skip link to Prerequisites\" class=\"heading-anchor-icon fa fa-anchor\" href=\"#prerequisites\"></a></h2>\n<ul>\n<li><a href=\"tutorials-introduction#prerequisites\" target=\"\" title=\"\">General prerequisites</a> (Node.js / Dash SDK installed)</li>\n<li>A Dash Platform Contract ID: <a href=\"tutorial-register-a-data-contract\" target=\"\" title=\"\">Tutorial: Register a Data Contract</a> </li>\n</ul>\n<h1 class=\"heading heading-1 header-scroll\" align=\"\"><div class=\"heading-anchor anchor waypoint\" id=\"code\"></div><div class=\"heading-text\"><div id=\"section-code\" class=\"heading-anchor_backwardsCompatibility\"></div>Code</div><a aria-label=\"Skip link to Code\" class=\"heading-anchor-icon fa fa-anchor\" href=\"#code\"></a></h1>\n<div class=\"CodeTabs CodeTabs_initial theme-light\"><div class=\"CodeTabs-toolbar\" role=\"tablist\"><button aria-selected=\"true\" class=\"CodeTabs_active\" role=\"tab\" type=\"button\">JavaScript</button></div><div class=\"CodeTabs-inner\" role=\"tabpanel\"><pre><button aria-label=\"Copy Code\" class=\"rdmd-code-copy fa\"></button><code class=\"rdmd-code lang-javascript theme-light\" data-lang=\"javascript\" name=\"\" tabindex=\"0\">const Dash = require(&#x27;dash&#x27;);\n\nconst clientOpts = {\n  network: &#x27;testnet&#x27;,\n  apps: {\n    tutorialContract: {\n      contractId: &#x27;8cvMFwa2YbEsNNoc1PXfTacy2PVq2SzVnkZLeQSzjfi6&#x27;,\n    },\n  },\n};\nconst client = new Dash.Client(clientOpts);\n\nconst getDocuments = async () =&gt; {\n  return client.platform.documents.get(&#x27;tutorialContract.note&#x27;, {\n    limit: 2, // Only retrieve 2 document\n  });\n};\n\ngetDocuments()\n  .then((d) =&gt; {\n    for (const n of d) {\n      console.log(&#x27;Document:\\n&#x27;, n.toJSON());\n    }\n  })\n  .catch((e) =&gt; console.error(&#x27;Something went wrong:\\n&#x27;, e))\n  .finally(() =&gt; client.disconnect());\n</code></pre></div></div>\n<blockquote class=\"callout callout_okay\" theme=\"\ud83d\udc4d\"><h2 class=\"callout-heading\"><span class=\"callout-icon\">\ud83d\udc4d</span><p>Initializing the Client with a contract identity</p></h2><p>The example above shows how access to contract documents via <button aria-label=\"Copy Code\" class=\"rdmd-code-copy fa\"></button><code class=\"rdmd-code lang- theme-light\" data-lang=\"\" name=\"\" tabindex=\"0\">&lt;contract name&gt;.&lt;contract document&gt;</code> syntax (e.g. <button aria-label=\"Copy Code\" class=\"rdmd-code-copy fa\"></button><code class=\"rdmd-code lang- theme-light\" data-lang=\"\" name=\"\" tabindex=\"0\">tutorialContract.note</code>) can be enabled by passing a contract identity to the constructor. Please refer to the <a href=\"https://github.com/dashevo/platform/blob/master/packages/js-dash-sdk/docs/getting-started/multiple-apps.md\" target=\"\" title=\"\">Dash SDK documentation</a> for details.</p></blockquote>\n<h2 class=\"heading heading-2 header-scroll\" align=\"\"><div class=\"heading-anchor anchor waypoint\" id=\"queries\"></div><div class=\"heading-text\"><div id=\"section-queries\" class=\"heading-anchor_backwardsCompatibility\"></div>Queries</div><a aria-label=\"Skip link to Queries\" class=\"heading-anchor-icon fa fa-anchor\" href=\"#queries\"></a></h2>\n<p>The example code uses a very basic query to return only one result. More extensive querying capabilities are covered in the <a href=\"reference-query-syntax\" target=\"\" title=\"\">query syntax reference</a>.</p>\n<h1 class=\"heading heading-1 header-scroll\" align=\"\"><div class=\"heading-anchor anchor waypoint\" id=\"example-document\"></div><div class=\"heading-text\"><div id=\"section-example-document\" class=\"heading-anchor_backwardsCompatibility\"></div>Example Document</div><a aria-label=\"Skip link to Example Document\" class=\"heading-anchor-icon fa fa-anchor\" href=\"#example-document\"></a></h1>\n<p>The following examples show the structure of a <button aria-label=\"Copy Code\" class=\"rdmd-code-copy fa\"></button><code class=\"rdmd-code lang- theme-light\" data-lang=\"\" name=\"\" tabindex=\"0\">note</code> document (from the data contract registered in the tutorial) returned from the SDK when retrieved with various methods. </p>\n<p>The values returned by <button aria-label=\"Copy Code\" class=\"rdmd-code-copy fa\"></button><code class=\"rdmd-code lang- theme-light\" data-lang=\"\" name=\"\" tabindex=\"0\">.toJSON()</code> include the base document properties (prefixed with <button aria-label=\"Copy Code\" class=\"rdmd-code-copy fa\"></button><code class=\"rdmd-code lang- theme-light\" data-lang=\"\" name=\"\" tabindex=\"0\">$</code>) present in all documents along with the data contract defined properties.</p>\n<blockquote class=\"callout callout_info\" theme=\"\ud83d\udcd8\"><h2 class=\"callout-heading empty\"><span class=\"callout-icon\">\ud83d\udcd8</span></h2><p>Note: When using <button aria-label=\"Copy Code\" class=\"rdmd-code-copy fa\"></button><code class=\"rdmd-code lang- theme-light\" data-lang=\"\" name=\"\" tabindex=\"0\">.toJSON()</code>, binary data is displayed as a base64 string (since JSON is a text-based format).</p></blockquote>\n<p>The values returned by <button aria-label=\"Copy Code\" class=\"rdmd-code-copy fa\"></button><code class=\"rdmd-code lang- theme-light\" data-lang=\"\" name=\"\" tabindex=\"0\">.getData()</code> (and also shown in the console.dir() <button aria-label=\"Copy Code\" class=\"rdmd-code-copy fa\"></button><code class=\"rdmd-code lang- theme-light\" data-lang=\"\" name=\"\" tabindex=\"0\">data</code> property) represent <em>only</em> the properties defined in the <button aria-label=\"Copy Code\" class=\"rdmd-code-copy fa\"></button><code class=\"rdmd-code lang- theme-light\" data-lang=\"\" name=\"\" tabindex=\"0\">note</code> document described by the <a href=\"tutorial-register-a-data-contract#code\" target=\"\" title=\"\">tutorial data contract</a>.</p>\n<div class=\"CodeTabs CodeTabs_initial theme-light\"><div class=\"CodeTabs-toolbar\" role=\"tablist\"><button aria-selected=\"true\" class=\"CodeTabs_active\" role=\"tab\" type=\"button\">.toJSON()</button><button aria-selected=\"false\" class=\"\" role=\"tab\" type=\"button\">.getData()</button><button aria-selected=\"false\" class=\"\" role=\"tab\" type=\"button\">.data.message</button><button aria-selected=\"false\" class=\"\" role=\"tab\" type=\"button\">console.dir(document)</button></div><div class=\"CodeTabs-inner\" role=\"tabpanel\"><pre><button aria-label=\"Copy Code\" class=\"rdmd-code-copy fa\"></button><code class=\"rdmd-code lang-json theme-light\" data-lang=\"json\" name=\".toJSON()\" tabindex=\"0\">{\n  &quot;$protocolVersion&quot;: 0,\n  &quot;$id&quot;: &quot;6LpCQhkXYV2vqkv1UWByew4xQ6BaxxnGkhfMZsN3SV9u&quot;,\n  &quot;$type&quot;: &quot;note&quot;,\n  &quot;$dataContractId&quot;: &quot;3iaEhdyAVbmSjd59CT6SCrqPjfAfMdPTc8ksydgqSaWE&quot;,\n  &quot;$ownerId&quot;: &quot;CEPMcuBgAWeaCXiP2gJJaStANRHW6b158UPvL1C8zw2W&quot;,\n  &quot;$revision&quot;: 1,\n  &quot;message&quot;: &quot;Tutorial CI Test @ Fri, 23 Jul 2021 13:12:13 GMT&quot;\n}\n</code></pre><pre><button aria-label=\"Copy Code\" class=\"rdmd-code-copy fa\"></button><code class=\"rdmd-code lang-json theme-light\" data-lang=\"json\" name=\".getData()\" tabindex=\"0\">{\n  &quot;Tutorial CI Test @ Fri, 23 Jul 2021 13:12:13 GMT&quot;\n}\n</code></pre><pre><button aria-label=\"Copy Code\" class=\"rdmd-code-copy fa\"></button><code class=\"rdmd-code lang-text theme-light\" data-lang=\"text\" name=\".data.message\" tabindex=\"0\">Tutorial CI Test @ Fri, 23 Jul 2021 13:12:13 GMT\n</code></pre><pre><button aria-label=\"Copy Code\" class=\"rdmd-code-copy fa\"></button><code class=\"rdmd-code lang-json theme-light\" data-lang=\"json\" name=\"console.dir(document)\" tabindex=\"0\">Document {\n  dataContract: DataContract {\n    protocolVersion: 0,\n    id: Identifier(32) [Uint8Array] [\n       40,  93, 196, 112,  38, 188,  51, 122,\n      149,  59,  21,  39, 147, 119,  87,  53,\n      236,  60,  97,  42,  31,  82, 135, 120,\n       68, 188,  55, 153, 226, 198, 181, 139\n    ],\n    ownerId: Identifier(32) [Uint8Array] [\n      166, 222,  98,  87, 193,  19,  82,  37,\n       50, 118, 210,  64, 103, 122,  28, 155,\n      168,  21, 198, 134, 142, 151, 153, 136,\n       46,  64, 223,  74, 215, 153, 158, 167\n    ],\n    schema: &#x27;https://schema.dash.org/dpp-0-4-0/meta/data-contract&#x27;,\n    documents: { note: [Object] },\n    &#x27;$defs&#x27;: undefined,\n    binaryProperties: { note: {} },\n    metadata: Metadata { blockHeight: 526, coreChainLockedHeight: 542795 }\n  },\n  entropy: undefined,\n  protocolVersion: 0,\n  id: Identifier(32) [Uint8Array] [\n     79,  93, 213, 226,  76,  79, 205, 191,\n    165, 190,  68,  28,   8,  83,  61, 226,\n    222, 248,  48, 235, 147, 110, 181, 229,\n      7,  66,  65, 230, 100, 194, 192, 156\n  ],\n  type: &#x27;note&#x27;,\n  dataContractId: Identifier(32) [Uint8Array] [\n     40,  93, 196, 112,  38, 188,  51, 122,\n    149,  59,  21,  39, 147, 119,  87,  53,\n    236,  60,  97,  42,  31,  82, 135, 120,\n     68, 188,  55, 153, 226, 198, 181, 139\n  ],\n  ownerId: Identifier(32) [Uint8Array] [\n    166, 222,  98,  87, 193,  19,  82,  37,\n     50, 118, 210,  64, 103, 122,  28, 155,\n    168,  21, 198, 134, 142, 151, 153, 136,\n     46,  64, 223,  74, 215, 153, 158, 167\n  ],\n  revision: 1,\n  data: { message: &#x27;Tutorial CI Test @ Fri, 23 Jul 2021 13:12:13 GMT&#x27; },\n  metadata: Metadata { blockHeight: 526, coreChainLockedHeight: 542795 }\n}\n</code></pre></div></div>\n<h1 class=\"heading heading-1 header-scroll\" align=\"\"><div class=\"heading-anchor anchor waypoint\" id=\"whats-happening\"></div><div class=\"heading-text\"><div id=\"section-whats-happening\" class=\"heading-anchor_backwardsCompatibility\"></div>What&#x27;s happening</div><a aria-label=\"Skip link to What&#x27;s happening\" class=\"heading-anchor-icon fa fa-anchor\" href=\"#whats-happening\"></a></h1>\n<p>After we initialize the Client, we request some documents. The <button aria-label=\"Copy Code\" class=\"rdmd-code-copy fa\"></button><code class=\"rdmd-code lang- theme-light\" data-lang=\"\" name=\"\" tabindex=\"0\">client.platform.documents.get</code> method takes two arguments: a record locator and a query object. The records locator consists of an app name (e.g. <button aria-label=\"Copy Code\" class=\"rdmd-code-copy fa\"></button><code class=\"rdmd-code lang- theme-light\" data-lang=\"\" name=\"\" tabindex=\"0\">tutorialContract</code>) and the top-level document type requested, (e.g. <button aria-label=\"Copy Code\" class=\"rdmd-code-copy fa\"></button><code class=\"rdmd-code lang- theme-light\" data-lang=\"\" name=\"\" tabindex=\"0\">note</code>).</p>\n<blockquote class=\"callout callout_info\" theme=\"\ud83d\udcd8\"><h2 class=\"callout-heading\"><span class=\"callout-icon\">\ud83d\udcd8</span><p>DPNS Contract</p></h2><p>Note: Access to the DPNS contract is built into the Dash SDK. DPNS documents may be accessed via the <button aria-label=\"Copy Code\" class=\"rdmd-code-copy fa\"></button><code class=\"rdmd-code lang- theme-light\" data-lang=\"\" name=\"\" tabindex=\"0\">dpns</code> app name (e.g. <button aria-label=\"Copy Code\" class=\"rdmd-code-copy fa\"></button><code class=\"rdmd-code lang- theme-light\" data-lang=\"\" name=\"\" tabindex=\"0\">dpns.domain</code>).</p></blockquote>\n<p>If you need more than the first 100 documents, you&#x27;ll have to make additional requests with <button aria-label=\"Copy Code\" class=\"rdmd-code-copy fa\"></button><code class=\"rdmd-code lang- theme-light\" data-lang=\"\" name=\"\" tabindex=\"0\">startAt</code> incremented by 100 each time. In the future, the Dash SDK may return documents with paging information to make this easier and reveal how many documents are returned in total.</p>"
}