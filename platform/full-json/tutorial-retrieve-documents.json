{
 "pendingAlgoliaPublish": false, 
 "parentDoc": "6035408f7bfb31002c3da31c", 
 "excerpt": "Retrieve data from Dash Platform", 
 "api": {
  "url": "", 
  "params": [], 
  "method": "get", 
  "auth": "required", 
  "results": {
   "codes": [
    {
     "status": 200, 
     "code": "{}", 
     "name": "", 
     "language": "json"
    }, 
    {
     "status": 400, 
     "code": "{}", 
     "name": "", 
     "language": "json"
    }
   ]
  }
 }, 
 "previousSlug": "", 
 "updatedAt": "2021-03-11T18:11:52.698Z", 
 "id": "6035408f7bfb31002c3da2e7", 
 "sync_unique": "", 
 "isApi": false, 
 "createdAt": "2019-11-05T13:49:33.553Z", 
 "category": "6035408f7bfb31002c3da2c1", 
 "title": "Retrieve Documents", 
 "next": {
  "description": "", 
  "pages": [
   {
    "category": "Tutorials", 
    "slug": "tutorial-update-documents", 
    "type": "doc", 
    "name": "Update Documents", 
    "icon": "file-text-o"
   }, 
   {
    "category": "Tutorials", 
    "slug": "tutorial-delete-documents", 
    "type": "doc", 
    "name": "Delete Documents", 
    "icon": "file-text-o"
   }
  ]
 }, 
 "version": "6035408f7bfb31002c3da325", 
 "slugUpdatedAt": "2020-07-22T19:28:34.026Z", 
 "hidden": false, 
 "type": "basic", 
 "metadata": {
  "image": [], 
  "description": "", 
  "title": ""
 }, 
 "body": "# Overview\n\nIn this tutorial we will retrieve some of the current data from a data contract. Data is stored in the form of documents as described in the Dash Platform Protocol [Document explanation](explanation-platform-protocol-document).\n\n## Prerequisites\n- [node.js](https://nodejs.org/en/) (v12+)\n- Basic familiarity with JavaScript asychronous functions using [async/await](https://developer.mozilla.org/en-US/docs/Learn/JavaScript/Asynchronous/Async_await)\n- The Dash JavaScript SDK is initialized (covered in [Connecting to a Network](tutorial-connecting-to-testnet))\n\n# Code\n[block:callout]\n{\n  \"type\": \"info\",\n  \"title\": \"Initializing the Client with a contract identity\",\n  \"body\": \"The example below shows how access to contract documents via `<contract name>.<contract document>` syntax (e.g. `tutorialContract.note`) can be enabled by passing a contract identity to the constructor. Please refer to the [Dash JavaScript SDK documentation](https://dashevo.github.io/js-dash-sdk/#/getting-started/multiple-apps) for details.\"\n}\n[/block]\n\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"const Dash = require('dash');\\n\\nconst clientOpts = {\\n  apps: {\\n    tutorialContract: {\\n      contractId: 'C96rCVpck4RdBQXG3zzP5KH4RKzfKVTsmTauu8FQenJi',\\n    },\\n  },\\n};\\nconst client = new Dash.Client(clientOpts);\\n\\nconst getDocuments = async () => {\\n  return client.platform.documents.get(\\n    'tutorialContract.note',\\n    {\\n      limit: 2, // Only retrieve 1 document\\n    },\\n  );\\n};\\n\\ngetDocuments()\\n  .then((d) => console.log(d))\\n  .catch((e) => console.error('Something went wrong:\\\\n', e))\\n  .finally(() => client.disconnect());\",\n      \"language\": \"javascript\"\n    }\n  ]\n}\n[/block]\n## Queries\n\nThe example code uses a very basic query to return only one result. More extensive querying capabilities are covered in the [query syntax reference](reference-query-syntax).\n\n# Example Document\n\nThe following examples show the structure of a `note` document (from the data contract registered in the tutorial) returned from the SDK when retrieved with various methods. \n\nThe values returned by `.toJSON()` include the base document properties (prefixed with `$`) present in all documents along with the data contract defined properties. \n[block:callout]\n{\n  \"type\": \"info\",\n  \"body\": \"Note: When using `.toJSON()`, binary data is displayed as a base64 string (since JSON is a text-based format).\"\n}\n[/block]\nThe values returned by `.getData()` (and also shown in the console.dir() `data` property) represent _only_ the properties defined in the `note` document described by the [tutorial data contract](tutorial-register-a-data-contract#code).\n[block:code]\n{\n  \"codes\": [\n    {\n      \"code\": \"{\\n  '$protocolVersion': 0,\\n  '$id': 'H1WzTmPnHnM8oitLVXa7oZG7ZrrunkxChGqHXdh1U8QC',\\n  '$type': 'note',\\n  '$dataContractId': 'C96rCVpck4RdBQXG3zzP5KH4RKzfKVTsmTauu8FQenJi',\\n  '$ownerId': 'FgPx8YHbWv4rMeiP52DfmnAXGtjiCiSaNKCbgT7eCRxh',\\n  '$revision': 1,\\n  message: 'Tutorial CI Test @ Mon, 08 Mar 2021 14:34:45 GMT'\\n}\",\n      \"language\": \"json\",\n      \"name\": \".toJSON()\"\n    },\n    {\n      \"code\": \"{\\n  message: 'Tutorial CI Test @ Mon, 08 Mar 2021 14:34:45 GMT'\\n}\",\n      \"language\": \"json\",\n      \"name\": \".getData()\"\n    },\n    {\n      \"code\": \"Tutorial CI Test @ Mon, 08 Mar 2021 14:34:45 GMT\",\n      \"language\": \"text\",\n      \"name\": \".data.message\"\n    },\n    {\n      \"code\": \"Document {\\n  dataContract: DataContract {\\n    protocolVersion: 0,\\n    id: Identifier(32) [Uint8Array] [\\n      165, 131, 208, 183,  34, 175, 156, 255,\\n      138,  15, 177, 121, 155, 214,  14, 208,\\n      114, 110, 251, 113, 225,  37, 161, 163,\\n      232,   3,  56,  20,  98,  91, 250,  15\\n    ],\\n    ownerId: Identifier(32) [Uint8Array] [\\n      218,  27, 56,   0,  87, 229, 149,  21,\\n      146, 180, 72, 240, 101,  46, 163, 209,\\n        9, 132, 87,   7,  55,  33, 235,  71,\\n      209, 147, 84, 126, 169,  89,   8, 198\\n    ],\\n    schema: 'https://schema.dash.org/dpp-0-4-0/meta/data-contract',\\n    documents: { note: [Object] },\\n    definitions: undefined,\\n    binaryProperties: { note: {} }\\n  },\\n  entropy: undefined,\\n  protocolVersion: 0,\\n  id: Identifier(32) [Uint8Array] [\\n    237, 220, 230, 196,  50, 167, 132,\\n      8, 188, 140,  16,  42, 131,  66,\\n     10,  36, 145, 124, 245,  37, 243,\\n    139, 252, 222, 119, 221,  98, 224,\\n    110, 246, 156, 117\\n  ],\\n  type: 'note',\\n  dataContractId: Identifier(32) [Uint8Array] [\\n    165, 131, 208, 183,  34, 175, 156, 255,\\n    138,  15, 177, 121, 155, 214,  14, 208,\\n    114, 110, 251, 113, 225,  37, 161, 163,\\n    232,   3,  56,  20,  98,  91, 250,  15\\n  ],\\n  ownerId: Identifier(32) [Uint8Array] [\\n    218,  27, 56,   0,  87, 229, 149,  21,\\n    146, 180, 72, 240, 101,  46, 163, 209,\\n      9, 132, 87,   7,  55,  33, 235,  71,\\n    209, 147, 84, 126, 169,  89,   8, 198\\n  ],\\n  revision: 1,\\n  data: { message: 'Tutorial CI Test @ Mon, 08 Mar 2021 14:34:45 GMT' }\\n}\",\n      \"language\": \"json\",\n      \"name\": \"console.dir(document)\"\n    }\n  ]\n}\n[/block]\n# What's happening\n\nAfter we initialize the Client, we request some documents. The `client.platform.documents.get` method takes two arguments: a record locator and a query object. The records locator consists of an app name (e.g. `tutorialContract`) and the top-level document type requested, (e.g. `note`).\n[block:callout]\n{\n  \"type\": \"info\",\n  \"title\": \"DPNS Contract\",\n  \"body\": \"Note: Access to the DPNS contract is built into the Dash SDK. DPNS documents may be accessed via the `dpns` app name (e.g. `dpns.domain`).\"\n}\n[/block]\nIf you need more than the first 100 documents, you'll have to make additional requests with `startAt` incremented by 100 each time. In the future, the Dash SDK may return documents with paging information to make this easier and reveal how many documents are returned in total.", 
 "link_external": false, 
 "body_html": "<div class=\"magic-block-textarea\"><h1 class=\"header-scroll\"><div class=\"anchor waypoint\" id=\"section-overview\"></div>Overview<a class=\"fa fa-anchor\" href=\"#section-overview\"></a></h1>\n<p>In this tutorial we will retrieve some of the current data from a data contract. Data is stored in the form of documents as described in the Dash Platform Protocol <a href=\"explanation-platform-protocol-document\">Document explanation</a>.</p>\n<h2 class=\"header-scroll\"><div class=\"anchor waypoint\" id=\"section-prerequisites\"></div>Prerequisites<a class=\"fa fa-anchor\" href=\"#section-prerequisites\"></a></h2>\n<ul>\n<li ><a href=\"https://nodejs.org/en/\">node.js</a> (v12+)</li><li >Basic familiarity with JavaScript asychronous functions using <a href=\"https://developer.mozilla.org/en-US/docs/Learn/JavaScript/Asynchronous/Async_await\">async/await</a></li><li >The Dash JavaScript SDK is initialized (covered in <a href=\"tutorial-connecting-to-testnet\">Connecting to a Network</a>)</li></ul>\n<h1 class=\"header-scroll\"><div class=\"anchor waypoint\" id=\"section-code\"></div>Code<a class=\"fa fa-anchor\" href=\"#section-code\"></a></h1>\n\n</div>\n<div class=\"magic-block-callout type-info \">\n\t<h3><i title=\"Info\" class=\"fa fa-info-circle\"></i>Initializing the Client with a contract identity\n\t</h3>\n\t<div class=\"callout-body\"><p>The example below shows how access to contract documents via <code>&lt;contract name&gt;.&lt;contract document&gt;</code> syntax (e.g. <code>tutorialContract.note</code>) can be enabled by passing a contract identity to the constructor. Please refer to the <a href=\"https://dashevo.github.io/js-dash-sdk/#/getting-started/multiple-apps\">Dash JavaScript SDK documentation</a> for details.</p>\n\n\t</div>\n</div>\n<div class=\"magic-block-code\">\n\t<ul class=\"block-code-header\">\n\t\t<li><a href=\"\" ng-click=\"showCode(0)\" ng-class=\"{active: (0 == tab)}\">JavaScript</a></li>\n\t</ul>\n\t<div class=\"block-code-code\"><span ng-if=\"tab == 0\">\n\t\t\t<button ng-click=\"copyCode(103)\" class=\"copy-code-button\"><span ng-show=\"!copied\" class=\"fa fa-clipboard\"></span><span ng-show=\"copied\" class=\"fa fa-check\"></span></button>\n\t\t\t<textarea ng-non-bindable=\"ng-non-bindable\" style=\"position: absolute; left: -10000px;\" id=\"text-code-103\">const Dash = require('dash');\n\nconst clientOpts = {\n  apps: {\n    tutorialContract: {\n      contractId: 'C96rCVpck4RdBQXG3zzP5KH4RKzfKVTsmTauu8FQenJi',\n    },\n  },\n};\nconst client = new Dash.Client(clientOpts);\n\nconst getDocuments = async () =&gt; {\n  return client.platform.documents.get(\n    'tutorialContract.note',\n    {\n      limit: 2, // Only retrieve 1 document\n    },\n  );\n};\n\ngetDocuments()\n  .then((d) =&gt; console.log(d))\n  .catch((e) =&gt; console.error('Something went wrong:\\n', e))\n  .finally(() =&gt; client.disconnect());</textarea>\n\t\t\t<pre id=\"code-103\"><code><span class='cm-s-neo'><span class=\"cm-keyword\">const</span> <span class=\"cm-def\">Dash</span> <span class=\"cm-operator\">=</span> <span class=\"cm-variable\">require</span>(<span class=\"cm-string\">'dash'</span>);\n\n<span class=\"cm-keyword\">const</span> <span class=\"cm-def\">clientOpts</span> <span class=\"cm-operator\">=</span> {\n  <span class=\"cm-property\">apps</span>: {\n    <span class=\"cm-property\">tutorialContract</span>: {\n      <span class=\"cm-property\">contractId</span>: <span class=\"cm-string\">'C96rCVpck4RdBQXG3zzP5KH4RKzfKVTsmTauu8FQenJi'</span>,\n    },\n  },\n};\n<span class=\"cm-keyword\">const</span> <span class=\"cm-def\">client</span> <span class=\"cm-operator\">=</span> <span class=\"cm-keyword\">new</span> <span class=\"cm-variable\">Dash</span>.<span class=\"cm-property\">Client</span>(<span class=\"cm-variable\">clientOpts</span>);\n\n<span class=\"cm-keyword\">const</span> <span class=\"cm-def\">getDocuments</span> <span class=\"cm-operator\">=</span> <span class=\"cm-keyword\">async</span> () <span class=\"cm-operator\">=&gt;</span> {\n  <span class=\"cm-keyword\">return</span> <span class=\"cm-variable\">client</span>.<span class=\"cm-property\">platform</span>.<span class=\"cm-property\">documents</span>.<span class=\"cm-property\">get</span>(\n    <span class=\"cm-string\">'tutorialContract.note'</span>,\n    {\n      <span class=\"cm-property\">limit</span>: <span class=\"cm-number\">2</span>, <span class=\"cm-comment\">&#47;&#47; Only retrieve 1 document</span>\n    },\n  );\n};\n\n<span class=\"cm-variable\">getDocuments</span>()\n  .<span class=\"cm-property\">then</span>((<span class=\"cm-def\">d</span>) <span class=\"cm-operator\">=&gt;</span> <span class=\"cm-variable\">console</span>.<span class=\"cm-property\">log</span>(<span class=\"cm-variable-2\">d</span>))\n  .<span class=\"cm-property\">catch</span>((<span class=\"cm-def\">e</span>) <span class=\"cm-operator\">=&gt;</span> <span class=\"cm-variable\">console</span>.<span class=\"cm-property\">error</span>(<span class=\"cm-string\">'Something went wrong:\\n'</span>, <span class=\"cm-variable-2\">e</span>))\n  .<span class=\"cm-property\">finally</span>(() <span class=\"cm-operator\">=&gt;</span> <span class=\"cm-variable\">client</span>.<span class=\"cm-property\">disconnect</span>());</span></code></pre></span>\n\t</div>\n</div>\n<div class=\"magic-block-textarea\"><h2 class=\"header-scroll\"><div class=\"anchor waypoint\" id=\"section-queries\"></div>Queries<a class=\"fa fa-anchor\" href=\"#section-queries\"></a></h2>\n<p>The example code uses a very basic query to return only one result. More extensive querying capabilities are covered in the <a href=\"reference-query-syntax\">query syntax reference</a>.</p>\n<h1 class=\"header-scroll\"><div class=\"anchor waypoint\" id=\"section-example-document\"></div>Example Document<a class=\"fa fa-anchor\" href=\"#section-example-document\"></a></h1>\n<p>The following examples show the structure of a <code>note</code> document (from the data contract registered in the tutorial) returned from the SDK when retrieved with various methods. </p>\n<p>The values returned by <code>.toJSON()</code> include the base document properties (prefixed with <code>$</code>) present in all documents along with the data contract defined properties. </p>\n\n</div>\n<div class=\"magic-block-callout type-info no-title\"><span class=\"noTitleIcon\"><i title=\"Info\" class=\"fa fa-info-circle\"></i></span>\n\t<div class=\"callout-body\"><p>Note: When using <code>.toJSON()</code>, binary data is displayed as a base64 string (since JSON is a text-based format).</p>\n\n\t</div>\n</div>\n<div class=\"magic-block-textarea\"><p>The values returned by <code>.getData()</code> (and also shown in the console.dir() <code>data</code> property) represent <em>only</em> the properties defined in the <code>note</code> document described by the <a href=\"tutorial-register-a-data-contract#code\">tutorial data contract</a>.</p>\n\n</div>\n<div class=\"magic-block-code\">\n\t<ul class=\"block-code-header\">\n\t\t<li><a href=\"\" ng-click=\"showCode(0)\" ng-class=\"{active: (0 == tab)}\">.toJSON()</a></li>\n\t\t<li><a href=\"\" ng-click=\"showCode(1)\" ng-class=\"{active: (1 == tab)}\">.getData()</a></li>\n\t\t<li><a href=\"\" ng-click=\"showCode(2)\" ng-class=\"{active: (2 == tab)}\">.data.message</a></li>\n\t\t<li><a href=\"\" ng-click=\"showCode(3)\" ng-class=\"{active: (3 == tab)}\">console.dir(document)</a></li>\n\t</ul>\n\t<div class=\"block-code-code\"><span ng-if=\"tab == 0\">\n\t\t\t<button ng-click=\"copyCode(891)\" class=\"copy-code-button\"><span ng-show=\"!copied\" class=\"fa fa-clipboard\"></span><span ng-show=\"copied\" class=\"fa fa-check\"></span></button>\n\t\t\t<textarea ng-non-bindable=\"ng-non-bindable\" style=\"position: absolute; left: -10000px;\" id=\"text-code-891\">{\n  '$protocolVersion': 0,\n  '$id': 'H1WzTmPnHnM8oitLVXa7oZG7ZrrunkxChGqHXdh1U8QC',\n  '$type': 'note',\n  '$dataContractId': 'C96rCVpck4RdBQXG3zzP5KH4RKzfKVTsmTauu8FQenJi',\n  '$ownerId': 'FgPx8YHbWv4rMeiP52DfmnAXGtjiCiSaNKCbgT7eCRxh',\n  '$revision': 1,\n  message: 'Tutorial CI Test @ Mon, 08 Mar 2021 14:34:45 GMT'\n}</textarea>\n\t\t\t<pre id=\"code-891\"><code><span class='cm-s-neo'>{\n  <span class=\"cm-property\">'$protocolVersion'</span>: <span class=\"cm-number\">0</span>,\n  <span class=\"cm-property\">'$id'</span>: <span class=\"cm-string\">'H1WzTmPnHnM8oitLVXa7oZG7ZrrunkxChGqHXdh1U8QC'</span>,\n  <span class=\"cm-property\">'$type'</span>: <span class=\"cm-string\">'note'</span>,\n  <span class=\"cm-property\">'$dataContractId'</span>: <span class=\"cm-string\">'C96rCVpck4RdBQXG3zzP5KH4RKzfKVTsmTauu8FQenJi'</span>,\n  <span class=\"cm-property\">'$ownerId'</span>: <span class=\"cm-string\">'FgPx8YHbWv4rMeiP52DfmnAXGtjiCiSaNKCbgT7eCRxh'</span>,\n  <span class=\"cm-property\">'$revision'</span>: <span class=\"cm-number\">1</span>,\n  <span class=\"cm-property\">message</span>: <span class=\"cm-string\">'Tutorial CI Test @ Mon, 08 Mar 2021 14:34:45 GMT'</span>\n}</span></code></pre></span><span ng-if=\"tab == 1\">\n\t\t\t<button ng-click=\"copyCode(732)\" class=\"copy-code-button\"><span ng-show=\"!copied\" class=\"fa fa-clipboard\"></span><span ng-show=\"copied\" class=\"fa fa-check\"></span></button>\n\t\t\t<textarea ng-non-bindable=\"ng-non-bindable\" style=\"position: absolute; left: -10000px;\" id=\"text-code-732\">{\n  message: 'Tutorial CI Test @ Mon, 08 Mar 2021 14:34:45 GMT'\n}</textarea>\n\t\t\t<pre id=\"code-732\"><code><span class='cm-s-neo'>{\n  <span class=\"cm-property\">message</span>: <span class=\"cm-string\">'Tutorial CI Test @ Mon, 08 Mar 2021 14:34:45 GMT'</span>\n}</span></code></pre></span><span ng-if=\"tab == 2\">\n\t\t\t<button ng-click=\"copyCode(111)\" class=\"copy-code-button\"><span ng-show=\"!copied\" class=\"fa fa-clipboard\"></span><span ng-show=\"copied\" class=\"fa fa-check\"></span></button>\n\t\t\t<textarea ng-non-bindable=\"ng-non-bindable\" style=\"position: absolute; left: -10000px;\" id=\"text-code-111\">Tutorial CI Test @ Mon, 08 Mar 2021 14:34:45 GMT</textarea>\n\t\t\t<pre id=\"code-111\"><code>Tutorial CI Test @ Mon, 08 Mar 2021 14:34:45 GMT</code></pre></span><span ng-if=\"tab == 3\">\n\t\t\t<button ng-click=\"copyCode(417)\" class=\"copy-code-button\"><span ng-show=\"!copied\" class=\"fa fa-clipboard\"></span><span ng-show=\"copied\" class=\"fa fa-check\"></span></button>\n\t\t\t<textarea ng-non-bindable=\"ng-non-bindable\" style=\"position: absolute; left: -10000px;\" id=\"text-code-417\">Document {\n  dataContract: DataContract {\n    protocolVersion: 0,\n    id: Identifier(32) [Uint8Array] [\n      165, 131, 208, 183,  34, 175, 156, 255,\n      138,  15, 177, 121, 155, 214,  14, 208,\n      114, 110, 251, 113, 225,  37, 161, 163,\n      232,   3,  56,  20,  98,  91, 250,  15\n    ],\n    ownerId: Identifier(32) [Uint8Array] [\n      218,  27, 56,   0,  87, 229, 149,  21,\n      146, 180, 72, 240, 101,  46, 163, 209,\n        9, 132, 87,   7,  55,  33, 235,  71,\n      209, 147, 84, 126, 169,  89,   8, 198\n    ],\n    schema: 'https://schema.dash.org/dpp-0-4-0/meta/data-contract',\n    documents: { note: [Object] },\n    definitions: undefined,\n    binaryProperties: { note: {} }\n  },\n  entropy: undefined,\n  protocolVersion: 0,\n  id: Identifier(32) [Uint8Array] [\n    237, 220, 230, 196,  50, 167, 132,\n      8, 188, 140,  16,  42, 131,  66,\n     10,  36, 145, 124, 245,  37, 243,\n    139, 252, 222, 119, 221,  98, 224,\n    110, 246, 156, 117\n  ],\n  type: 'note',\n  dataContractId: Identifier(32) [Uint8Array] [\n    165, 131, 208, 183,  34, 175, 156, 255,\n    138,  15, 177, 121, 155, 214,  14, 208,\n    114, 110, 251, 113, 225,  37, 161, 163,\n    232,   3,  56,  20,  98,  91, 250,  15\n  ],\n  ownerId: Identifier(32) [Uint8Array] [\n    218,  27, 56,   0,  87, 229, 149,  21,\n    146, 180, 72, 240, 101,  46, 163, 209,\n      9, 132, 87,   7,  55,  33, 235,  71,\n    209, 147, 84, 126, 169,  89,   8, 198\n  ],\n  revision: 1,\n  data: { message: 'Tutorial CI Test @ Mon, 08 Mar 2021 14:34:45 GMT' }\n}</textarea>\n\t\t\t<pre id=\"code-417\"><code><span class='cm-s-neo'><span class=\"cm-variable\">Document</span> {\n  <span class=\"cm-property\">dataContract</span>: <span class=\"cm-variable\">DataContract</span> {\n    <span class=\"cm-variable\">protocolVersion</span>: <span class=\"cm-number\">0</span>,\n    <span class=\"cm-variable\">id</span>: <span class=\"cm-variable\">Identifier</span>(<span class=\"cm-number\">32</span>) [<span class=\"cm-variable\">Uint8Array</span>] [\n      <span class=\"cm-number\">165</span>, <span class=\"cm-number\">131</span>, <span class=\"cm-number\">208</span>, <span class=\"cm-number\">183</span>,  <span class=\"cm-number\">34</span>, <span class=\"cm-number\">175</span>, <span class=\"cm-number\">156</span>, <span class=\"cm-number\">255</span>,\n      <span class=\"cm-number\">138</span>,  <span class=\"cm-number\">15</span>, <span class=\"cm-number\">177</span>, <span class=\"cm-number\">121</span>, <span class=\"cm-number\">155</span>, <span class=\"cm-number\">214</span>,  <span class=\"cm-number\">14</span>, <span class=\"cm-number\">208</span>,\n      <span class=\"cm-number\">114</span>, <span class=\"cm-number\">110</span>, <span class=\"cm-number\">251</span>, <span class=\"cm-number\">113</span>, <span class=\"cm-number\">225</span>,  <span class=\"cm-number\">37</span>, <span class=\"cm-number\">161</span>, <span class=\"cm-number\">163</span>,\n      <span class=\"cm-number\">232</span>,   <span class=\"cm-number\">3</span>,  <span class=\"cm-number\">56</span>,  <span class=\"cm-number\">20</span>,  <span class=\"cm-number\">98</span>,  <span class=\"cm-number\">91</span>, <span class=\"cm-number\">250</span>,  <span class=\"cm-number\">15</span>\n    ],\n    <span class=\"cm-variable\">ownerId</span>: <span class=\"cm-variable\">Identifier</span>(<span class=\"cm-number\">32</span>) [<span class=\"cm-variable\">Uint8Array</span>] [\n      <span class=\"cm-number\">218</span>,  <span class=\"cm-number\">27</span>, <span class=\"cm-number\">56</span>,   <span class=\"cm-number\">0</span>,  <span class=\"cm-number\">87</span>, <span class=\"cm-number\">229</span>, <span class=\"cm-number\">149</span>,  <span class=\"cm-number\">21</span>,\n      <span class=\"cm-number\">146</span>, <span class=\"cm-number\">180</span>, <span class=\"cm-number\">72</span>, <span class=\"cm-number\">240</span>, <span class=\"cm-number\">101</span>,  <span class=\"cm-number\">46</span>, <span class=\"cm-number\">163</span>, <span class=\"cm-number\">209</span>,\n        <span class=\"cm-number\">9</span>, <span class=\"cm-number\">132</span>, <span class=\"cm-number\">87</span>,   <span class=\"cm-number\">7</span>,  <span class=\"cm-number\">55</span>,  <span class=\"cm-number\">33</span>, <span class=\"cm-number\">235</span>,  <span class=\"cm-number\">71</span>,\n      <span class=\"cm-number\">209</span>, <span class=\"cm-number\">147</span>, <span class=\"cm-number\">84</span>, <span class=\"cm-number\">126</span>, <span class=\"cm-number\">169</span>,  <span class=\"cm-number\">89</span>,   <span class=\"cm-number\">8</span>, <span class=\"cm-number\">198</span>\n    ],\n    <span class=\"cm-variable\">schema</span>: <span class=\"cm-string\">'https:&#47;&#47;schema.dash.org&#47;dpp-0-4-0&#47;meta&#47;data-contract'</span>,\n    <span class=\"cm-variable\">documents</span>: { <span class=\"cm-property\">note</span>: [<span class=\"cm-variable\">Object</span>] },\n    <span class=\"cm-variable\">definitions</span>: <span class=\"cm-atom\">undefined</span>,\n    <span class=\"cm-variable\">binaryProperties</span>: { <span class=\"cm-property\">note</span>: {} }\n  },\n  <span class=\"cm-variable\">entropy</span>: <span class=\"cm-atom\">undefined</span>,\n  <span class=\"cm-variable\">protocolVersion</span>: <span class=\"cm-number\">0</span>,\n  <span class=\"cm-variable\">id</span>: <span class=\"cm-variable\">Identifier</span>(<span class=\"cm-number\">32</span>) [<span class=\"cm-variable\">Uint8Array</span>] [\n    <span class=\"cm-number\">237</span>, <span class=\"cm-number\">220</span>, <span class=\"cm-number\">230</span>, <span class=\"cm-number\">196</span>,  <span class=\"cm-number\">50</span>, <span class=\"cm-number\">167</span>, <span class=\"cm-number\">132</span>,\n      <span class=\"cm-number\">8</span>, <span class=\"cm-number\">188</span>, <span class=\"cm-number\">140</span>,  <span class=\"cm-number\">16</span>,  <span class=\"cm-number\">42</span>, <span class=\"cm-number\">131</span>,  <span class=\"cm-number\">66</span>,\n     <span class=\"cm-number\">10</span>,  <span class=\"cm-number\">36</span>, <span class=\"cm-number\">145</span>, <span class=\"cm-number\">124</span>, <span class=\"cm-number\">245</span>,  <span class=\"cm-number\">37</span>, <span class=\"cm-number\">243</span>,\n    <span class=\"cm-number\">139</span>, <span class=\"cm-number\">252</span>, <span class=\"cm-number\">222</span>, <span class=\"cm-number\">119</span>, <span class=\"cm-number\">221</span>,  <span class=\"cm-number\">98</span>, <span class=\"cm-number\">224</span>,\n    <span class=\"cm-number\">110</span>, <span class=\"cm-number\">246</span>, <span class=\"cm-number\">156</span>, <span class=\"cm-number\">117</span>\n  ],\n  <span class=\"cm-variable\">type</span>: <span class=\"cm-string\">'note'</span>,\n  <span class=\"cm-variable\">dataContractId</span>: <span class=\"cm-variable\">Identifier</span>(<span class=\"cm-number\">32</span>) [<span class=\"cm-variable\">Uint8Array</span>] [\n    <span class=\"cm-number\">165</span>, <span class=\"cm-number\">131</span>, <span class=\"cm-number\">208</span>, <span class=\"cm-number\">183</span>,  <span class=\"cm-number\">34</span>, <span class=\"cm-number\">175</span>, <span class=\"cm-number\">156</span>, <span class=\"cm-number\">255</span>,\n    <span class=\"cm-number\">138</span>,  <span class=\"cm-number\">15</span>, <span class=\"cm-number\">177</span>, <span class=\"cm-number\">121</span>, <span class=\"cm-number\">155</span>, <span class=\"cm-number\">214</span>,  <span class=\"cm-number\">14</span>, <span class=\"cm-number\">208</span>,\n    <span class=\"cm-number\">114</span>, <span class=\"cm-number\">110</span>, <span class=\"cm-number\">251</span>, <span class=\"cm-number\">113</span>, <span class=\"cm-number\">225</span>,  <span class=\"cm-number\">37</span>, <span class=\"cm-number\">161</span>, <span class=\"cm-number\">163</span>,\n    <span class=\"cm-number\">232</span>,   <span class=\"cm-number\">3</span>,  <span class=\"cm-number\">56</span>,  <span class=\"cm-number\">20</span>,  <span class=\"cm-number\">98</span>,  <span class=\"cm-number\">91</span>, <span class=\"cm-number\">250</span>,  <span class=\"cm-number\">15</span>\n  ],\n  <span class=\"cm-variable\">ownerId</span>: <span class=\"cm-variable\">Identifier</span>(<span class=\"cm-number\">32</span>) [<span class=\"cm-variable\">Uint8Array</span>] [\n    <span class=\"cm-number\">218</span>,  <span class=\"cm-number\">27</span>, <span class=\"cm-number\">56</span>,   <span class=\"cm-number\">0</span>,  <span class=\"cm-number\">87</span>, <span class=\"cm-number\">229</span>, <span class=\"cm-number\">149</span>,  <span class=\"cm-number\">21</span>,\n    <span class=\"cm-number\">146</span>, <span class=\"cm-number\">180</span>, <span class=\"cm-number\">72</span>, <span class=\"cm-number\">240</span>, <span class=\"cm-number\">101</span>,  <span class=\"cm-number\">46</span>, <span class=\"cm-number\">163</span>, <span class=\"cm-number\">209</span>,\n      <span class=\"cm-number\">9</span>, <span class=\"cm-number\">132</span>, <span class=\"cm-number\">87</span>,   <span class=\"cm-number\">7</span>,  <span class=\"cm-number\">55</span>,  <span class=\"cm-number\">33</span>, <span class=\"cm-number\">235</span>,  <span class=\"cm-number\">71</span>,\n    <span class=\"cm-number\">209</span>, <span class=\"cm-number\">147</span>, <span class=\"cm-number\">84</span>, <span class=\"cm-number\">126</span>, <span class=\"cm-number\">169</span>,  <span class=\"cm-number\">89</span>,   <span class=\"cm-number\">8</span>, <span class=\"cm-number\">198</span>\n  ],\n  <span class=\"cm-variable\">revision</span>: <span class=\"cm-number\">1</span>,\n  <span class=\"cm-variable\">data</span>: { <span class=\"cm-property\">message</span>: <span class=\"cm-string\">'Tutorial CI Test @ Mon, 08 Mar 2021 14:34:45 GMT'</span> }\n}</span></code></pre></span>\n\t</div>\n</div>\n<div class=\"magic-block-textarea\"><h1 class=\"header-scroll\"><div class=\"anchor waypoint\" id=\"section-whats-happening\"></div>What&#39;s happening<a class=\"fa fa-anchor\" href=\"#section-whats-happening\"></a></h1>\n<p>After we initialize the Client, we request some documents. The <code>client.platform.documents.get</code> method takes two arguments: a record locator and a query object. The records locator consists of an app name (e.g. <code>tutorialContract</code>) and the top-level document type requested, (e.g. <code>note</code>).</p>\n\n</div>\n<div class=\"magic-block-callout type-info \">\n\t<h3><i title=\"Info\" class=\"fa fa-info-circle\"></i>DPNS Contract\n\t</h3>\n\t<div class=\"callout-body\"><p>Note: Access to the DPNS contract is built into the Dash SDK. DPNS documents may be accessed via the <code>dpns</code> app name (e.g. <code>dpns.domain</code>).</p>\n\n\t</div>\n</div>\n<div class=\"magic-block-textarea\"><p>If you need more than the first 100 documents, you&#39;ll have to make additional requests with <code>startAt</code> incremented by 100 each time. In the future, the Dash SDK may return documents with paging information to make this easier and reveal how many documents are returned in total.</p>\n\n</div>", 
 "updates": [
  "5e1396e7516ae8002e0054da", 
  "5f2cffbcf04e9a005fc43d44"
 ], 
 "isReference": false, 
 "slug": "tutorial-retrieve-documents", 
 "link_url": "", 
 "project": "5bda01cad172e200499a20a9", 
 "__v": 3, 
 "_id": "6035408f7bfb31002c3da2e7", 
 "order": 3, 
 "user": "5b8400d7185d5e00036dcc3b"
}